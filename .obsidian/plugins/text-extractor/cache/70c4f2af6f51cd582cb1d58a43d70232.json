{"path":"002 Files/Books/Logika_dla_informatyków.pdf","text":"Logika dla informatyk´ow Jerzy Tiuryn Jerzy Tyszkiewicz Pawe l Urzyczyn Pa´zdziernik 2006 Wnioskowanie o prawdziwo´sci rozmaitych stwierdze´n jest powszednim zaj ,eciem matematy- k´ow i nie tylko matematyk´ow. Dlatego ﬁlozofowie i matematycy od dawna zajmowali si ,e sys- tematyzacj ,a metod wnioskowania i kryteri´ow ich poprawno´sci. Oczywi´scie ostatecznym kry- terium poprawno´sci rozumowania pozostaje zawsze zdrowy rozs ,adek i przekonanie o s luszno´sci wywodu. Logika, kt´ora narodzi la si ,e jako nauka o rozumowaniu, jest jednak wa˙znym i potrzeb- nym narz ,edziem, kt´ore to przekonanie u latwia. Szczeg´oln ,a rol ,e w´sr´od rozmaitych dzia l´ow logiki zajmuje logika matematyczna, po´swi ,econa opisowi i analizie j ,ezyka matematyki oraz poprawno´sci wnioskowa´n matematycznych. Jest to dyscyplina w pewnym sensie paradoksalna: b ,ed ,ac sama cz ,e´sci ,a matematyki, traktuje matema- tyk ,e jako sw´oj przedmiot zainteresowania. Dla unikni ,ecia ” b l ,ednego ko la” musimy wi ,ec tutaj zauwa˙zy´c, ˙ze logika formalna nie opisuje rzeczywistych wywod´ow matematyka, ale ich uprosz- czone modele, kt´ore bez zastrze˙ze´n mo˙zna uwa˙za´c za zwyk le obiekty matematyczne. Mimo tego ograniczenia, logika matematyczna dostarcza niezwykle wa˙znych wniosk´ow o charakterze ﬁlozoﬁcznym i metamatematycznym. Logika formalna by la kiedy´s ezoteryczn ,a nauk ,a z pogranicza ﬁlozoﬁi i matematyki, potem sta la si ,e pe lnoprawnym dzia lem czystej matematyki. Jeszcze p´o´zniej, wraz z narodzinami informatyki, zacz ,e la by´c coraz bardziej postrzegana jako dziedzina matematyki stosowanej, a zw laszcza podstaw informatyki. Logika matematyczna stosowana jest dzi´s szeroko w informatyce. Semantyka i weryﬁkacja program´ow, teoria z lo˙zono´sci i teoria automat´ow, programowanie funkcyjne i programowanie w logice — to tylko niekt´ore z dzia l´ow informatyki, w kt´orych metody logiki formalnej sta ly si ,e standardowym narz ,edziem zar´owno badacza jak i praktyka. 1 Rachunek zda´n Jak powiedzieli´smy wy˙zej, logika matematyczna zajmuje si ,e badaniem rozmaitych system´ow formalnych, modeluj ,acych rzeczywiste sposoby wnioskowania matematycznego. Do najprost- szych takich system´ow nale˙z ,a r´o˙zne warianty logiki zdaniowej zwanej te˙z rachunkiem zda´n. J ,ezyk rachunku zda´n jest bardzo prosty. Nie ma w nim wyra˙ze´n stwierdzaj ,acych jaki´s stan rzeczy, zaj´scie jakich´s fakt´ow, czy te˙z wyra˙ze´n orzekaj ,acych o w lasno´sciach obiekt´ow. Przed- miotem naszego zainteresowania s ,a tu tylko mo˙zliwe zale˙zno´sci pomi ,edzy stwierdzeniami (zda- niami orzekaj ,acymi), oraz to w jaki spos´ob prawdziwo´s´c zda´n z lo˙zonych zale˙zy od prawdzi- 1 wo´sci ich sk ladowych. Sens samych sk ladowych pozostaje tu ca lkowicie dowolny i nieistotny. Dlatego w rachunku zda´n odpowiadaj ,a im po prostu zmienne zdaniowe. Zdania z lo˙zone budu- jemy ze zmiennych za pomoc ,a sp´ojnik´ow logicznych takich jak alternatywa ∨, koniunkcja ∧, negacja ¬, czy implikacja →. Wygodne s ,a te˙z sta le logiczne ⊥ (fa lsz) i ⊤ (prawda), kt´ore mo˙zna uwa˙za´c za zeroargumentowe sp´ojniki logiczne. Dlatego nasza pierwsza deﬁnicja jest taka: Deﬁnicja 1.1 Ustalamy pewien przeliczalnie niesko´nczony zbi´or ZZ symboli, kt´ore b ,edziemy nazywa´c zmiennymi zdaniowymi i zwykle oznacza´c literami p, q, itp. Poj ,ecie formu ly zdanio- wej deﬁniujemy przez indukcj ,e: • Zmienne zdaniowe oraz ⊥ i ⊤ s ,a formu lami zdaniowymi; • Je´sli napis ϕ jest formu l ,a zdaniow ,a, to tak˙ze napis ¬ϕ jest formu l ,a zdaniow ,a; • Je´sli napisy ϕ i ψ s ,a formu lami zdaniowymi to napisy (ϕ → ψ), (ϕ ∨ ψ) i (ϕ ∧ ψ) te˙z s ,a formu lami zdaniowymi. Inaczej m´owi ,ac, formu ly zdaniowe to elementy najmniejszego zbioru napis´ow FZ, zawiera- j ,acego ZZ ∪ {⊥, ⊤} i takiego, ˙ze dla dowolnych ϕ, ψ ∈ FZ tak˙ze ¬ϕ, (ϕ → ψ), (ϕ ∨ ψ), (ϕ ∧ ψ) nale˙z ,a do FZ. Konwencje notacyjne: Dla pe lnej jednoznaczno´sci sk ladni nasze formu ly s ,a w pe lni nawia- sowane. W praktyce wiele nawias´ow pomijamy, stosuj ,ac przy tym nast ,epuj ,ace priorytety: 1. Negacja; 2. Koniunkcja i alternatywa; 3. Implikacja. Zatem na przyk lad wyra˙zenie ¬ϕ ∨ ψ → ϑ oznacza ((¬ϕ ∨ ψ) → ϑ), ale napis ϕ ∨ ψ ∧ ϑ jest niepoprawny. 1.1 Znaczenie formu l W logice klasycznej interpretacj ,a formu ly jest warto´s´c logiczna tj. ” prawda” (1) lub ” fa lsz” (0). Aby okre´sli´c warto´s´c formu ly zdaniowej trzeba jednak najpierw ustali´c warto´sci zmiennych. Deﬁnicja 1.2 Przez warto´sciowanie zdaniowe rozumiemy dowoln ,a funkcj ,e ϱ, kt´ora zmien- nym zdaniowym przypisuje warto´sci logiczne 0 lub 1. Warto´s´c formu ly zdaniowej ϕ przy warto´sciowaniu ϱ oznaczamy przez [[ϕ]]ϱ i okre´slamy przez indukcj ,e: • [[⊥]]ϱ = 0 oraz [[⊤]]ϱ = 1; • [[p]]ϱ = ϱ(p), gdy p jest symbolem zdaniowym; 2 • [[¬ϕ]]ϱ = 1 − [[ϕ]]ϱ; • [[ϕ ∨ ψ]]ϱ = max{[[ϕ]]ϱ, [[ψ]]ϱ}; • [[ϕ ∧ ψ]]ϱ = min{[[ϕ]]ϱ, [[ψ]]ϱ}; • [[ϕ → ψ]]ϱ = 0, gdy [[ϕ]]ϱ = 1 i [[ψ]]ϱ = 0; • [[ϕ → ψ]]ϱ = 1, w przeciwnym przypadku. Latwo mo˙zna zauwa˙zy´c, ˙ze [[ϕ → ψ]]ϱ = max{[[ψ]]ϱ, 1 − [[ϕ]]ϱ}, czyli [[ϕ → ψ]]ϱ = [[¬ϕ ∨ ψ]]ϱ, dla dowolnego ϱ. A zatem zamiast formu ly ϕ → ψ mogliby´smy z r´ownym powodzeniem u˙zywa´c wyra˙zenia ¬ϕ ∨ ψ, lub te˙z odwrotnie: zamiast alternatywy ϕ ∨ ψ pisa´c ¬ϕ → ψ. Nasz wyb´or sp´ojnik´ow nie jest wi ,ec ” najoszcz ,edniejszy”, w istocie w logice klasycznej wystarczy u˙zywa´c np. implikacji i fa lszu ( ´Cwiczenie 6). Czasem i my b ,edziemy korzysta´c z tego wygodnego uproszczenia, przyjmuj ,ac, ˙ze ” oﬁcjalnymi” sp´ojnikami s ,a tylko implikacja i fa lsz, a pozosta le to skr´oty notacyjne, tj. ˙ze napisy ¬ϕ oznaczaj ,a odpowiednio ϕ → ⊥; ⊤ ¬⊥; ϕ ∨ ψ ¬ϕ → ψ; ϕ ∧ ψ ¬(ϕ → ¬ψ). B ,edziemy te˙z czasem pisa´c ϕ ↔ ψ zamiast (ϕ → ψ) ∧ (ψ → ϕ). Zauwa˙zmy, ˙ze [[ϕ ↔ ψ]]ϱ = 1 wtedy i tylko wtedy, gdy [[ϕ → ψ]]ϱ = [[ψ → ϕ]]ϱ. Cz ,esto stosowanym skr´otem jest notacja ⋁i∈I ϕi oznaczaj ,aca alternatyw ,e wszystkich for- mu l ϕi, gdzie i przebiega sko´nczony zbi´or I. Analogicznie stosuje si ,e zapis ⋀i∈I ϕi. Notacja i terminologia: Je´sli [[ϕ]]ϱ = 1 to piszemy te˙z ϱ |= ϕ lub |= ϕ[ϱ] i m´owimy, ˙ze ϕ jest spe lniona przez warto´sciowanie ϱ. Je´sli Γ jest zbiorem formu l zdaniowych, oraz ϱ |= γ dla wszystkich γ ∈ Γ, to piszemy ϱ |= Γ. Wreszcie Γ |= ϕ oznacza, ˙ze ka˙zde warto´sciowanie spe lniaj ,ace wszystkie formu ly z Γ spe lnia tak˙ze formu l ,e ϕ. M´owimy wtedy, ˙ze ϕ jest se- mantyczn ,a konsekwencj ,a zbioru Γ. Je´sli Γ = ∅ to zamiast Γ |= ϕ piszemy po prostu |= ϕ. Oznacza to, ˙ze formu la ϕ jest spe lniona przez ka˙zde warto´sciowanie. Na koniec powiedzmy jeszcze, ˙ze formu lami r´ownowa˙znymi nazywamy takie formu ly ϕ i ψ, kt´orych warto´sci przy ka˙zdym warto´sciowaniu s ,a takie same (tj. takie, ˙ze r´ownowa˙zno´s´c ϕ ↔ ψ jest tautologi ,a — patrz ni˙zej). Deﬁnicja 1.3 Formu la ϕ jest spe lnialna, gdy ϱ |= ϕ zachodzi dla pewnego warto´sciowania ρ. Je´sli za´s |= ϕ to m´owimy, ˙ze ϕ jest tautologi ,a (klasycznego) rachunku zda´n. Oczywi´scie ¬ϕ jest spe lnialna wtedy i tylko wtedy, gdy ϕ nie jest tautologi ,a. 1.2 Tautologie rachunku zda´n Niech S b ,edzie funkcj ,a przypisujac ,a symbolom zdaniowym pewne formu ly. Je´sli ϕ jest formu l ,a zdaniow ,a, to przez S(ϕ) oznaczymy formu l ,e otrzyman ,a z ϕ przez jednoczesn ,a zamian ,e ka˙zdego 3 wyst ,apienia zmiennej zdaniowej p na formu l ,e S(p). M´owimy, ˙ze formu la S(ϕ) jest instancj ,a schematu zdaniowego ϕ. U˙zywamy oznaczenia S(Γ) = {S(ψ) | ψ ∈ Γ}. Fakt 1.4 Je˙zeli Γ jest zbiorem formu l rachunku zda´n i Γ |= ϕ, to tak˙ze S(Γ) |= S(ϕ). W szczeg´olno´sci, je´sli ϕ jest tautologi ,a to S(ϕ) jest te˙z tautologi ,a. Dow´od: ´Cwiczenie. Przyk lad 1.5 Nast ,epuj ,ace formu ly (i wszystkie ich instancje) s ,a tautologiami rachunku zda´n: 1. ⊥ → p; 2. p → (q → p); 3. (p → (q → r)) → ((p → q) → (p → r)); 4. ((p → q) → p) → p; 5. p ∨ ¬p; 6. p → ¬¬p oraz ¬¬p → p; 7. (p → q) → (¬q → ¬p) oraz (¬q → ¬p) → (p → q); 8. p → (p ∨ q), q → (p ∨ q) oraz (p → r) → ((q → r) → (p ∨ q → r)); 9. (p ∧ q) → p, (p ∧ q) → q oraz (r → p) → ((r → q) → (r → (p ∧ q))); 10. ((p ∧ q) → r) ↔ (p → (q → r)); 11. ¬(p ∨ q) ↔ (¬p ∧ ¬q); 12. ¬(p ∧ q) ↔ (¬p ∨ ¬q); 13. (p → q) ↔ (¬p ∨ q); 14. ((p ↔ q) ↔ r) ↔ (p ↔ (q ↔ r)); 15. p ∨ ⊥ ↔ p oraz p ∧ ⊤ ↔ p. Dow´od: Latwy. Niekt´ore z powy˙zszych formu l wskazuj ,a na analogi ,e pomi ,edzy implikacj ,a i uporz ,adkowaniem (np. zawieraniem zbior´ow). Implikacj ,e p → q mo˙zna odczyta´c tak: ” warunek p jest silniejszy (mniejszy lub r´owny) od q”. Formu l ,e (1) czytamy wtedy: ” fa lsz jest najsilniejszym warunkiem (najmniejszym elementem)”. Formu ly (8) stwierdzaj ,a, ˙ze alternatywa p ∨ q jest najsilniejszym warunkiem, kt´ory wynika zar´owno z p jak i z q (czyli jest kresem g´ornym pary {p, q}, jak suma zbior´ow). Formu ly (9) wyra˙zaj ,a dualn ,a w lasno´s´c koniunkcji: to jest kres dolny, czyli najs labszy warunek implikuj ,acy oba argumenty. Prawa de Morgana (11,12) wskazuj ,a te˙z 4 na analogie koniunkcja – iloczyn, alternatywa – suma, negacja – dope lnienie. Ta ostatnia widoczna jest te˙z w prawach wy l ,aczonego ´srodka (5), podw´ojnej negacji (6) i kontrapozycji (7). O ile (9) wskazuje na analogi ,e pomi ,edzy koniunkcj ,a i iloczynem mnogo´sciowym, o tyle warto zauwa˙zy´c, ˙ze koniunkcja ma te˙z w lasno´sci podobne do iloczynu kartezja´nskiego. Je´sli zbi´or funkcji z A do B oznaczymy przez [A → B], to mamy (bardzo naturaln ,a) r´ownoliczno´s´c [A × B → C] ∼ [A → [B → C]]. Podobie´nstwo tego zwi ,azku do formu ly (10) nie jest wcale przypadkowe. Wr´ocimy do tego w Rozdziale 11. Formu la (13) wyra˙za implikacj ,e z pomoc ,a negacji i alternatywy i jest cz ,esto bardzo przydatna, gdy np. chcemy przekszta lci´c jak ,a´s formu l ,e do prostszej postaci. Formu la (2) m´owi, ˙ze dodatkowe za lo˙zenie mo˙zna zawsze zignorowa´c. Formu la (3) (prawo Frege) wyra˙za dystrybutywno´s´c implikacji wzgl ,edem siebie samej i mo˙ze by´c odczytywana tak: je´sli r wynika z q w kontek´scie p, to ten kontekst mo˙ze by´c w l ,aczony do za lo˙zenia i konkluzji. Formu la (4) (prawo Peirce’a) wyra˙za przy pomocy samej implikacji zasadnicz ,a w lasno´s´c logiki klasycznej: mo˙zliwo´s´c rozumowania przez zaprzeczenie. Sens prawa Peirce’a wida´c najlepiej gdy q jest fa lszem, otrzymujemy wtedy prawo Claviusa: (¬p → p) → p. Warto zauwa˙zy´c, ˙ze formu ly w parach (6) i (7) nie s ,a wcale tak symetryczne jak si ,e wydaje na pierwszy rzut oka. Na przyk lad, pierwsza z formu l (6) to w istocie p → ((p → ⊥) → ⊥). Wiedz ,ac, ˙ze p i p → ⊥, natychmiast zgadzamy si ,e na ⊥. Intuicyjne uzasadnienie drugiej formu ly jest za´s w istocie zwi ,azane z prawem (5). W lasno´sci ,a, kt´ora cz ,esto uchodzi naszej uwagi, jest l ,aczno´s´c r´ownowa˙zno´sci (14). W zwiazku z tym, wyra˙zenie ϕ ↔ ψ ↔ ϑ mo˙zna z czystym sumieniem pisa´c bez nawias´ow. Zwr´o´cmy jednak uwag ,e na to, ˙ze oznacza ono zupe lnie co innego ni˙z stwierdzenie ˙ze ϕ, ψ i ϑ s ,a sobie nawzajem r´ownowa˙zne! Ostatnie na li´scie s ,a dwie r´ownowa˙zno´sci wyra˙zaj ,ace tak ,a my´sl: fa lsz jest ” elementem neutral- nym” dla alternatywy, a prawda dla koniunkcji. Dlatego ⊥ mo˙zemy uwa˙za´c za ” pust ,a alter- natyw ,e” a ⊤ za ” pust ,a koniunkcj ,e”. Powy˙zej pomini ,eto dobrze znane prawa: l ,aczno´s´c i prze- mienno´s´c koniunkcji i alternatywy, ich wzajemn ,a dystrybutywno´s´c, przechodnio´s´c i zwrotno´s´c implikacji itp. 1.3 Posta´c normalna formu l Deﬁnicja 1.6 Ka˙zd ,a zmienn ,a zdaniow ,a i negacj ,e zmiennej zdaniowej nazwijmy litera lem. M´owimy, ˙ze formu la zdaniowa ϕ jest w koniunkcyjnej postaci normalnej, gdy ϕ jest koniunkcj ,a alternatyw litera l´ow, tj. ϕ = (p1 1 ∨ · · · ∨ pk1 1 ) ∧ · · · ∧ (p1 r ∨ · · · ∨ pkr r ), (*) gdzie r ≥ 0, ki ≥ 0, dla i = 0, . . . r, a wszystkie pi j s ,a litera lami. Przy tym pust ,a koniunkcj ,e (r = 0) uto˙zsamiamy w my´sl Przyk ladu 1.5(15) ze sta l ,a ⊤, a sta la ⊥ to tyle co koniunkcja z jednym pustym sk ladnikiem. Fakt 1.7 Dla ka˙zdej formu ly zdaniowej istnieje r´ownowa˙zna jej formu la w koniunkcyjnej postaci normalnej. 5 Dow´od: Dow´od jest przez indukcj ,e ze wzgl ,edu na d lugo´s´c formu ly. Symbole zdaniowe s ,a oczywi´scie w postaci normalnej. Zgodnie z nasz ,a deﬁnicj ,a, tak˙ze sta le logiczne s ,a postaciami normalnymi. Je´sli ϕ jest w postaci (*), to ¬ϕ mo˙zna przekszta lci´c w koniunkcyjn ,a posta´c normaln ,a stosuj ,ac prawa De Morgana i prawa dystrybutywno´sci: ψ ∨ (ϑ ∧ ζ) ↔ (ψ ∨ ϑ) ∧ (ψ ∨ ζ) ψ ∨ (ϑ ∨ ζ) ↔ (ψ ∨ ϑ) ∨ (ψ ∨ ζ). Podobnie post ,epujemy z alternatyw ,a dw´och formu l w postaci normalnej.1 Przypadek ko- niunkcji jest oczywisty, a implikacj ,e eliminujemy z pomoc ,a prawa 1.5(13). Szczeg´o ly pozos- tawiamy Czytelnikowi. ´Cwiczenia 1. Zbada´c, czy nast ,epuj ,ace formu ly s ,a tautologiami rachunku zda´n i czy s ,a spe lnialne: (a) (p → r) ∧ (q → s) ∧ (¬p ∨ ¬s) → (¬p ∨ ¬q); (b) (p → q) ∨ (q → r); (c) ((p → q) → r) ∧ ¬(((q → r) → r) → r)); (d) (p → q) ∧ (¬p → r) → (r → ¬q); (e) ((¬p → q) → r) → ¬(p → q); (f) p ∨ (¬p ∧ q) ∨ (¬p ∧ ¬q); (g) (p → q) ∨ (p → ¬q); (h) q ∨ r → (p ∨ q → p ∨ r); (i) (p ∨ q ∨ r) ∧ (q ∨ (¬p ∧ s)) ∧ (¬s ∨ q ∨ r) → q. 2. Czy nast ,epuj ,ace zbiory formu l s ,a spe lnialne? (a) {p → ¬q, q → ¬r, r → ¬p}; (b) {p → q, q → r, r ∨ s ↔ ¬q}; (c) {¬(¬q ∨ p), p ∨ ¬r, q → ¬r}; (d) {s → q, p ∨ ¬q, ¬(s ∧ p), s}. 3. Czy zachodz ,a nast ,epuj ,ace konsekwencje? (a) p ∧ q → ¬r, p |= r → ¬q; (b) p → q, p → (q → r) |= p → r; (c) p → (q → r), p → q |= q → r; (d) (p → q) → r, ¬p |= r; (e) (p → q) → r, ¬r |= p; (f) p → q, r → ¬q |= r → ¬p. 4. Dla dowolnej formu ly ϕ niech ˆϕ oznacza dualizacj ,e formu ly ϕ, tzn. formu l ,e powstaj ,ac ,a z ϕ przez zast ,apienie ka˙zdego wyst ,apienia ∧ symbolem ∨ oraz ka˙zdego wyst ,apienia ∨ symbolem ∧. (i) Dowie´s´c,˙ze ϕ jest tautologi ,a wtw, gdy ¬ ˆϕ jest tautologi ,a. (ii) Dowie´s´c, ˙ze ϕ ↔ ψ jest tautologi ,a wtw, gdy ˆϕ ↔ ˆψ jest tautologi ,a. 1Ta procedura jest niestety wyk ladnicza ( ´Cwiczenie 8). 6 5. Znale˙z´c formu l ,e zdaniow ,a ϕ, kt´ora jest spe lniona dok ladnie przy warto´sciowaniach ϱ spe lniaj ,a- cych warunki: (a) Dok ladnie dwie spo´sr´od warto´sci ϱ(p), ϱ(q) i ϱ(r) s ,a r´owne 1. (b) ϱ(p) = ϱ(q) ̸= ϱ(r). Rozwi ,azanie: Mo˙zna to robi´c na r´o˙zne sposoby, ale najpro´sciej po prostu wypisa´c alternatyw ,e koniunkcji, np. (p ∧ q ∧ ¬r) ∨ (p ∧ ¬q ∧ r). 6. Udowodni´c, ˙ze dla dowolnej funkcji f : {0, 1}k → {0, 1} istnieje formu la ϕ, w kt´orej wyst ,epuj ,a tylko sp´ojniki → i ⊥ oraz zmienne zdaniowe ze zbioru {p1, . . . , pk}, o tej w lasno´sci, ˙ze dla dowolnego warto´sciowania zdaniowego ϱ zachodzi r´owno´s´c [[ϕ]]ϱ = f (ϱ(p1), . . . , ϱ(pk)). (Inaczej m´owi ,ac, formu la ϕ deﬁniuje funkcj ,e zerojedynkow ,a f .) Wskaz´owka: Indukcja ze wzgl ,edu na k. 7. Niech X b ,edzie dowolnym zbiorem niepustym. Dowoln ,a funkcj ,e v : ZZ → P(X) nazwijmy warto´sciowaniem w zbiorze P(X). Ka˙zdej formule zdaniowej ϕ przypiszemy teraz pewien podzbi´or [[ϕ]]v zbioru X, kt´ory nazwiemy jej warto´sci ,a przy warto´sciowaniu v. • [[⊥]]v = ∅ oraz [[⊤]]v = X; • [[p]]v = v(p), gdy p jest symbolem zdaniowym; • [[¬ϕ]]v = X − [[ϕ]]v; • [[ϕ ∨ ψ]]v = [[ϕ]]v ∪ [[ψ]]v; • [[ϕ ∧ ψ]]v = [[ϕ]]v ∩ [[ψ]]v; • [[ϕ → ψ]]v = (X − [[ϕ]]v) ∪ [[ψ]]v. Udowodni´c, ˙ze formu la ϕ jest tautologi ,a rachunku zda´n wtedy i tylko wtedy, gdy jest prawdziwa w P(X), tj. gdy dla dowolnego v jej warto´sci ,a jest ca ly zbi´or X. 8. Uzupe lni´c szczeg´o ly dowodu Faktu 1.7. Pokaza´c, ˙ze d lugo´s´c postaci normalnej mo˙ze wzrosn ,a´c wyk ladniczo w stosunku do rozmiaru formu ly pocz ,atkowej. 9. Niech formu la ϕ → ψ b ,edzie tautologi ,a rachunku zda´n. Znale´z´c tak ,a formu l ,e ϑ, ˙ze: • Zar´owno ϕ → ϑ jak i ϑ → ψ s ,a tautologiami rachunku zda´n. • W formule ϑ wyst ,epuj ,a tylko te zmienne zdaniowe, kt´ore wyst ,epuj ,a zar´owno w ϕ jak i w ψ. 10. Niech ϕ(p) b ,edzie pewn ,a formu l ,a, w kt´orej wyst ,epuje zmienna zdaniowa p i niech q b ,edzie zmienn ,a zdaniow ,a nie wyst ,epuj ,ac ,a w ϕ(p). Przez ϕ(q) oznaczmy formu l ,e powsta l ,a z ϕ(p) przez zamian ,e wszystkich p na q. Udowodni´c, ˙ze je´sli ϕ(p), ϕ(q) |= p ↔ q to istnieje formu la ψ, nie zawieraj ,aca zmiennych p ani q, taka ˙ze ϕ(p) |= p ↔ ψ. 7 2 J ,ezyk logiki pierwszego rz ,edu. J ,ezyk logiki pierwszego rz ,edu2 mo˙zna traktowa´c jak rozszerzenie rachunku zda´n, pozwalaj ,ace formu lowa´c stwierdzenia o zale˙zno´sciach pomi ,edzy obiektami indywiduowymi (np. relacjach i funkcjach). Dzi ,eki zastosowaniu kwantyﬁkator´ow , odwo luj ,acych si ,e do ca lej zbiorowo´sci rozwa˙zanych obiekt´ow, mo˙zna w logice pierwszego rz ,edu wyra˙za´c w lasno´sci struktur rela- cyjnych oraz modelowa´c rozumowania dotycz ,ace takich struktur. Do zestawu symboli ra- chunku zda´n dodajemy nast ,epuj ,ace nowe sk ladniki syntaktyczne: • Symbole operacji i relacji (w tym symbol r´owno´sci =); • Zmienne indywiduowe, kt´orych warto´sci maj ,a przebiega´c rozwa˙zane dziedziny; • Kwantyﬁkatory, wi ,a˙z ,ace zmienne indywiduowe w formu lach. 2.1 Sk ladnia Symbole operacji i relacji s ,a podstawowymi sk ladnikami do budowy najprostszych formu l, tzw. formu l atomowych. Z tego wzgl ,edu w j ,ezyku pierwszego rz ,edu rezygnuje si ,e ze zmiennych zdaniowych. Deﬁnicja 2.1 Przez sygnatur,e Σ rozumie´c b ,edziemy rodzin ,e zbior´ow ΣF n , dla n ≥ 0 oraz rodzin ,e zbior´ow ΣR n , dla n ≥ 1. Elementy ΣF n b ,edziemy nazywa´c symbolami operacji n-ar- gumentowych, a elementy ΣR n b ,edziemy nazywa´c symbolami relacji n-argumentowych. Przyj- mujemy, ˙ze wszystkie te zbiory s ,a parami roz l ,aczne. Umawiamy si ,e te˙z, ˙ze znak r´owno´sci = nie nale˙zy do Σ. Symbol ten nie jest zwyk lym symbolem relacyjnym, ale jest traktowany na specjalnych prawach. W praktyce, sygnatura zwykle jest sko´nczona i zapisuje si ,e j ,a jako ci ,ag symboli. Np. ci ,ag z lo˙zony ze znak´ow +, ·, 0, 1 (o znanej ka˙zdemu liczbie argument´ow) tworzy sygnatur ,e j ,ezyka teorii cia l. Deﬁnicja 2.2 Ustalamy pewien niesko´nczony przeliczalny zbi´or X symboli, kt´ore b ,edziemy nazywa´c zmiennymi indywiduowymi i zwykle oznacza´c symbolami x, y, z. Zbi´or term´ow TΣ(X) nad sygnatur ,a Σ i zbiorem zmiennych X deﬁniujemy indukcyjnie: • Zmienne indywiduowe s ,a termami. • Dla ka˙zdego n ≥ 0 i ka˙zdego symbolu operacji f ∈ ΣF n , je´sli t1, . . . , tn s ,a termami, to f (t1, . . . , tn) jest te˙z termem. Zauwa˙zmy, ˙ze z powy˙zszej deﬁnicji wynika i˙z sta le sygnatury Σ (czyli symbole operacji ze- roargumentowych) s ,a termami. Deﬁnicja 2.3 Dla ka˙zdego termu t ∈ TΣ(X) deﬁniujemy zbi´or F V (t) zmiennych wyst ,epuj ,a- cych w t. Deﬁnicja jest indukcyjna: 2Logika pierwszego rz ,edu nazywana jest te˙z rachunkiem predykat´ow lub rachunkiem kwantyﬁkator´ow . 8 • F V (x) = {x}. • F V (f (t1, . . . , tn)) = ⋃n i=1 F V (ti). Deﬁnicja 2.4 Nast ,epnie zdeﬁniujemy formu ly atomowe j ,ezyka pierwszego rz ,edu. • Symbol fa lszu ⊥ jest formu l ,a atomow ,a. • Dla ka˙zdego n ≥ 1, ka˙zdego symbolu r ∈ ΣR n relacji n-argumentowej, oraz dla dowolnych term´ow t1, . . . , tn ∈ TΣ(X), napis r(t1, . . . , tn) jest formu l ,a atomow ,a. • Dla dowolnych term´ow t1, t2, napis (t1 = t2) jest formu l ,a atomow ,a. Konwencja: Niekt´ore dwuargumentowe symbole relacyjne (np. ≤) i funkcyjne (np. +, ·) s ,a zwyczajowo pisane pomi ,edzy argumentami. Na przyk lad formu l ,e atomow ,a ≤(x, y) zwykle piszemy jako ” x ≤ y”. Deﬁnicja 2.5 Formu ly nad sygnatur ,a Σ i zbiorem zmiennych indywiduowych X deﬁniujemy indukcyjnie. • Ka˙zda formu la atomowa jest formu l ,a. • Je´sli ϕ, ψ s ,a formu lami, to (ϕ → ψ) jest te˙z formu l ,a. • Je´sli ϕ jest formu l ,a a x ∈ X jest zmienn ,a indywiduow ,a, to ∀xϕ jest te˙z formu l ,a. Ponadto, dla ka˙zdej formu ly ϕ deﬁniujemy zbi´or zmiennych wolnych F V (ϕ) wyst ,epuj ,acych w tej formule: • F V (⊥) = ∅; • F V (r(t1, . . . , tn)) = ⋃n i=1 F V (ti); • F V (t1 = t2) = F V (t1) ∪ F V (t2); • F V (ϕ → ψ) = F V (ϕ) ∪ F V (ψ); • F V (∀xϕ) = F V (ϕ) − {x}. Formu l ,e bez kwantyﬁkator´ow nazywamy formu l ,a otwart ,a. Natomiast formu la bez zmiennych wolnych nazywa si ,e zdaniem, lub formu l ,a zamkni ,et ,a. Negacj ,e, koniunkcj ,e, alternatyw ,e, symbol prawdy i r´ownowa˙zno´s´c formu l deﬁniujemy podob- nie jak w przypadku rachunku zda´n. Kwantyﬁkator egzystencjalny zdeﬁniujemy jako skr´ot notacyjny przy pomocy uog´olnionego prawa De Morgana: ∃xϕ oznacza ¬∀x¬ϕ. 9 Zmienne wolne a zmienne zwi ,azane. W Deﬁnicji 2.5 nie zak ladamy, ˙ze x ∈ F V (ϕ). Zauwa˙zmy te˙z, ˙ze zmienna x mo˙ze wyst ,epowa´c w formule ϕ podczas gdy x ̸∈ F V (ϕ). Przez wyst ,apienie zmiennej indywiduowej x rozumiemy tu zwyk le pojawienie si ,e x w jakimkolwiek termie w ϕ. I tak na przyk lad w formule3 ∃x∀u(r(x, y) → ∀y∃x s(x, y, z)) zmienna u nie wyst ,epuje, podczas gdy x i y wystepuj ,a po dwa razy, a z wyst ,epuje jeden raz. Bardzo wa˙zn ,a rzecz ,a jest rozr´o˙znienie wyst ,apie´n zmiennych wolnych i zwi ,azanych w formu lach. Wszyst- kie wyst ,apienia zmiennych w formu lach atomowych s ,a wolne. Wolne (zwi ,azane) wyst ,apienia w formu lach ϕ i ψ pozostaj ,a wolne (zwi ,azane) w formule ϕ → ψ. Wszystkie wolne wyst ,apie- nia x w ϕ staj ,a si ,e zwi ,azanymi wyst ,apieniami w formule ∃xϕ (zwi ,azanymi przez dopisanie kwantyﬁkatora ∃), a charakter pozosta lych wyst ,apie´n jest taki sam w ϕ i w ∃xϕ. Przyk ladowo w formule ∃x∀u(r(x, y) → ∀y∃x s(x, y, z)) podkre´slone wyst ,apienie y jest wolne, a nie pod- kre´slone jest zwi ,azane. Obydwa wyst ,apienia x s ,a zwiazane, ale przez r´o˙zne kwantyﬁkatory. Na koniec uwaga o nazwach zmiennych zwi ,azanych. Rozr´o˙znienie pomi ,edzy zmiennymi wol- nymi a zwi ,azanymi jest analogiczne do rozr´o˙znenia pomiedzy identyﬁkatorami lokalnymi a globalnymi w j ,ezykach programowania. Globalne identyﬁkatory, widoczne na zewn ,atrz, odpowiadaj ,a zmiennym wolnym, podczas gdy lokalne identyﬁkatory (zwi ,azane np. deklaracj ,a w bloku) nie s ,a widoczne na zewn ,atrz zakresu ich deklaracji. Intuicyjnie naturalne jest oczeki- wanie, ˙ze zmiana zmiennej zwi ,azanej na inn ,a zmienn ,a (tak aby nie wprowadzi´c konﬂiktu wynikaj ,acego ze zmiany struktury wi ,aza´n) nie powinna zmienia´c znaczenia formu ly.4 Tak w istocie b ,edzie, jak si ,e przekonamy poni˙zej (Fakt 2.12). 2.2 Semantyka formu l Niech Σ b ,edzie sygnatur ,a. Struktura A nad sygnatur ,a Σ (lub po prostu Σ-struktura) to niepusty zbi´or A, zwany no´snikiem, wraz z interpretacj ,a ka˙zdego symbolu operacji f ∈ ΣF n jako funkcji n argumentowej f A : An → A oraz ka˙zdego symbolu relacji r ∈ ΣR n jako relacji n-argumentowej rA ⊆ An. (Na przyk lad, je´sli Σ sk lada si ,e z jednego symbolu relacji dwuar- gumentowej, to ka˙zdy graf zorientowany jest Σ-struktur ,a.) W praktyce, struktur ,e relacyjn ,a przedstawia si ,e jako krotk ,e postaci A = ⟨A, f A 1 , . . . , f A n , rA 1 , . . . , rA m⟩, gdzie f1, . . . , fn, r1, . . . , rm s ,a wszystkimi symbolami danej sygnatury. Cz ,esto, gdy b ,edzie jasne z kontekstu z jak ,a struk- tur ,a mamy do czynienia, b ,edziemy opuszcza´c nazw ,e struktury i pisa´c po prostu r, f, . . . zamiast rA, f A, . . . Warto´sciowaniem w Σ-strukturze A nazwiemy dowoln ,a funkcj ,e ϱ : X → A. Dla warto´sciowa- nia ϱ, zmiennej x ∈ X oraz elementu a ∈ A deﬁniujemy nowe warto´sciowanie ϱa x : X → A, b ,ed ,ace modyﬁkacj ,a warto´sciowania ϱ na argumencie x, w nast ,epuj ,acy spos´ob, ϱa x(y) = { ϱ(y), je´sli y ̸= x; a, w przeciwnym przypadku. Najpierw zdeﬁniujemy znaczenie term´ow. Warto´s´c termu t ∈ TΣ(X) w Σ-strukturze A przy warto´sciowaniu ϱ oznaczamy przez [[t]]A ϱ , lub [[t]]ϱ, gdy A jest znane. Deﬁnicja jest indukcyjna: 3Zak ladamy tu, ˙ze s oraz r s ,a symbolami relacji. 4Taka zamiana zmiennych bywa nazywana α-konwersj ,a. 10 • [[x]]A ϱ = ϱ(x). • [[f (t1, . . . , tn)]]A ϱ = f A([[t1]]A ϱ , . . . , [[t1]]A ϱ ). Znaczenie formu l deﬁniujemy poni˙zej. Napis (A, ϱ) |= ϕ. czytamy: formu la ϕ jest spe lniona w strukturze A przy warto´sciowaniu ϱ. Zak ladamy tu, ˙ze ϕ oraz A s ,a nad t ,a sam ,a sygnatur ,a. Spe lnianie deﬁniujemy przez indukcj ,e ze wzgl ,edu na budow ,e formu ly ϕ. • Nie zachodzi (A, ϱ) |= ⊥. • Dla dowolnego n ≥ 1, r ∈ ΣR n oraz dla dowolnych term´ow t1, . . . , tn, przyjmujemy, ˙ze (A, ϱ) |= r(t1, . . . , tn) wtedy i tylko wtedy, gdy ⟨[[t1]]A ϱ , . . . [[t1]]A ϱ ⟩ ∈ rA. • (A, ϱ) |= t1 = t2, wtedy i tylko wtedy, gdy [[t1]]A ϱ = [[t2]]A ϱ . • (A, ϱ) |= ϕ → ψ, gdy nie zachodzi (A, ϱ) |= ϕ lub zachodzi (A, ϱ) |= ψ. • (A, ϱ) |= ∀xϕ wtedy i tylko wtedy, gdy dla dowolnego a ∈ A zachodzi (A, ϱa x) |= ϕ. Nastepuj ,ace twierdzenie pokazuje, ˙ze spe lnianie formu ly ϕ w dowolnej strukturze zale˙zy je- dynie od warto´sci zmiennych wolnych F V (ϕ). Uzasadnia ono nast ,epuj ,ac ,a konwencj ,e no- tacyjn ,a: napiszemy na przyk lad (A, x : a, y : b) |= ϕ zamiast (A, ϱ) |= ϕ, gdy ϱ(x) = a i ϱ(y) = b, a przy tym wiadomo, ˙ze w formule ϕ wyst ,epuj ,a wolno tylko zmienne x i y. Je´sli ϕ jest zdaniem, to warto´sciowanie mo˙zna ca lkiem pomin ,a´c. Fakt 2.6 Dla dowolnej Σ-struktury A i dowolnej formu ly ϕ je´sli warto´sciowania ϱ i ϱ′ przyj- muj ,a r´owne warto´sci dla wszystkich zmiennych wolnych w ϕ, to (A, ϱ) |= ϕ wtedy i tylko wtedy, gdy (A, ϱ′) |= ϕ. Dow´od: ´Cwiczenie. 2.3 Prawdziwo´s´c i spe lnialno´s´c formu l Powiemy, ˙ze formu la ϕ jest spe lnialna w A, gdy istnieje warto´sciowanie ϱ w strukturze A takie, ˙ze zachodzi (A, ϱ) |= ϕ. Formu la ϕ jest spe lnialna, gdy istnieje struktura A, w kt´orej ϕ jest spe lnialna. Formu la ϕ jest prawdziwa w A, gdy dla ka˙zdego warto´sciowania ϱ w A zachodzi (A, ϱ) |= ϕ. W tym przypadku m´owimy te˙z, ˙ze A jest modelem dla formu ly ϕ (oznaczamy to przez A |= ϕ). Dla zbioru formu l Γ i Σ-struktury A powiemy, ˙ze A jest modelem dla Γ (piszemy A |= Γ), gdy dla ka˙zdej formu ly ϕ ∈ Γ, zachodzi A |= ϕ. Formu la ϕ jest tautologi ,a (oznaczamy to przez |= ϕ), gdy jest ona prawdziwa w ka˙zdej Σ-strukturze. 11 Oczywi´scie je´sli we´zmiemy dowoln ,a tautologi ,e rachunku zda´n to po podstawieniu na miejsce zmiennych zdaniowych dowolnych formu l logiki pierwszego rz ,edu dostaniemy tautologi ,e logiki pierwszego rz ,edu. Poni˙zej podajemy przyk lady tautologii logiki pierwszego rzedu, kt´orych nie da si ,e w ten spos´ob otrzyma´c. Fakt 2.7 Nast ,epuj ,ace formu ly s ,a tautologiami logiki pierwszego rzedu: 1. ∀x(ϕ → ψ) → (∀xϕ → ∀xψ). 2. ϕ → ∀xϕ, o ile x ̸∈ F V (ϕ). 3. ∀xϕ → ϕ. 4. x = x. 5. x1 = y1 → (x2 = y2 → · · · → (xn = yn → f (x1, . . . , xn) = f (y1, . . . , yn)) · · · ), dla f ∈ ΣF n , n ≥ 0. 6. x1 = y1 → (x2 = y2 → · · · → (xn = yn → r(x1, . . . , xn) → r(y1, . . . , yn)) · · · ), dla r ∈ ΣR n , n ≥ 1. Dow´od: Aby si ,e przekona´c, ˙ze formu la (1) jest tautologi ,a, rozpatrzmy dowoln ,a struktur ,e A i jakie´s warto´sciowanie ϱ. Za l´o˙zmy najpierw, ˙ze (A, ϱ) |= ∀x(ϕ → ψ) oraz (A, ϱ) |= ∀x ϕ. Oz- nacza to, ˙ze dla dowolnego a ∈ A zachodzi (A, ϱa x) |= ϕ oraz (A, ϱa x) |= ϕ → ψ. Musi wi ,ec zaj´s´c (A, ϱa x) |= ψ. Z dowolno´sci a mamy (A, ϱ) |= ∀x ψ, a st ,ad (A, ϱ) |= ∀x(ϕ → ψ) → (∀xϕ → ∀xψ). Je´sli (A, ϱ) ̸|= ∀x(ϕ → ψ) lub (A, ϱ) ̸|= ∀x ϕ, to nasza formu la jest spe lniona przez ϱ wprost z deﬁnicji. Uzasadnienie cz ,e´sci (3–6) pozostawiamy czytelnikowi. Ponadto mamy nast ,epuj ,acy Fakt 2.8 Dla dowolnej tautologii ϕ i dowolnej zmiennej x, formu la ∀xϕ jest te˙z tautologi ,a. Dow´od: ´Cwiczenie. Uzasadnienie, ˙ze dana formu la jest tautologi ,a polega na analizie jej spe lniania w dowolnych modelach (por. Fakt 2.7). Natomiast wykazanie, ˙ze tak nie jest polega na podaniu odpowied- niego kontrprzyk ladu. Takiego jak ten: Przyk lad 2.9 Zdanie (∀xp(x) → ∀xq(x)) → ∀x(p(x) → q(x)) nie jest tautologi ,a. Roz- patrzmy bowiem model A = ⟨N, pA, qA⟩, w kt´orym: • n ∈ pA, wtedy i tylko wtedy, gdy n jest parzyste; • n ∈ qA, wtedy i tylko wtedy, gdy n jest nieparzyste; Poniewa˙z pA ̸= N, wi ,ec A ̸|= ∀xp(x). (Mamy tu do czynienia ze zdaniem, wi ,ec warto´sciowanie jest nieistotne i dlatego je pomijamy.) St ,ad otrzymujemy A |= ∀xp(x) → ∀xq(x). Z drugiej strony A ̸|= ∀x(p(x) → q(x)), poniewa˙z (A, x : 2) ̸|= p(x) → q(x). Rzeczywi´scie, 2 ∈ pA − qA. 12 2.4 Podstawianie term´ow Dla formu ly ϕ, termu t i zmiennej x, napis ϕ(t/x) oznacza wynik podstawienia t na wszystkie wolne wyst ,apienia x w ϕ. Wykonywanie takiego podstawienia bez dodatkowych zastrze˙ze´n mo˙ze prowadzi´c do k lopot´ow. Na przyk lad sens formu l ∀y(y ≤ x) oraz ∀z(z ≤ x) jest taki sam. Tymczasem ” naiwne” podstawienie y w miejsce x w obu tych formu lach daje w wyniku odpowiednio ∀y(y ≤ y) i ∀z(z ≤ y), a te dwie formu ly znacz ,a ca lkiem co innego. Przyczyn ,a jest to, ˙ze w pierwszym przypadku zmienn ,a y wstawiono w zasi ,eg kwantyﬁkatora ∀y. ´Zr´od lem problemu w powy˙zszym przyk ladzie by lo to, ˙ze po wykonaniu podstawienia poja- wia ly si ,e nowe wi ,azania kwantyﬁkatorem. Sugeruje to nast ,epuj ,ac ,a deﬁnicj ,e. Powiemy, ˙ze term t jest dopuszczalny dla zmiennej x w formule ϕ (lub, ˙ze podstawienie ϕ(t/x) jest do- puszczalne) je´sli dla ka˙zdej zmiennej y wyst ,epuj ,acej w t, ˙zadne wolne wyst ,apienie x w ϕ nie jest zawarte w zasi ,egu kwantyﬁkatora ∀y lub ∃y. Mamy wi ,ec nast ,epuj ,ac ,a indukcyjn ,a deﬁnicj ,e dopuszczalnego podstawienia,5 w kt´orej ka˙zda lewa strona jest dopuszczalna pod warunkiem, ˙ze prawa strona jest dopuszczalna. • ⊥(t/x) = ⊥, gdy x ̸∈ F V (ϕ); • r(t1, . . . , tn)(t/x) = r(t1(t/x), . . . , tn(t/x)); • (t1 = t2)(t/x) = (t1(t/x) = t2(t/x)); • (ϕ → ψ)(t/x) = ϕ(t/x) → ψ(t/x); • (∀x ϕ)(t/x) = ∀x ϕ; • (∀y ϕ)(t/x) = ∀y ϕ(t/x), gdy y ̸= x, oraz y ̸∈ F V (t); • W pozosta lych przypadkach podstawienie jest niedopuszczalne. W dalszym ci ,agu b ,edziemy rozwa˙za´c jedynie podstawienia dopuszczalne. Lemat 2.10 (o podstawieniu) Niech A b,edzie dowoln ,a struktur ,a oraz ϱ : X → A dowol- nym warto´sciowaniem w A. Niech t b,edzie dowolnym termem. 1. Dla dowolnego termu s i zmiennej x mamy [[s(t/x)]] A ϱ = [[s]] A ϱa x gdzie a = [[t]]A ϱ . 2. Dla dowolnej formu ly ϕ, je´sli term t jest dopuszczalny dla x w ϕ, to (A, ϱ) |= ϕ(t/x) wtedy i tylko wtedy, gdy (A, ϱa x) |= ϕ, gdzie a = [[t]]A ϱ . 5Podstawianie termu t do termu s na miejsce zmiennej x oznaczamy podobnie: s(t/x). Takie podstawienie jest zawsze wykonalne. 13 Dow´od: Cz ,e´s´c 1 dowodzimy przez indukcj ,e ze wzgl ,edu na budow ,e termu s. Je´sli s jest zmienn ,a x, to obie strony s ,a r´owne [[t]]A ϱ . Je´sli s jest zmienn ,a y (r´o˙zn ,a od x), to obie strony s ,a r´owne ϱ(y). Je´sli s jest postaci f (s1, . . . , sn), to mamy nast ,epuj ,ace r´owno´sci. [[s(t/x)]] A ϱ = [[f (s1(t/x), . . . , sn(t/x))]] A ϱ = f A([[s1(t/x)]] A ϱ , . . . , [[sn(t/x)]] A ϱ ) = f A([[s1]] A ϱa x, . . . , [[sn]] A ϱa x) = [[f (s1, . . . , sn)]] A ϱa x = [[s]] A ϱa x. Dow´od cz ,e´sci 2 przeprowadzamy przez indukcj ,e ze wzgl ,edu na budow ,e formu ly ϕ. Je´sli ϕ jest postaci ⊥ to teza jest oczywista. Je´sli ϕ jest formu l ,a atomow ,a, to tez ,e natychmiast dostajemy z wy˙zej udowodnionej cz ,e´sci 1. Na przyk lad, je´sli ϕ jest postaci s1 = s2 to mamy: (A, ϱ) |= ϕ(t/x) wtedy i tylko wtedy, gdy [[s1(t/x)]] A ϱ = [[s1(t/x)]] A ϱ wtedy i tylko wtedy, gdy [[s1]] A ϱa x = [[s2]] A ϱa x wtedy i tylko wtedy, gdy (A, ϱa x) |= s1 = s2. Druga z powy˙zszych r´ownowa˙zno´sci wynika z cz ,e´sci 1. Krok indukcyjny dla przypadku, gdy ϕ jest postaci ψ → ϑ jest oczywisty i pozostawimy go czytelnikowi. Rozwa˙zymy przypadek gdy ϕ jest postaci ∀yψ. Je´sli zmienne x oraz y s ,a r´owne, to x nie wyst ,epuje wolno w ϕ i w´owczas teza wynika natychmiast z Faktu 2.6. Tak wi ,ec przyjmijmy, ˙ze x oraz y s ,a r´o˙znymi zmiennymi. W´owczas z dopuszczalno´sci t dla x w ϕ wynika, ˙ze y nie wyst ,epuje w t. Ponadto ϕ(t/x) jest identyczne z ∀yψ(t/x). Mamy nast ,epuj ,ace r´ownowa˙zno´sci: (A, ϱ) |= ∀yψ(t/x) wtedy i tylko wtedy, gdy dla ka˙zdego d ∈ A, (A, ϱd y) |= ψ(t/x) wtedy i tylko wtedy, gdy dla ka˙zdego d ∈ A, (A, ϱd a′ y x ) |= ψ, gdzie a′ = [[t]]A ϱd y . Poniewa˙z y nie wyst ,epuje w t, wi ,ec a′ = [[t]]A ϱd y = [[t]]A ϱ = a. Skoro zmienne x oraz y s ,a r´o˙zne, to ϱd a y x = ϱa d x y. Tak wi ,ec warunek (A, ϱd a′ y x ) |= ψ jest r´ownowa˙zny warunkowi (A, ϱa d x y) |= ψ, dla ka˙zdego d ∈ A. Czyli (A, ϱa x) |= ∀yψ. Natychmiastowym wnioskiem z Lematu 2.10 jest nast ,epuj ,acy przyk lad tautologii. Fakt 2.11 Dla dowolnej formu ly ϕ, zmiennej x i termu t dopuszczalnego dla x w ϕ, formu la ∀xϕ → ϕ(t/x) jest tautologi ,a logiki pierwszego rz ,edu. Dow´od: ´Cwiczenie. 14 Fakt 2.12 Je´sli zmienna y jest dopuszczalna dla x w ϕ oraz y ̸∈ F V (ϕ), to |= (∀xϕ) ↔ (∀yϕ(y/x)). Dow´od: Z Faktu 2.11 oraz Faktu 2.8 otrzymujemy |= ∀y(∀xϕ → ϕ(y/x)). Zatem na mocy Faktu 2.7(1) wnioskujemy, ˙ze |= (∀y∀xϕ) → (∀yϕ(y/x)). Na mocy Przyk ladu 2.7(2) otrzymujemy implikacj ,e →. Odwrotna implikacja wynika z ju˙z udowodnionej implikacji oraz z nast ,epuj ,acych prostych obserwacji: • Je´sli y jest dopuszczalna dla x w ϕ, to x jest dopuszczalna dla y w ϕ(y/x). • Je´sli y ̸∈ F V (ϕ), to x nie wyst ,epuje wolno w ϕ(y/x). • Wynik podstawienia ϕ(y/x)(x/y) jest identyczny z ϕ. Fakt 2.12 pozwala zamienia´c zmienne zwi ,azane dowolnie, tak d lugo jak s ,a spe lnione za lo˙zenia. W szczeg´olno´sci je´sli chcemy wykona´c podstawienie termu do formu ly w sytuacji, gdy ten term nie jest dopuszczalny to wystarczy zamieni´c nazwy pewnych zmiennych zwi ,azanych, tak aby term sta l si ,e dopuszczalny. Latwo jest uog´olni´c Fakt 2.12: znaczenie formu ly nie ulega zmianie tak˙ze przy wymianie zmiennych zwi ,azanych kwantyﬁkatorami wystepuj ,acymi wewn ,atrz formu ly. ´Cwiczenia 1. Niech A = ⟨N, pA, qA⟩, gdzie: ⟨a, b⟩ ∈ pA wtedy i tylko wtedy, gdy a + b ≥ 6; ⟨a, b⟩ ∈ qA wtedy i tylko wtedy, gdy b = a + 2. Zbada´c czy formu ly (a) ∀xp(x, y) → ∃xq(x, y); (b) ∀xp(x, y) → ∀xq(x, y); (c) ∀xp(x, y) → ∃xq(x, z); s ,a spe lnione przy warto´sciowaniu v(y) = 7, v(z) = 1 w strukturze A. 2. Niech A = ⟨Z, f A, rA⟩ i B = ⟨Z, f B, rB⟩, gdzie f A(m, n) = min(m, n), dla m, n ∈ Z, a rA jest relacj ,a ≥; f B(m, n) = m2 + n2, dla m, n ∈ Z, a rB jest relacj ,a ≤. Zbada´c czy formu ly (a) ∀y(∀x(r(z, f (x, y)) → r(z, y))); (b) ∀y(∀x(r(z, f (x, y))) → r(z, y)), 15 s ,a spe lnione przy warto´sciowaniu v(z) = 5, v(y) = 7 w strukturach A i B. 3. Czy formu la ∀x(¬r(x, y) → ∃z(r(f (x, z), g(y)))) jest spe lniona przy warto´sciowaniu v(x) = 3, w(x) = 6 i u(x) = 14 (a) w strukturze A = ⟨N, rA⟩, gdzie rA jest relacj ,a podzielno´sci? (b) w strukturze B = ⟨N, rB⟩, gdzie rB jest relacj ,a przystawania modulo 7? 4. W jakich strukturach prawdziwa jest formu la ∃y(y ̸= x)? A formu la ∃y(y ̸= y) otrzymana przez ” naiwne” podstawienie y na x? 5. Podaj przyk lad modelu i warto´sciowania, przy kt´orym formu la p(x, f (x)) → ∀x∃y p(f (y), x) jest: a) spe lniona; b) nie spe lniona. 6. Zbada´c, czy nast ,epuj ,ace formu ly s ,a tautologiami i czy s ,a spe lnialne: (a) ∃x∀y(p(x) ∨ q(y)) → ∀y(p(f (y)) ∨ q(y)); (b) ∀y(p(f (y)) ∨ q(y)) → ∃x∀y(p(x) ∨ q(y)); (c) ∃x(∀yq(y) → p(x)) → ∃x∀y(q(y) → p(x)); (d) ∃x(∀yq(y) → p(x)) → ∃x(q(x) → p(x)). 7. Niech f b ,edzie jednoargumentowym symbolem funkcyjnym, kt´ory nie wyst ,epuje w formule ϕ. Pokaza´c, ˙ze formu la ∀x∃yϕ jest spe lnialna wtedy i tylko wtedy gdy formu la ∀xϕ(f (x)/y) jest spe lnialna. 8. Udowodni´c, ˙ze zdanie ∀x∃y p(x, y) ∧ ∀x¬p(x, x) ∧ ∀x∀y∀z(p(x, y) ∧ p(y, z) → p(x, z)) ma tylko modele niesko´nczone. 9. Dla ka˙zdego n napisa´c takie zdanie ϕn, ˙ze A |= ϕn zachodzi wtedy i tylko wtedy, gdy A ma dok ladnie n element´ow. 10. Czy je´sli A |= ∃x ϕ, to tak˙ze A |= ϕ[t/x], dla pewnego termu t? 16 3 Logika pierwszego rz ,edu. Spos´ob u˙zycia. Przyjrzyjmy si ,e teraz kilku wa˙znym tautologiom. Fakt 3.1 Nast ,epuj ,ace formu ly s ,a tautologiami (dla dowolnych ϕ i ψ). 1. ∀x(ϕ → ψ) → (∃xϕ → ∃xψ); 2. ∃xϕ → ϕ, o ile x ̸∈ F V (ϕ); 3. ϕ(s/x) → ∃xϕ; 4. ¬∀xϕ ↔ ∃x¬ϕ; 5. ¬∃xϕ ↔ ∀x¬ϕ; 6. ∀x(ϕ ∧ ψ) ↔ ∀xϕ ∧ ∀xψ; 7. ∃x(ϕ ∨ ψ) ↔ ∃xϕ ∨ ∃xψ; 8. ∀x(ϕ ∨ ψ) ↔ ϕ ∨ ∀xψ, o ile x ̸∈ F V (ϕ); 9. ∃x(ϕ ∧ ψ) ↔ ϕ ∧ ∃xψ, o ile x ̸∈ F V (ϕ); 10. ∀xϕ → ∃xϕ; 11. ∀x∀yϕ ↔ ∀y∀xϕ; 12. ∃x∃yϕ ↔ ∃y∃xϕ; 13. ∃x∀yϕ → ∀y∃xϕ. Dow´od: ´Cwiczenie. Formu ly (1)–(3) powy˙zej wyra˙zaj ,a w lasno´sci kwantyﬁkatora szczeg´o lowego i s ,a odpowied- nikami formu l z Faktu 2.7. Zauwa˙zmy, ˙ze zamiast rozdzielno´sci kwantyﬁkatora szczeg´o lowego, mamy tu jeszcze jedno prawo rozk ladu kwantyﬁkatora og´olnego. Zak l´oca to nieco symetri ,e pomi ,edzy ∀ i ∃, wyra˙zon ,a prawami de Morgana (4) i (5). Kolejne dwie tautologie przypominaj ,a o bliskim zwi ,azku kwantyﬁkatora og´olnego z koniunkcj ,a i kwantyﬁkatora szczeg´o lowego z alternatyw ,a. (Uwaga: zmienna x mo˙ze by´c wolna w ϕ i ψ.) Analogiczna rozdzielno´s´c kwantyﬁkatora og´olnego wzgl ,edem alternatywy (8) i kwantyﬁkatora szczeg´o lowego wzgl ,edem koniunkcji (9) nie zawsze jest prawd ,a, ale zachodzi pod warunkiem, ˙ze zmienna wi ,azana kwantyﬁkatorem nie wyst ,epuje w jednym z cz lon´ow formu ly. (Prawo (8) nazywane bywa prawem Grzegorczyka.) Formu la (10) jest odbiciem naszego za lo˙zenia o niepusto´sci ´swiata. Jest to tautologia, poniewa˙z um´owili´smy si ,e, ˙ze rozwa˙zamy tylko struktury o niepustych no´snikach. Prawa (11)–(13) charakteryzuj ,a mo˙zliwo´sci permutowania kwantyﬁkator´ow. Implikacja od- wrotna do (13) zazwyczaj nie jest tautologi ,a. 17 Stosuj ,ac r´ownowa˙zno´sci (4–9) mo˙zemy ka˙zd ,a formu l ,e sprowadzi´c do postaci, w kt´orej wszyst- kie kwantyﬁkatory znajduj ,a si ,e na pocz ,atku. Deﬁnicja 3.2 M´owimy, ˙ze formu la ϕ jest w preneksowej postaci normalnej , gdy ϕ = Q1y1Q2y2 . . . Qnyn ψ, gdzie ka˙zde z Qi to ∀ lub ∃, a ψ jest formu l ,a otwart ,a. (Oczywi´scie n mo˙ze by´c zerem.) Fakt 3.3 Dla ka˙zdej formu ly pierwszego rz ,edu istnieje r´ownowa˙zna jej formu la w preneksowej postaci normalnej. Dow´od: Indukcja (´cwiczenie). Przyk lad 3.4 Formu la ∃yp(y) → ∀zq(z) jest r´ownowa˙zna ka˙zdej z nast ,epuj ,acych formu l: ¬∃y p(y) ∨ ∀z q(z); ∀y ¬p(y) ∨ ∀z q(z); ∀y(¬p(y) ∨ ∀z q(z)); ∀y∀z(¬p(y) ∨ q(z)); ∀y∀z(p(y) → q(z)). 3.1 Logika formalna i j ,ezyk polski Systemy logiki formalnej s ,a, jak ju˙z m´owili´smy, tylko pewnymi modelami, czy te˙z przybli˙ze- niami rzeczywistych sposob´ow wyra˙zania r´o˙znych stwierdze´n i wnioskowania o ich poprawno´sci. Poziom dok ladno´sci takich przybli˙ze´n mo˙ze by´c wi ,ekszy lub mniejszy. Wi ,ekszy tam, gdzie mamy do czynienia z dobrze okre´slon ,a teori ,a matematyczn ,a, lub j ,ezykiem programowa- nia. Mniejszy wtedy, gdy u˙zywamy logiki do weryﬁkacji poprawno´sci stwierdze´n j ,ezyka po- tocznego, cho´cby takiego jak podr ,ecznikowy przyk lad: ”Janek idzie do szko ly.” Oczywi´scie przypisanie temu stwierdzeniu warto´sci logicznej jest zgo la niemo˙zliwe, nie wiemy bowiem, kt´ory Janek do jakiej ma i´s´c szko ly i czy mo˙ze ju˙z doszed l? Wi ,ecej sensu ma zastosowanie logiki predykat´ow do analizy np. takiego rozumowania: Ka˙zdy cyrulik sewilski goli tych wszystkich m ,e˙zczyzn w Sewilli, kt´orzy si ,e sami nie gol ,a. Ale nie goli ˙zadnego z tych, kt´orzy gol ,a si ,e sami. A zatem w Sewilli nie ma ani jednego cyrulika. W tym przypadku aparat logiki formalnej mo˙ze by´c pomocny. Latwiej zrozumie´c o co chodzi, t lumacz ,ac nasz problem na j ,ezyk logiki predykat´ow, i przedstawiaj ,ac go jako pytanie o po- prawno´s´c pewnego stwierdzenia postaci Γ |= ϕ. Mo˙zna wi ,ec zapyta´c, czy ∀x(C(x) ∧ S(x) → ∀y(G(x, y) ↔ S(y) ∧ ¬G(y, y))) |= ¬∃x(C(x) ∧ S(x))? 18 Stwierdziwszy poprawno´s´c powy˙zszego stwierdzenia, wywnioskujemy, ˙ze w Sewilli cyrulika nie ma. I b ,edzie to wniosek. . . b l ,edny, bo cyrulik by´c mo˙ze jest kobiet ,a. W powy˙zszym przyk ladzie po prostu ´zle ustalono logiczn ,a interpretacj ,e naszego zadania, zapominaj ,ac o jednym z jego istotnych element´ow. B l ,ad ten mo˙zna latwo naprawi´c, co jest zalecane jako ´cwiczenie. Ale nie zawsze j ,ezyk logiki formalnej wyra˙za ´sci´sle to samo, co potoczny j ,ezyk polski, a nawet j ,ezyk w kt´orym pisane s ,a prace matematyczne. Zar´owno sk ladnia jak i semantyka tych j ,ezyk´ow rz ,adzi si ,e zupe lnie innymi prawami, i o tym nale˙zy pami ,eta´c t lumacz ,ac jeden na drugi. Implikacja materialna i zwi ,azek przyczynowo-skutkowy Implikacja, o kt´orej m´owimy w logice klasycznej to tzw. implikacja materialna. Warto´s´c logiczna, kt´or ,a przypisujemy wyra˙zeniu ” ϕ → ψ” zale˙zy wy l ,acznie od warto´sci logicznych przypisanych jego cz ,e´sciom sk ladowym ϕ i ψ. Nie zale˙zy natomiast zupe lnie od tre´sci tych wyra˙ze´n, czy te˙z jakichkolwiek innych zwi ,azk´ow pomi ,edzy ϕ i ψ. W szczeg´olno´sci, wypowiedzi ϕ i ψ mog ,a m´owi´c o zaj´sciu jakich´s zdarze´n i wtedy warto´s´c logiczna implikacji ” ϕ → ψ” nie ma nic wsp´olnego z ich ewentualnym nast ,epstwem w czasie, lub te˙z z tym, ˙ze jedno z tych zdarze´n spowodowa lo drugie. W j ,ezyku polskim stwierdzenie ”je´sli ϕ to ψ” oczywi´scie sugeruje taki zwi ,azek, np. w zdaniu: Je´sli zasilanie jest w l ,aczone, to terminal dzia la. Tymczasem implikacja materialna nie zachodzi, o czym dobrze wiedz ,a u˙zytkownicy terminali. Co wi ,ecej, w istocie materialn ,a prawd ,a jest stwierdzenie odwrotne: Je´sli terminal dzia la to zasilanie jest w l ,aczone. Natomiast zdanie Terminal dzia la, poniewa˙z zasilanie jest w l ,aczone, stwierdza nie tylko zwi ,azek przyczynowo-skutkowy, ale te˙z faktyczne zaj´scie wymienionych zdarze´n i w og´ole nie ma odpowiednika w logice klasycznej. Inne sp´ojniki w mniejszym stopniu gro˙z ,a podobnymi nieporozumieniami. Ale na przyk lad sp´ojnik ” i” w j ,ezyku polskim mo˙ze te˙z sugerowa´c nast ,epstwo czasowe6 zdarze´n: ”Poszed l i zrobi l.” A wyra˙zenie ”A, chyba ˙ze B” ma inny odcie´n znaczeniowy ni˙z proste ”A lub B”. Przy tej okazji zwr´o´cmy uwag ,e na to, ˙ze s lowo ”albo” bywa czasem rozumiane w znaczeniu alternatywy wykluczaj ,acej. My jednak umawiamy si ,e, ˙ze rozumiemy je tak samo jak ”lub”. Konfuzje sk ladniowe Przy t lumaczeniu z j ,ezyka polskiego na j ,ezyk logiki formalnej i na odwr´ot mo˙zna latwo pope lni´c b l ,ad nawet wtedy gdy nie powstaj ,a problemy semantyczne. Sk ladnia tych j ,ezyk´ow jest oparta na innych zasadach. Na przyk lad te dwa zdania maj ,a bardzo podobn ,a budow ,e: 6W j ,ezykach programowania jest podobnie, ale to ju˙z inna historia. 19 Ka˙zdy kot ma w ,asy. Pewien kot ma w ,asy. Ale ich t lumaczenia na j ,ezyk rachunku predykat´ow nie s ,a ju˙z takie podobne: ∀x(Kot(x) → MaW ,asy(x)); ∃x(Kot(x) ∧ MaW ,asy(x)). Do´s´c cz ,estym b l ,edem jest w la´snie mylenie koniunkcji z implikacj ,a w zasi ,egu dzia lania kwan- tyﬁkatora. A oto inny przyk lad: Zdania Liczba n jest parzysta; Liczba n jest dwukrotno´sci ,a pewnej liczby oznaczaj ,a to samo. Zaprzeczeniem pierwszego z nich jest oczywi´scie zdanie Liczba n nie jest parzysta, ale zaprzeczeniem drugiego nie jest zdanie Liczba n nie jest dwukrotno´sci ,a pewnej liczby, otrzymane przecie˙z przez analogiczn ,a operacj ,e ” podstawienia”. U˙zycie s lowa ” pewnej”powoduje bowiem, ˙ze to zdanie rozumiemy jako ∃x(¬n = 2x), a nie jako ¬∃x(n = 2x). Innym popularnym b l ,edem jest mylenie koniunkcji z alternatyw ,a w przes lance implikacji, zw laszcza gdy wyst ,epuje tam negacja. Mamy bowiem sk lonno´s´c do powtarzania s lowa ” nie” w obu cz lonach za lo˙zenia i nie razi nas zdanie Kto nie ma biletu lub nie jest pracownikiem teatru, ten nie wejdzie na przedstawienie. Ale od tekstu matematycznego oczekujemy wi ,ecej ´scis lo´sci i w takim tek´scie zdanie: Je´sli x nie jest r´owne 2 lub nie jest r´owne 3, to x2 − 5x + 6 nie jest zerem. mo˙ze wprowadzi´c czytelnika w b l ,ad. ” Dos lowne” t lumaczenie tego zdania na j ,ezyk logiki predykat´ow, to przecie˙z formu la ¬(x = 2) ∨ ¬(x = 3) → ¬(x2 − 5x + 6 = 0), a nie formu la ¬(x = 2 ∨ x = 3) → ¬(x2 − 5x + 6 = 0). Wielu takich dwuznaczno´sci unikniemy, gdy przypomnimy sobie, ˙ze w j ,ezyku polskim istniej ,a takie s lowa jak ani i ˙zaden. 3.2 Si la wyrazu logiki pierwszego rz ,edu J ,ezyk logiki pierwszego rz ,edu, dzi ,eki mo˙zliwo´sci u˙zywania kwantyﬁkator´ow, jest do´s´c elas- tyczny. Mo˙zna z jego pomoc ,a wyrazi´c wiele nietrywialnych w lasno´sci obiekt´ow matematycz- nych. W szczeg´olno´sci interesowa´c nas mo˙ze deﬁniowanie element´ow i wyodr ,ebnianie struktur 20 o pewnych szczeg´olnych w lasno´sciach, czy te˙z formu lowanie kryteri´ow odr´o˙zniaj ,acych jakie´s struktury od innych. Przyk lad 3.5 Przypu´s´cmy, ˙ze sygnatura sk lada si ,e z dw´och jednoargumentowych symboli relacyjnych R i S i dwuargumentowego symbolu funkcyjnego f . Wtedy formu la ∀x∀y(R(x) ∧ S(y) → R(f (x, y)) ∧ S(f (x, y)) jest prawdziwa dok ladnie w tych modelach A = ⟨A, f A, RA, SA⟩, w kt´orych obraz iloczynu kartezja´nskiego RA × SA przy przekszta lceniu f zawiera si ,e w zwyk lym iloczynie RA ∩ SA. Przyk lad 3.6 Teraz niech nasza sygnatura sk lada si ,e z jednej operacji dwuargumentowej · i z jednej sta lej ε. Zdanie ∃x1∃x2∀y(∀z1∀z2(y = z1 · z2 → y = z1 ∨ y = z2) → y = x1 ∨ y = x2 ∨ y = ε) jest prawdziwe w strukturze ⟨{a, b}∗, ·, ε⟩ s l´ow nad alfabetem {a, b}∗ z konkatenacj ,a i s lowem pustym, ale nie w modelu s l´ow nad alfabetem trzyliterowym ⟨{a, b, c}∗, ·, ε⟩. Inaczej m´owi ,ac, nasze zdanie rozr´o˙znia te dwie struktury. 3.3 Nierozstrzygalno´s´c Niestety, konsekwencj ,a znacznej si ly wyrazu logiki pierwszego rz ,edu jest jej nierozstrzygal- no´s´c. Dok ladniej, nierozstrzygalny jest nast ,epuj ,acy problem decyzyjny:7 Czy dana formu la logiki pierwszego rz ,edu jest tautologi ,a? Aby wykaza´c, ˙ze tak jest, pos lu˙zymy si ,e znan ,a nam nierozstrzygalno´sci ,a problemu stopu dla maszyn Turinga. Przypomnijmy, ˙ze (deterministyczn ,a, jednota´smow ,a) maszyn ,e Turinga nad alfabetem A mo˙zna zdeﬁniowa´c jako krotk ,e M = ⟨∆, Q, δ, q0, qa⟩, gdzie: • ∆ jest sko´nczonym alfabetem, zawieraj ,acym A oraz symbol B ̸∈ A (blank); • Q jest sko´nczonym zbiorem stan´ow; • q0 ∈ Q jest stanem pocz ,atkowym; • qf ∈ Q jest stanem ko´ncowym lub akceptuj ,acym; • δ : (Q − {qf }) × ∆ → ∆ × Q × {−1, 0, +1} jest funkcj ,a przej´scia. Zak ladaj ,ac, ˙ze zbiory ∆ i Q s ,a roz l ,aczne, mo˙zna zdeﬁniowa´c konﬁguracj ,e maszyny jako s lowo postaci wqv, gdzie q ∈ Q oraz w, v ∈ ∆∗, przy czym uto˙zsamiamy konﬁguracje wqv i wqvB. Interpretacja tej deﬁnicji jest nast ,epuj ,aca. Ta´sma maszyny jest niesko´nczona w prawo. Na pocz ,atku ta´smy zapisane jest s lowo wv, dalej w prawo s ,a same blanki, a g lowica maszyny ” patrzy” na pierwszy znak na prawo od w. Konﬁguracj ,e postaci Cw = q0w, gdzie w ∈ A∗, nazywamy pocz ,atkow ,a, a konﬁguracj ,e postaci wqf v nazywamy ko´ncow ,a lub akceptuj ,ac ,a. 7W istocie, nazwa ” problem decyzyjny” (Entscheidungsproblem) zosta la u˙zyta po raz pierwszy w la´snie w tym kontek´scie. 21 Relacj ,e →M na konﬁguracjach deﬁniuje si ,e tak: • Je´sli δ(q, a) = (b, p, +1) to wqav →M wbpv; • Je´sli δ(q, a) = (b, p, 0) to wqav →M wpbv; • Je´sli δ(q, a) = (b, p, −1) to wcqav →M wpcbv oraz qav →M pbv (gdy ruch w lewo jest niemo˙zliwy.) Symbolem ↠M oznaczamy przechodnio-zwrotne domkni ,ecie relacji →M. Je˙zeli Cw ↠M C′, gdzie C′ jest konﬁguracj ,a akceptuj ,ac ,a to m´owimy, ˙ze maszyna akceptuje s lowo w. W naszej konstrukcji skorzystamy z nast ,epuj ,acej postaci problemu stopu: Czy dana maszyna Turinga akceptuje s lowo puste? Nietrudno jest zredukowa´c do niego og´olny przypadek prob- lemu stopu (´cwiczenie). Nast ,epuj ,acy lemat b ,edzie przydatny w dowodzie nierozstrzygalno´sci. Lemat 3.7 Niech ϑ oznacza koniunkcj ,e nast ,epuj ,acych formu l • ∀y¬P (y, c) • ∀x∃yP (x, y) • ∀x∀y(P (x, y) → R(x, y)) • ∀x∀y∀z(R(x, y) → (R(y, z) → R(x, z))) • ∀x¬R(x, x) Zdanie ϑ jest spe lnialne, a ka˙zdy jego model A zawiera niesko´nczony ci ,ag r´o˙znych element´ow cA = a0, a1, a2, . . ., takich ˙ze (ai, ai+1) ∈ P A dla ka˙zdego i. Dow´od: ´Cwiczenie. Twierdzenie 3.8 Nie istnieje algorytm rozstrzygaj ,acy czy dana formu la logiki pierwszego rz ,edu jest tautologi ,a. Dow´od: Naszym celem jest efektywna konstrukcja, kt´ora dla dowolnej maszyny Turinga M utworzy formu l ,e ϕM o takiej w lasno´sci: M akceptuje s lowo puste wtedy i tylko wtedy, gdy ϕM jest tautologi ,a. St ,ad natychmiast wynika teza twierdzenia. W przeciwnym razie taka konstrukcja pozwala laby bowiem na rozstrzyganie problemu stopu. W istocie, wygodniej b ,edzie skonstruowa´c tak ,a formu l ,e ψM, ˙ze M zap,etla si ,e na s lowie pustym wtedy i tylko wtedy, gdy ψM jest spe lnialna, i na koniec przyj ,a´c ϕM = ¬ψM. Sygnatura naszej formu ly b ,edzie zale˙za la od maszyny M (bo tak jest latwiej) chocia˙z tak by´c nie musi ( ´Cwiczenie 13). Sk lada si ,e ona z: 22 • jednoargumentowych symboli relacyjnych Sq, dla wszystkich stan´ow q ∈ Q; • dwuargumentowych symboli relacyjnych Ca, dla wszystkich symboli a ∈ ∆; • dwuargumentowego symbolu relacyjnego G; • sta lej c i symboli P i Q wyst ,epuj ,acych w formule ϑ z Lematu 3.7. Formu la ϕM jest koniunkcj ,a z lo˙zon ,a z wielu sk ladowych, kt´ore teraz opiszemy. Pierwsz ,a sk ladow ,a jest formu la ϑ z Lematu 3.7. Ka˙zdy model tej formu ly zawiera r´o˙znowarto´sciowy ci ,ag a0, a1, a2, . . ., kt´ory pos lu˙zy nam jako substytut ci ,agu liczb naturalnych (o elemencie ai my´slimy jak o liczbie i). Intuicyjny sens formu l atomowych naszej sygnatury jest taki: • Formu l ,e Sq(x) czytamy: po x krokach obliczenia maszyna jest w stanie q. • Formu l ,e G(x, y) czytamy: po x krokach g lowica maszyny znajduje si ,e w pozycji y. • Formu l ,e Ca(x, y) czytamy: po x krokach na pozycji y znajduje si ,e symbol a. Dalsze sk ladowe naszej formu ly ϕM s ,a tak dobrane, aby ka˙zdy jej model reprezentowa l nie- sko´nczone obliczenie maszyny zaczynaj ,ace si ,e od s lowa pustego. Oto te sk ladowe: 1. Sq0(c) ∧ G(c, c) ∧ ∀x CB(c, x); 2. ∀x( ⋁q∈Q Sq(x)); 3. ∀x(Sq(x) → ¬Sp(x)), dla q, p ∈ Q, q ̸= p; 4. ∀x∀y( ⋁a∈∆ Ca(x, y)); 5. ∀x∀y(Ca(x, y) → ¬Cb(x, y)), dla a, b ∈ ∆, a ̸= b; 6. ∀x∃y G(x, y); 7. ∀x∀y∀z(G(x, y) ∧ G(x, z) → y = z); 8. ∀x∀y∀z(Sq(x) ∧ G(x, y) ∧ Ca(x, y) ∧ P (x, z) → Sp(z) ∧ Cb(z, y)), gdy δ(q, a) = (p, b, i); 9. ∀x∀y∀z(¬G(x, y) ∧ Ca(x, y) ∧ P (x, z) → Ca(z, y)); 10. ∀x∀y∀z∀v(Sq(x) ∧ G(x, y) ∧ P (x, z) ∧ P (y, v) → G(z, v)), gdy δ(q, a) = (p, b, +1); 11. ∀x∀y∀z(Sq(x) ∧ G(x, y) ∧ P (x, z) → G(z, y)), gdy δ(q, a) = (p, b, 0); 12. ∀x∀y∀z∀v(Sq(x) ∧ G(x, y) ∧ P (x, z) ∧ P (v, y) → G(z, v)), gdy δ(q, a) = (p, b, −1); 13. ∀x∀y∀z∀v(Sq(x) ∧ G(x, c) ∧ P (x, z) → G(z, c)), gdy δ(q, a) = (p, b, −1); 14. ∀x¬Sqf (x). Przypu´s´cmy teraz, ˙ze maszyna M ma niesko´nczone obliczenie dla pustego s lowa wej´sciowego. Zbudujemy model A dla formu ly ϕM. Dziedzin ,a tego modelu jest zbi´or N liczb naturalnych. Sta l ,a c interpretujemy jako zero, relacja P A to relacja nast ,epnika, a RA to (ostra) relacja 23 mniejszo´sci. Relacje SA q , CA a i GA okre´slamy zgodnie z ich intuicyjn ,a interpretacj ,a na pod- stawie przebiegu niesko´nczonego obliczenia maszyny. Nietrudno si ,e przekona´c, ˙ze wszystkie cz lony koniunkcji s ,a prawdziwe w A, czyli zdanie ϕM jest spe lnialne. Przyst ,apmy wi ,ec do trudniejszej cz ,e´sci dowodu. Za l´o˙zmy mianowicie, ˙ze A |= ϕM dla pewnej struktury A. Wtedy tak˙ze A |= ϑ, niech wi ,ec ai b ,ed ,a elementami A, o kt´orych mowa w Lema- cie 3.7. Struktura A spe lnia te˙z wszystkie pozosta le sk ladowe formu ly ϕM. Sk ladowe (2) i (3) gwarantuj ,a, ˙ze ka˙zdy z element´ow ai nale˙zy do dok ladnie jednej z relacji Sq. Podobnie, ka˙zda para (ai, aj) nale˙zy do dok ladnie jednej z relacji Ca, oraz ka˙zde ai jest w relacji G z dok ladnie jednym elementem struktury A — tu u˙zywamy sk ladowych (4)–(7). Rozpatrzmy obliczenie maszyny M dla s lowa pustego. Poka˙zemy, ˙ze jest to obliczenie nie- sko´nczone. Je´sli obliczenie maszyny M sk lada si ,e z co najmniej n krok´ow, to przez qn oznaczmy stan, w kt´orym znajduje si ,e maszyna M po wykonaniu tych n krok´ow, a przez kn pozycj ,e g lowicy w tym momencie. Zawarto´sci ,a m-tej kom´orki ta´smy po n-tym kroku obliczenia niech za´s b ,edzie symbol bnm. Przez indukcj ,e ze wzgl ,edu na n dowodzimy, ˙ze dla dowolnego n ∈ N obliczenie sk lada si ,e z co najmniej n krok´ow, oraz: an ∈ SA qn (an, am) ∈ CA bnm (an, akn) ∈ GA. Inaczej m´owi ,ac, model A prawid lowo reprezentuje kolejne konﬁguracje maszyny. Dla n = 0 powy˙zsze zwi ,azki wynikaj ,a wprost z prawdziwo´sci cz lonu (1) naszej koniunkcji. W kroku indukcyjnym skorzystamy przede wszystkim z cz lonu (14), kt´ory gwarantuje, ˙ze stan qn nie jest ko´ncowy. Okre´slona jest wi ,ec warto´s´c funkcji przej´scia δ(qn, bmkn). Mo˙zemy wi ,ec odwo la´c si ,e do sk ladowych (9–12), kt´ore zapewniaj ,a poprawn ,a zmian ,e stanu i symbolu pod g lowic ,a (8), zachowanie bez zmian reszty ta´smy (9) i przesuni ,ecie g lowicy (10–12). Szczeg´o ly dowodu pozostawiamy Czytelnikowi. Twierdzenie 3.8 mo˙zna wzmocni´c, pokazuj ,ac ( ´Cwiczenie 13), ˙ze problem jest nierozstrzygalny nawet dla formu l nad pewn ,a ustalon ,a sygnatur ,a. W istocie, jest tak dla wi ,ekszo´sci sygnatur, z wyj ,atkiem bardzo ” ubogich” przypadk´ow. Dwa takie przypadki s ,a przedmiotem ´Cwicze´n 3 i 5 do Rozdzia lu 13. ´Cwiczenia 1. Stosuj ,ac schematy (6–9) z Faktu 3.1, pokaza´c, ˙ze nast ,epuj ,ace formu ly s ,a tautologiami: (a) (∃yp(y) → ∀zq(z)) → ∀y∀z(p(y) → q(z)); (b) (∀x∃yr(x, y) → ∃x∀yr(y, x)) → ∃x∀y(r(x, y) → r(y, x)); (c) ∀x∃y((p(x) → q(y)) → r(y)) → ((∀xp(x) → ∀yq(y)) → ∃yr(y)); (d) ∀x(p(x) → ∃yq(y)) → ∃y(∃xp(x) → q(y)). 2. Jak rozumiesz nast ,epuj ,ace zdania? Jak je sformu lowa´c, ˙zeby nie budzi ly w ,atpliwo´sci? (a) Nie wolno pi´c i gra´c w karty. (b) Nie wolno plu´c i lapa´c. 24 (c) Zabrania si ,e za´smiecania i zanieczyszczania drogi. 8 (d) Zabrania si ,e za´smiecania lub zanieczyszczania drogi. 9 (e) Wpisa´c, gdy osoba ubezpieczona nie posiada numer´ow identyﬁkacyjnych NIP lub PESEL. 10 (f) Podaj przyk lad liczby, kt´ora jest pierwiastkiem pewnego r´ownania kwadratowego o wsp´o l- czynnikach ca lkowitych i takiej, kt´ora nie jest. (g) Warunek zachodzi dla ka˙zdego x i dla pewnego y. 3. Czy nast ,epuj ,ace deﬁnicje mo˙zna lepiej sformu lowa´c? (a) Zbi´or A jest dobry, je´sli ma co najmniej 2 elementy. (b) Zbi´or A jest dobry, je´sli dla ka˙zdego x ∈ A, je´sli x jest parzyste, to x jest podzielne przez 3. (c) Zbi´or A jest dobry, je´sli dla pewnego x ∈ A, je´sli x jest parzyste, to x jest podzielne przez 3. 4. Wskaza´c b l ,ad w rozumowaniu: (a) Aby wykaza´c prawdziwo´s´c tezy ” Dla dowolnego n, je´sli zachodzi warunek W (n) to zachodzi warunek U (n)” za l´o˙zmy, ˙ze dla dowolnego n zachodzi W (n). . . (b) Aby wykaza´c prawdziwo´s´c tezy ” Dla pewnego n, je´sli zachodzi warunek W (n) to zachodzi warunek U (n)” za l´o˙zmy, ˙ze dla pewnego n zachodzi W (n). . . 5. Sformu lowa´c poprawnie zaprzeczenia stwierdze´n: • Liczby m i n s ,a pierwsze. • Liczby m i n s ,a wzgl ,ednie pierwsze. 6. Czy zdanie ”Liczba a nie jest kwadratem pewnej liczby ca lkowitej” jest poprawnym zaprzeczeniem zdania ”Liczba a jest kwadratem pewnej liczby ca lkowitej”? 7. Sygnatura Σ sk lada si ,e z symboli r, s ∈ ΣR 1 , R, S ∈ ΣR 2 i g ∈ ΣF 2 . Napisa´c takie zdania ϕ i ψ, ˙ze: (a) zdanie ϕ jest prawdziwe dok ladnie w tych modelach A = ⟨A, RA, SA, rA, sA, gA⟩, w kt´o- rych obie relacje RA, SA s ,a przechodnie, ale ich suma nie jest przechodnia; (b) zdanie ψ jest prawdziwe dok ladnie w tych modelach A = ⟨A, RA, SA, rA, sA, gA⟩, w kt´o- rych s A jest obrazem iloczynu kartezja´nskiego rA × rA przy funkcji gA. 8. Sygnatura Σ sk lada si ,e z dwuargumentowych symboli relacyjnych r i s oraz dwuargumentowego symbolu funkcyjnego f . Napisa´c (mo˙zliwie najkr´otsze) zdanie, kt´ore jest prawdziwe dok ladnie w tych modelachA = ⟨A, rA, sA, f A⟩, w kt´orych: (a) Z lo˙zenie relacji rA i s A zawiera si ,e w ich iloczynie rA ∩ s A; (b) Zbi´or warto´sci funkcji f A jest rzutem sumy rA ∪ s A na pierwsz ,a wsp´o lrz ,edn ,a; (c) Relacja rA nie jest funkcj ,a z A w A; (d) Obraz rA przy funkcji f A jest podstruktur ,a w A; (e) Obraz zbioru A × A przy funkcji f A jest pusty. 9. Dla ka˙zdej z par struktur: (a) ⟨N, ≤⟩ i ⟨{m − 1 n | m, n ∈ N − {0}}, ≤⟩; 8Kodeks Drogowy przed nowelizacj ,a w roku 1997. 9Kodeks Drogowy po nowelizacji w roku 1997. 10Instrukcja wype lniania formularza ZUS ZCZA (Zg loszenie danych o cz lonkach rodziny. . . ) 25 (b) ⟨N, +⟩ i ⟨Z, +⟩; (c) ⟨N, ≤⟩ i ⟨Z, ≤⟩, wska˙z zdanie prawdziwe w jednej z nich a w drugiej nie. 10. Napisa´c takie zdania ϕ i ψ, ˙ze: (a) zdanie ϕ jest prawdziwe w modelu A = ⟨Z, +, 0⟩, ale nie w modelu B = ⟨N, +, 0⟩; (b) zdanie ψ jest prawdziwe w modelu B = ⟨Z, +, 0⟩, ale nie w modelu C = ⟨Q, +, 0⟩. 11. Wskaza´c formu l ,e pierwszego rz ,edu: (a) spe lnialn ,a w ciele liczb rzeczywistych ale nie w ciele liczb wymiernych; (b) spe lnialn ,a w algebrze N z mno˙zeniem, ale nie w algebrze N z dodawaniem; (c) spe lnialn ,a w ⟨{a, b}∗, ·, ε⟩ ale nie w ⟨{a, b, c}∗, ·, ε⟩. 12. Zmodyﬁkowa´c konstrukcj ,e z dowodu Twierdzenia 3.8 w ten spos´ob, aby w formule ψM nie wyst ,epowa l symbol r´owno´sci ani sta la c. 13. Zmodyﬁkowa´c konstrukcj ,e z dowodu Twierdzenia 3.8 w ten spos´ob, aby ψM by la zawsze formu l ,a ustalonej sygnatury (niezale˙znej od maszyny M). Wywnioskowa´c st ,ad, ˙ze logika pierwszego rz ,edu nad t ,a ustalon ,a sygnatur ,a jest nierozstrzygalna. 26 4 Ograniczenia logiki pierwszego rz ,edu Ten rozdzia l po´swi ,econy jest ograniczeniom, kt´orym podlega j ,ezyk logiki pierwszego rz ,edu. Okazuje si ,e, ˙ze nie ka˙zde poj ,ecie da si ,e w nim wyrazi´c, a tak˙ze, ˙ze s ,a poj ,ecia, kt´ore daj ,a si ,e wyrazi´c, ale odpowiednie zdanie lub formu la z konieczno´sci musi by´c skomplikowane. Rozwa˙zania w tym rozdziale b ,edziemy prowadzi´c przy za lo˙zeniu, ˙ze w sygnaturze wyst ,epuj ,a wy l ,acznie symbole relacyjne. Wyniki daj ,a si ,e zastosowa´c do sygnatur z symbolami funkcyj- nymi, ale wymaga to zakodowania wszystkich funkcji jako relacji. Zaczniemy od miary skomplikowania formu l, kt´ora b ,edzie przydatna w dalszym ci ,agu. Deﬁnicja 4.1 Rang ,e kwantyﬁkatorow ,a QR(ϕ) formu ly ϕ deﬁniujemy jak nast ,epuje: • QR(⊥) = QR(t1 = t2) = QR(r(t1, . . . , tk)) = 0 dla dowolnych term´ow t1, . . . , tk oraz r ∈ ΣR k . • QR(ϕ → ψ) = max(QR(ϕ), QR(ψ)). • QR(∀xϕ) = 1 + QR(ϕ). Intuicyjnie QR to g l ,eboko´s´c zagnie˙zd˙zenia kwantyﬁkator´ow w formule. Jest to jedna z wielu mo˙zliwych miar stopnia komplikacji formu ly ϕ. Parametr ten ma nast ,epuj ,ace znaczenie: je´sli struktura A ma n element´ow, to pesymistyczny czas sprawdzenia, czy dla zdania ϕ zachodzi A |= ϕ jest asymptotycznie proporcjonalny do nQR(ϕ), gdy u˙zyjemy naturalnego algorytmu do wykonania tego zadania, kt´ory dla ka˙zdego kwantyﬁkatora w formule przegl ,ada wszystkie elementy struktury. Teraz mo˙zemy wyja´sni´c, dlaczego nie dopuszczamy symboli funkcyjnych w sygnaturze. Ot´o˙z ich obecno´s´c zak l´oca potrzebne nam w lasno´sci funkcji QR. Tytu lem przyk ladu, formu la R(x, f (f (x))) jest atomowa i jej ranga kwantyﬁkatorowa powinna wynosi´c 0. Tymczasem gdy f b ,edziemy reprezentowa´c w strukturze jako dwuargumentow ,a relacj ,e F , ta sama formu la przybierze posta´c ∃y∃z(F (x, y) ∧ F (y, z) ∧ R(x, z)), kt´orej ranga kwantyﬁkatorowa wynosi 2. Twierdzenia, kt´orych dalej dowodzimy, odwo luj ,a si ,e do warto´sci QR zdeﬁniowanych powy˙zej dla logiki bez symboli funkcyjnych. To w la´snie jest przyczyna, dla kt´orej funkcje wykluczamy z rozwa˙za´n. 4.1 Charakteryzacja Fra¨ıss´e Deﬁnicja 4.2 Je´sli A jest struktur ,a relacyjn ,a oraz ∅ ̸= B ⊆ A, to struktura A|B tej samej sygnatury Σ co A, nazywana podstruktur ,a indukowan ,a przez B w A, ma no´snik B, za´s dla ka˙zdego r ∈ ΣR n rA|B = rA ∩ Bn. Deﬁnicja 4.3 Niech A, B b ,ed ,a strukturami relacyjnymi tej samej sygnatury Σ, ponadto niech A′ ⊆ A i B′ ⊆ B. Je´sli funkcja h : A′ → B′ jest izomorﬁzmem podstruktur in- dukowanych h : A|A′ ∼= B|B′, to m´owimy, ˙ze h jest cz ,e´sciowym izomorﬁzmem z A w B. Jego dziedzina to dom(h) = A′, a obraz to rg(h) = B′. 27 Na zasadzie konwencji umawiamy si ,e, ˙ze ∅ jest cz ,e´sciowym izomorﬁzmem z A w B o pustej dziedzinie i pustym obrazie. Dla dw´och cz ,e´sciowych izomorﬁzm´ow g, h z A w B piszemy g ⊆ h gdy dom(g) ⊆ dom(h) oraz g(a) = h(a) dla wszystkich a ∈ dom(g), to jest wtedy, gdy g jest zawarte jako zbi´or w h. Deﬁnicja 4.4 Niech m b ,edzie dodatni ,a liczb ,a naturaln ,a. Dwie struktury relacyjne tej samej sygnatury s ,a m-izomorﬁczne, co oznaczamy A ∼=m B, gdy istnieje rodzina {In | n ≤ m} w kt´orej ka˙zdy In jest niepustym zbiorem cz ,e´sciowych izomorﬁzm´ow z A w B, oraz spe lniaj ,aca nast ,epuj ,ace dwa warunki: Tam Dla ka˙zdego h ∈ In+1 oraz ka˙zdego a ∈ A istnieje takie g ∈ In, ˙ze h ⊆ g oraz a ∈ dom(g). Z powrotem Dla ka˙zdego h ∈ In+1 oraz ka˙zdego b ∈ B istnieje takie g ∈ In, ˙ze h ⊆ g oraz b ∈ rg(g). Sam ,a rodzin ,e {In | n ≤ m} nazywamy w´owczas m-izomorﬁzmem struktur A i B, co oz- naczamy {In | n ≤ m} : A ∼=m B. Nieformalne wyja´snienie jest takie: In to zbi´or cz ,e´sciowych izomorﬁzm´ow, kt´ore mog ,a by´c rozszerzone n-krotnie o dowolne elementy w dziedzinie i obrazie, a kolejne rozszerzenia le˙z ,a w In−1, . . . , I0. Deﬁnicja 4.5 Dwie struktury relacyjne tej samej sygnatury s ,a sko´nczenie izomorﬁczne, sym- bolicznie A ∼=f in B, gdy istnieje rodzina {In | n ∈ ω}, taka, ˙ze ka˙zda podrodzina {In | n ≤ m} jest m-izomorﬁzmem. Je´sli {In | n ≤ m} ma powy˙zsze w lasno´sci, to piszemy {In | n ≤ m} : A ∼=f in B, a sam ,a rodzin ,e nazywamy sko´nczonym izomorﬁzmem. Fakt 4.6 • Je´sli A ∼= B, to A ∼=f in B. • Je´sli A ∼=f in B oraz no´snik A jest zbiorem sko´nczonym, to A ∼= B. Dow´od: ´Cwiczenie. Deﬁnicja 4.7 Dwie struktry A i B tej samej sygnatury s ,a elementarnie r´ownowa˙zne, co zapisujemy symbolicznie A ≡ B, gdy dla ka˙zdego zdania ϕ logiki pierwszego rz ,edu nad t ,a sam ,a sygnatur ,a, A |= ϕ wtedy i tylko wtedy, gdy B |= ϕ. Dwie struktry A i B tej samej sygnatury s ,a m-elementarnie r´ownowa˙zne, symbolicznie A ≡m B, gdy dla ka˙zdego zdania ϕ logiki pierwszego rz ,edu nad t ,a sam ,a sygnatur ,a, o randze kwantyﬁkatorowej nie przekraczaj ,acej m, zachodzi A |= ϕ wtedy i tylko wtedy, gdy B |= ϕ. 28 Fakt 4.8 A ∼=f in B wtedy i tylko wtedy, gdy dla ka˙zdego naturalnego m zachodzi A ∼=m B. Dow´od: Wynikanie z lewej do prawej jest oczywiste. Za l´o˙zmy teraz, ˙ze dla ka˙zdego m istnieje rodzina {I m n | n ≤ m} spe lniaj ,aca warunki z deﬁnicji relacji ∼=m . Rozwa˙zmy rodzin ,e {Jn | n ∈ ω}, gdzie Jn = ⋃m∈ω I m n . Bezpo´srednie sprawdzenie pokazuje natychmiast, ˙ze spe lnia ona warunki deﬁnicji relacji ∼=f in . Twierdzenie 4.9 (Fra¨ıss´e) Niech Σ b,edzie dowoln ,a sygnatur ,a relacyjn ,a zawieraj ,ac ,a sko´n- czenie wiele symboli, oraz niech A, B b,ed ,a dowolnymi strukturami nad Σ. • Dla ka˙zdego m ∈ N zachodzi r´ownowa˙zno´s´c: A ∼=m B wtedy i tylko wtedy gdy A ≡m B. • A ∼=f in B wtedy i tylko wtedy gdy A ≡ B. Dow´od: Jest oczywiste, ˙ze druga r´ownowa˙zno´sc wynika z pierwszej. Pierwsz ,a z kolei udowodnimy tylko z lewej do prawej strony. Dow´od w stron ,e przeciwn ,a jest bardziej zawi ly technicznie, a w dodatku ta implikacja jest rzadko u˙zywana w praktyce. Wyra˙za za to istotn ,a z metodologicznego punktu widzenia informacj ,e: je´sli dwie struktury s ,a (m-)elementarnie r´ownowa˙zne, to fakt ten mo˙zna na pewno udowodni´c pos luguj ,ac si ,e metod ,a Fra¨ıss´e, cho´c oczywi´scie nie ma gwarancji, ˙ze b ,edzie to metoda najprostsza. Ustalmy m ∈ N . Dow´od tego, ˙ze z A ∼=m B wynika A ≡m B sprowadza si ,e do wykazania nast ,epuj ,acego faktu za pomoc ,a indukcji ze wzgl ,edu na budow ,e ϕ: Niech {In | n ≤ m} b,edzie rodzin ,a o kt´orej mowa w deﬁnicji A ∼=m B, niech ϕ b,edzie formu l ,a o co najwy˙zej r zmiennych wolnych (bez utraty og´olno´sci niech b,ed ,a to x1, . . . , xr) i spe lniaj ,ac ,a QR(ϕ) ≤ n ≤ m oraz niech g ∈ In. W´owczas dla dowolnych a1, . . . , ar ∈ dom(g) nast ,epuj ,ace dwa warunki s ,a r´ownowa˙zne: A, x1 : a1, . . . , xr : ar |= ϕ B, x1 : g(a1), . . . , xr : g(ar) |= ϕ. Dla formu l atomowych, powy˙zsza teza wynika wprost z faktu, ˙ze g jest cz ,e´sciowym izomor- ﬁzmem (przypomnijmy ˙ze w sygnaturze nie ma symboli funkcyjnych i co za tym idzie jedynymi termami s ,a zmienne). Gdy ϕ ma posta´c ψ → ξ, to mamy nast ,epuj ,acy ci ,ag r´ownowa˙znych warunk´ow: • A, x1 : a1, . . . , xr : ar |= ψ → ξ • A, x1 : a1, . . . , xr : ar ̸|= ψ lub A, x1 : a1, . . . , xr : ar |= ξ • A, x1 : g(a1), . . . , xr : g(ar) ̸|= ψ lub A, x1 : g(a1), . . . , xr : g(ar) |= ξ 29 • A, x1 : g(a1), . . . , xr : g(ar) |= ψ → ξ, przy czym druga r´ownowa˙zno´s´c wynika z za lo˙zenia indukcyjnego, a pierwsza i trzecia z deﬁnicji semantyki. Gdy ϕ ma posta´c ∀xψ, to, jako ˙ze xr+1 /∈ F V (ϕ) i co za tym idzie |= (∀xψ) ↔ ∀xr+1ψ(xr+1/x) (patrz Fakt 2.12), mo˙zemy bez utraty og´olno´sci za lo˙zy´c, ˙ze ϕ ma posta´c ∀xr+1ψ. Z za lo˙ze- nia QR(ϕ) ≤ n wynika, ˙ze QR(ψ) ≤ n − 1. Mamy teraz nast ,epuj ,acy ci ,ag r´ownowa˙znych warunk´ow: • (A, x1 : a1, . . . , xr : ar) |= ϕ • Dla ka˙zdego a ∈ A zachodzi (A, x1 : a1, . . . , xr : ar, xr+1 : a) |= ψ • Dla ka˙zdego a ∈ A istnieje takie h ∈ In−1, ˙ze g ⊆ h, a ∈ dom(h) oraz (A, x1 : a1, . . . , xr : ar, xr+1 : a) |= ψ • Dla ka˙zdego a ∈ A istnieje takie h ∈ In−1, ˙ze g ⊆ h, a ∈ dom(h) oraz (B, x1 : g(a1), . . . , xr : g(ar), xr+1 : h(a)) |= ψ • Dla ka˙zdego b ∈ B istnieje takie h ∈ In−1, ˙ze g ⊆ h, b ∈ rg(h) oraz (B, x1 : g(a1), . . . , xr : g(ar), xr+1 : b) |= ψ • Dla ka˙zdego b ∈ B zachodzi (B, x1 : g(a1), . . . , xr : g(ar), xr+1 : b) |= ψ • (B, x1 : g(a1), . . . , xr : g(ar)) |= ϕ. R´ownowa˙zno´sci druga i czwarta zachodz ,a na mocy warunk´ow Tam i Z powrotem, trzecia na mocy za lo˙zenia indukcyjnego, a pozosta le na mocy deﬁnicji spe lniania. Poka˙zemy teraz pierwszy przyk lad inherentnego ograniczenia logiki pierwszego rz ,edu. Fakt 4.10 Je´sli A, B s ,a dwoma sko´nczonymi liniowymi porz ,adkami o mocach wi ,ekszych ni˙z 2m, to A ≡m B. Dow´od: Bez utraty og´olno´sci mo˙zemy za lo˙zy´c, ˙ze A = {0, . . . , N }, B = {0, . . . , M }, przy czym 2m < N ≤ M , a porz ,adek jest porz ,adkiem naturalnym. Dow´od przeprowadzamy wykorzystuj ,ac Twierdzenie 4.9, czyli w istocie wykazujemy, ˙ze A ∼=m B. Dla danego k ≤ m okre´slmy ” odleg lo´s´c” dk pomi ,edzy elementami naszych struktur jak nast ,epuje: dk(a, b) = { |b − a| je´sli |b − a| < 2k ∞ wpp. Niech Ik dla k ≤ m b ,edzie zbiorem wszystkich cz ,e´sciowych izomorﬁzm´ow g z A w B takich, ˙ze {⟨0, 0⟩, ⟨N, M ⟩} ⊆ g oraz dk(a, b) = dk(g(a), g(b)) dla wszystkich a, b ∈ dom(g). Oczywi´scie Ik ̸= ∅ bo {⟨0, 0⟩, ⟨N, M ⟩} ∈ Ik. 30 Pokazujemy w lasno´s´c Tam dla rodziny {Ik | k ≤ m}. Niech g ∈ Ik+1. Niech a ∈ {0, . . . , N }. Mamy wskaza´c w Ik cz ,e´sciowy izomorﬁzm h ⊇ g taki, ˙ze a ∈ dom(h). Rozr´o˙zniamy dwa przypadki: (i) Je´sli istnieje takie b ∈ dom(g), ˙ze dk(a, b) < ∞, to w B jest dok ladnie jeden element a′, kt´ory jest tak samo po lo˙zony wzgl ,edem g(b) jak a wzgl ,edem b, oraz spe lnia dj(a′, g(b)) = dj(a, b). K ladziemy w´owczas h(a) := a′ i h jest wtedy cz ,e´sciowym izomorﬁzmem zachowuj ,a- cym odleg lo´sci dj. (ii) Je´sli natomiast takiego b nie ma, to niech a′ < a < a′′, gdzie a′, a′′ s ,a najbli˙zszymi b ele- mentami po lewej i po prawej, kt´ore nale˙z ,a do dom(g). W´owczas dj(a′, a) = dj(a, a′′) = ∞, co w my´sl deﬁnicji dj oznacza, ˙ze dj+1(a′, a′′) = ∞. Zatem na mocy za lo˙zenia indukcyjnego tak˙ze dj+1(g(a′), g(a′′)) = ∞. Istnieje wi ,ec g(a′) < b < g(a′′) takie, ˙ze dj(g(a′), b) = dj(b, g(a′′)) = ∞, i w´owczas k lad ,ac h(a) := b uzyskujemy ˙z ,adane rozszerzenie. Przyk lad powy˙zszy wskazuje na kilka istotnych ogranicze´n logiki pierwszego rz ,edu. Po pier- wsze, nie da si ,e ˙zadnym zdaniem zdeﬁniowa´c nawet tak prostego poj ,ecia jak ” porz ,adek li- niowy o parzystej liczbie element´ow”, i to bez wzgl ,edu na to, jak by´smy je rozumieli dla modeli niesko´nczonych. Istotnie, zdanie kt´ore mia loby deﬁniowa´c tak ,a w lasno´s´c musia loby mie´c jak ,a´s rang ,e kwantyﬁkatorow ,a, powiedzmy q. Jednak w my´sl poprzedniego twierdzenia, porz ,adki o mocach 2q + 1 i 2q + 2 s ,a q-elementarnie r´ownowa˙zne i nasze hipotetyczne zdanie jest albo prawdziwe w obu, albo fa lszywe w obu, podczas gdy powinno by´c w jednym fa lszywe, a w drugim prawdziwe. Drugim ograniczeniem jest fakt, ˙ze ka˙zda specyﬁkacja porz ,adku liniowego o mocy n w logice pierwszego rz ,edu musi z konieczno´sci mie´c rang ,e kwantyﬁkatorow ,a co najmniej log2 n, a wi ,ec sugeruje algorytm sprawdzenia, czy dany obiekt mocy m istotnie spe lnia t ,e specyﬁkacj ,e, kt´orego czas dzia lania ma rz ,ad wielko´sci mlog2 n, co jest wynikiem fatalnym.11 Bierze si ,e to st ,ad, ˙ze prawdziwo´s´c zdania o randze kwantyﬁkatorowej q sprawdza si ,e w danej sko´nczonej strukturze za pomoc ,a q zagnie˙zd˙zonych p ,etli, z kt´orych ka˙zda przegl ,ada ca ly no´snik struktury i odpowiada jednemu kwantyﬁkatorowi. 4.2 Gra Ehrenfeuchta Charakteryzacja Fra¨ıss´e jest do´s´c skomplikowana i odpychaj ,aca w bezpo´srednim u˙zyciu. W praktyce jej popularno´s´c ogromnie zwi ,ekszy lo podanie przez Andrzeja Ehrenfeuchta jej r´ownowa˙znego opisu w terminach dwuosobowej gry, kt´or ,a teraz zdeﬁniujemy. Gra ta doskonale sprawdza si ,e w rozumowaniach intuicyjnych. Praktyczne do´swiadczenie wskazuje, ˙ze pr´oby napisania bardzo formalnego dowodu przy u˙zyciu gry ko´ncz ,a si ,e zwykle wskazaniem rodziny zbior´ow cz ,e´sciowych izomorﬁzm´ow w duchu Fra¨ıss´e. Niech Σ b ,edzie sygnatur ,a relacyjn ,a i niech A, B b ,ed ,a strukturami sygnatury Σ. Dla uproszczenia zak ladamy, ˙ze A ∩ B = ∅. 11Na szcz ,e´scie znamy lepsze algorytmy wykonuj ,ace to zadanie. 31 Deﬁnicja 4.11 Gra Ehrenfeuchta Gm(A, B) jest rozgrywana przez dw´och graczy, oznaczanych I i II. Trwa ona przez m rund. W i-tej rundzie (i = 1, . . . , m) najpierw wykonuje ruch gracz I, wybieraj ,ac jedn ,a ze struktur oraz jeden z element´ow jej no´snika. Jest on oznaczany ai je´sli pochodzi z A, za´s bi, je´sli z B. Jako drugi wykonuje ruch gracz II, kt´ory musi wybra´c element w pozosta lej strukturze (czyli w A, je´sli I wybra l element w B, oraz w B, je´sli I wybra l element w A) i oznaczy´c go ai lub bi, zale˙znie od tego, sk ,ad wybiera l. W ci ,agu m rund wybrane zostaj ,a elementy a1, . . . , am ∈ A oraz b1, . . . , bm ∈ B. Gracz II wygrywa rozgrywk ,e, je´sli funkcja h = {⟨ai, bi⟩ | i = 1, . . . , m} jest cz ,e´sciowym izomorﬁzmem z A w B. W przeciwnym wypadku wygrywa gracz I. M´owimy, ˙ze gracz II ma strategi ,e wygrywaj ,ac ,a w grze Gm(A, B), je´sli mo˙ze wygra´c ka˙zd ,a rozgrywk ,e, niezale˙znie od posuni ,e´c gracza I. Deﬁnicja powy˙zsza dopuszcza powtarzanie ruch´ow przez obu graczy, czyli wybieranie ele- ment´ow, kt´ore poprzednio by ly ju˙z wybrane. Jest to dogodne, gdy˙z upraszcza deﬁnicj ,e. Gdyby´smy bowiem zakazali tego, to albo niemo˙zliwe by loby rozegranie gry Gm(A, B) gdy cho´c jedna ze struktur ma moc mniejsz ,a ni˙z m, albo trzeba by by lo wprowadzi´c w deﬁnicji specjalny warunek s lu˙z ,acy do rozstrzygania zwyci ,estwa w sytuacjach, gdy brak mo˙zliwo´sci dalszych ruch´ow. W praktyce jednak w dowodach prawie nigdy nie rozpatruje si ,e takich ruch´ow, gdy˙z jest oczywiste, ˙ze wykonanie takiego posuni ,ecia przez gracza I nie przybli˙za go do zwyci ,estwa, za´s gdy wykona je gracz II mimo ˙ze nie zrobi l tego gracz I, powoduje to jego natychmiastow ,a przegran ,a. Twierdzenie 4.12 (Ehrenfeucht) • Gracz II ma strategi ,e wygrywaj ,ac ,a w grze Gm(A, B) wtedy i tylko wtedy, gdy A ∼=m B. • Gracz II ma dla ka˙zdego m strategi ,e wygrywaj ,ac ,a w grze Gm(A, B) wtedy i tylko wtedy, gdy A ∼=f in B. Dow´od: ´Cwiczenie. Poni˙zsze twierdzenie ilustruje, w jaki spos´ob gra mo˙ze zosta´c wykorzystana dla wskazania ogranicze´n mo˙zliwo´sci logiki pierwszego rz ,edu. Twierdzenie 4.13 Je´sli A = ⟨A, ≤A⟩ i B = ⟨B, ≤B⟩ s ,a dwoma porz ,adkami liniowymi, g ,estymi, bez elementu pierwszego i ostatniego, to A ≡ B. Dow´od: W my´sl Twierdzenia 4.12 nale˙zy pokaza´c, ˙ze dla ka˙zdego m gracz II ma strate- gi ,e wygrywaj ,ac ,a w grze Gm(A, B). Opiszemy teraz t ,e strategi ,e. Jej posta´c nie zale˙zy od 32 liczby rund do rozegrania. Poka˙zemy te˙z, ˙ze je´sli po zako´nczeniu poprzedniej rundy warunek wygrywaj ,acy dla gracza II by l spe lniony, to po wykonaniu ruchu zgodnie ze wskazan ,a strate- gi ,a pozostanie on nadal spe lniony. W´owczas na mocy zasady indukcji po rozegraniu dowolnej ilo´sci rund, w kt´orych gracz II b ,edzie si ,e stosowa l do tej strategii, pozostanie on zwyci ,ezc ,a. Zauwa˙zmy, ˙ze warunek o cz ,e´sciowym izomorﬁzmie w naszej sytuacji oznacza tyle, ˙ze zbiory {a1, . . . , ak} i {b1, . . . , bk} element´ow wybranych w ka˙zdej ze struktur, po posortowaniu ros- n ,aco zgodnie z porz ,adkiem odpowiednio ≤A oraz ≤B prowadz ,a do identycznych ci ,ag´ow indek- s´ow swoich oznacze´n. Dok ladnie, je´sli ai1 <A ai2 <A · · · <A aik i bj1 <B bj2 <B · · · <B bjk , to zachodz ,a r´owno´sci iℓ = jℓ dla ℓ = 1, . . . , k. • Na pierwszy ruch gracza I gracz II odpowiada w dowolny spos´ob. Przed t ,a rund ,a nie by lo wybranych element´ow, czyli przekszta lcenie opisane w deﬁnicji gry by lo przekszta lceniem pustym, kt´ore na mocy konwencji jest cz ,e´sciowym izomor- ﬁzmem. Po wykonaniu ruchu zgodnie ze strategi ,a ci ,agi indeks´ow w obu strukturach s ,a oczywi´scie identyczne. • We wszystkich kolejnych rundach gracz II okre´sla sw´oj ruch nast ,epuj ,aco. Niech ai1 <A ai2 <A · · · <A aik i bi1 <B bi2 <B · · · <B bik b ,ed ,a (identycznymi na mocy za lo˙zenia indukcyjnego) ci ,agami indeks´ow przed wykonaniem tego ruchu. Ze wzgl ,edu na symetri ,e sytuacji, mo˙zemy bez utraty og´olno´sci za lo˙zy´c, ˙ze gracz I wybiera struktur ,e A. Mo˙ze symbolem ak+1 oznaczy´c: – Element mniejszy od ai1. W´owczas gracz II wybiera element mniejszy od bi1 w B, kt´ory istnieje na mocy za lo˙zenia, ˙ze w B nie ma elementu najmniejszego. Wida´c, ˙ze nowe ci ,agi indeks´ow pozostan ,a r´owne. – Element wi ,ekszy od aik . W´owczas gracz II wybiera element wi ,ekszy od bik w B, kt´ory istnieje na mocy za lo˙zenia, ˙ze w B nie ma elementu ostatniego. Wida´c, ˙ze tak˙ze teraz nowe ci ,agi indeks´ow pozostan ,a r´owne. – Element a spe lniaj ,acy aiℓ <A a <A aiℓ+1 dla pewnego ℓ. W B istnieje element b spe lniaj ,acy biℓ <B b <B biℓ+1, gdy˙z B jest porz ,adkiem g ,estym. Gracz II wybiera taki element i r´ownie˙z w tym wypadku wida´c, ˙ze nowe ci ,agi indeks´ow pozostan ,a r´owne. Na tym dow´od istnienia strategii wygrywaj ,acej dla gracza II jest zako´nczony. Z powy˙zszego wynika mi ,edzy innymi, ˙ze ⟨R, ≤⟩ ≡ ⟨Q, ≤⟩. Zatem nie ma zdania logiki pierw- szego rz ,edu, kt´ore deﬁniuje poj ,ecie porz ,adku ci ,ag lego (tzn. takiego, w kt´orym wszystkie nie- puste ograniczone podzbiory maj ,a kres g´orny i kres dolny), bo musia loby ono by´c prawdziwe w pierwszej ze struktur, a fa lszywe w drugiej. Deﬁnicja 4.14 Teori ,a nazywamy dowolny zbi´or zda´n, zamkni ,ety ze wzgl ,edu na konsek- wencje semantyczne, tj. taki zbi´or zda´n ∆, ˙ze ∆ |= ϕ zachodzi tylko dla ϕ ∈ ∆. Przyk ladem teorii jest ka˙zdy zbi´or postaci {ϕ | Γ |= ϕ}, zwany teori ,a aksjomatyczn ,a wyznaczon ,a przez Γ, czy te˙z postaci Th(K) = {ϕ | A |= ϕ, dla ka˙zdego A ∈ K} (teoria klasy struktur K) albo Th(A) = {ϕ | A |= ϕ} (teoria modelu A). Teori ,e ∆ nazywamy zupe ln ,a, gdy dla ka˙zdego 33 zdania ϕ, dok ladnie jedno ze zda´n ϕ i ¬ϕ nale˙zy do ∆. Zbi´or zda´n prawdziwych w ustalonym modelu jest oczywi´scie zawsze teori ,a zupe ln ,a. Wniosek 4.15 Teoria klasy A wszystkich porz ,adk´ow liniowych, g ,estych, bez elementu pierw- szego i ostatniego jest zupe lna. Dow´od: Teoria o kt´orej m´owimy nie ma modeli sko´nczonych. W my´sl Twierdzenia 4.13 wszystkie jej modele niesko´nczone s ,a elementarnie r´ownowa˙zne. Zatem Th(A) = Th(⟨Q, ≤⟩), a teoria pojedynczego modelu jest zawsze zupe lna. ´Cwiczenia 1. Wykaza´c, ˙ze dla dostatecznie du˙zych q istnieje zdanie o randze kwantyﬁkatorowej q deﬁniuj ,ace porz ,adek liniowy o mocy 2 q. 2. Adaptuj ,ac dow´od Faktu 4.10 udowodni´c, ˙ze struktury ⟨{1 − 1/n | n = 1, 2, . . . }, ≤⟩ oraz ⟨ ⋃∞ n=1{1 − 1/n, 1 + 1/n, 3 − 1/n}, ≤⟩, gdzie ≤ jest w obu wypadkach standardowym porz ,adkiem liczb wymiernych, s ,a elementarnie r´ownowa˙zne. Wywnioskowa´c st ,ad, ˙ze poj ,ecie dobrego porz ,adku nie jest wyra˙zalne w logice pierwszego rz ,edu. (Zupe lnie inny dow´od tego faktu poznamy w Rozdziale 8.) 3. Niech R b ,edzie jednoargumentowym symbolem relacyjnym. Udowodni´c, ˙ze klasa wszystkich takich struktur A = ⟨A, R⟩, ˙ze |R| = |A − R|, nie jest aksjomatyzowalna ˙zadnym zbiorem zda´n pierwszego rz ,edu. 4. Udowodni´c, ˙ze klasa wszystkich (sko´nczonych lub niesko´nczonych) graf´ow A = ⟨A, E⟩, w kt´orych istniej ,a dwa wierzcho lki o r´ownych sobie, sko´nczonych stopniach, nie jest aksjomatyzowalna ˙zadnym zdaniem pierwszego rz ,edu. 5. Udowodni´c, ˙ze klasa wszystkich (sko´nczonych lub niesko´nczonych) graf´ow A = ⟨A, E⟩, kt´orych ka˙zdy sko´nczony podgraf jest planarny, nie jest aksjomatyzowalna ˙zadnym zdaniem pierwszego rz ,edu. 6. Pokaza´c, ˙ze klasa wszystkich relacji r´ownowa˙zno´sci, kt´orych wszystkie sko´nczone klasy abstrakcji maj ,a parzyst ,a moc, nie jest aksjomatyzowalna ˙zadnym zdaniem pierwszego rz ,edu. 7. Dane s ,a dwie struktury relacyjne A = ⟨U, RA⟩ i B = ⟨U, RB⟩ nad sygnatur ,a z lo˙zon ,a z jednego dwuargumentowego symbolu relacyjnego. Ich no´snikiem jest U = {1, 2, . . . , 15}, relacja RA(x, y) zachodzi wtedy i tylko wtedy, gdy x|y, a relacja RB(x, y) wtedy i tylko wtedy, gdy x ≡ y (mod 2). Ustali´c, jak ,a minimaln ,a rang ,e kwantyﬁkatorow ,a ma zdanie ϕ takie, ˙ze A |= ϕ i B ̸|= ϕ. 8. Dane s ,a dwie sze´scioelementowe struktury relacyjne A i B nad sygnatur ,a z lo˙zon ,a z jednego dwuargumentowego symbolu relacyjnego. Struktury s ,a narysowane poni˙zej jako grafy skierowane: ∗oo //OO \u000f\u000f __ ˜˜??????? ∗OO \u000f\u000f //oo ?? \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000 ∗ ∗oo //∗ ∗ ∗OO \u000f\u000f __ ˜˜??????? ∗ ∗ ∗oo //∗ ∗ Ustali´c, jak ,a minimaln ,a rang ,e kwantyﬁkatorow ,a ma zdanie ϕ takie, ˙ze A |= ϕ i B ̸|= ϕ. 34 5 Paradygmaty dowodzenia Sprawdzenie, czy dana formu la rachunku zda´n jest tautologi ,a, polega zwykle na oblicze- niu jej warto´sci dla 2n r´o˙znych warto´sciowa´n, gdzie n jest liczb ,a zmiennych zdaniowych tej formu ly. Jak dot ,ad nie s ,a znane radykalnie szybsze metody. Dla rachunku predy- kat´ow nie istnieje w og´ole ˙zaden algorytm sprawdzania czy dana formu la jest tautologi ,a (Twierdzenie 3.8). W obu przypadkach istniej ,a jednak metody dowodzenia pozwalaj ,ace na wyprowadzanie prawdziwych formu l za pomoc ,a ustalonych procedur syntaktycznych. Ka˙zdy system dowodzenia zawiera dwa sk ladniki: • pocz ,atkowy zbi´or formu l (lub wyra˙ze´n zbudowanych z wielu formu l) zwanych aksjo- matami; • zbi´or operacji przekszta lcaj ,acych wyra˙zenia w wyra˙zenia — operacje te s ,a nazywane regu lami dowodzenia. Regu ly dowodzenia opisuj ,a warunki, przy pomocy kt´orych mo˙zna otrzyma´c nowe wyra˙ze- nie (nazywane konkluzj ,a) z otrzymanych ju˙z wyra˙ze´n (nazywanych przes lankami). Dowody w systemach formalnych s ,a ci ,agami wyra˙ze´n, by´c mo˙ze posiadaj ,acymi dodatkow ,a struktur ,e pozwalaj ,ac ,a na lepsz ,a wizualizacj ,e. W dalszej cz ,e´sci opiszemy trzy systemy dowodzenia: system typu hilbertowskiego (od nazwiska Davida Hilberta), system naturalnej dedukcji oraz rachunek sekwent´ow. Ostatnie dwa sys- temy znajduj ,a zastosowanie w pewnych dzia lach sztucznej inteligencji oraz w systemach auto- matycznego dowodzenia twierdze´n. 5.1 System hilbertowski Poni˙zszy system dowodzenia dotyczy formu l zbudowanych przy u˙zyciu jedynie sp´ojnika →, sta lej ⊥ oraz zmiennych zdaniowych. Przypomnijmy, ˙ze dla dowolnej formu ly ϕ, napis ¬ϕ jest skr´otem zapisu ϕ → ⊥. Symbole ϕ, ψ, ϑ w poni˙zszym systemie oznaczaj ,a dowolne formu ly. Aksjomaty (A1) ϕ → (ψ → ϕ) (A2) (ϕ → (ψ → ϑ)) → ((ϕ → ψ) → (ϕ → ϑ)) (A3) ¬¬ϕ → ϕ Regu la dowodzenia (MP) ϕ ϕ → ψ ψ Regu la (MP) jest nazywana regu l ,a odrywania lub te˙z regu l ,a modus ponens. Dowodem w powy˙zszym systemie nazywamy taki ci ,ag formu l, w kt´orym ka˙zda formu la albo jest aksjomatem, albo te˙z zosta la otrzymana z wcze´sniej wyst ,epuj ,acych formu l w wyniku 35 zastosowania regu ly odrywania. Powiemy, ˙ze formu la ϕ ma dow´od , lub jest twierdzeniem systemu hilbertowskiego, co zapiszemy ⊢H ϕ, gdy istnieje dow´od zawieraj ,acy ϕ. Powy˙zsz ,a deﬁnicj ,e mo˙zemy nieco uog´olni´c. Niech ∆ b ,edzie dowolnym zbiorem formu l. Powiemy, ˙ze formu la ϕ ma dow´od ze zbioru hipotez ∆ (notacja ∆ ⊢H ϕ), gdy ϕ jest twierdzeniem systemu, w kt´orym zbi´or aksjomat´ow zosta l poszerzony o formu ly ze zbioru ∆. Przyk lad 5.1 Niech p b ,edzie zmienn ,a zdaniow ,a. Poka˙zemy, ˙ze formu la p → p jest twierdze- niem systemu hilbertowskiego. Poni˙zej podajemy dow´od dla tej formu ly. W nawiasach po- dajemy nazw ,e aksjomatu, je´sli dana formu la jest instancj ,a tego aksjomatu, lub te˙z numery formu l z wcze´sniejszych krok´ow dowodu, do kt´orych jest stosowana regu la odrywania. 1. (p → ((p → p) → p)) → ((p → (p → p)) → (p → p)) (A2) 2. p → ((p → p) → p) (A1) 3. (p → (p → p)) → (p → p) (1,2) 4. p → (p → p) (A1) 5. p → p (3,4) Zauwa˙zmy, ˙ze w powy˙zszym przyk ladzie mo˙zemy wsz ,edzie zast ,api´c zmienn ,a p przez dowoln ,a formu l ,e ϕ dostaj ,ac dow´od formu ly ϕ → ϕ. Nast ,epuj ,ace twierdzenie jest bardzo u˙zyteczne, gdy trzeba uzasadni´c, ˙ze jaka´s formu la jest twierdzeniem. Twierdzenie 5.2 (o dedukcji) Dla dowolnego zbioru formu l ∆ oraz dowolnych formu l ϕ, ψ, je´sli ∆ ∪ {ϕ} ⊢H ψ, to ∆ ⊢H ϕ → ψ. Dow´od: Dow´od jest indukcyjny ze wzgl ,edu na liczb ,e krok´ow w dowodzie formu ly ψ ze zbioru hipotez ∆ ∪ {ϕ}. Przypu´s´cmy najpierw, ˙ze dow´od ten sk lada si ,e tylko z jednego kroku. Je´sli ψ = ϕ, to stosuj ,ac wyprowadzenie z Przyk ladu 5.1 dostajemy dow´od formu ly ϕ → ϕ. Mo˙zemy oczywi´scie przyj ,a´c, ˙ze formu la ta jest wyprowadzona ze zbioru hipotez ∆. Druga mo˙zliwo´s´c jest taka, ˙ze ψ ∈ ∆ lub te˙z, ˙ze ψ jest aksjomatem. W ka˙zdym z tych przypadk´ow mamy ∆ ⊢H ψ. W´owczas stosuj ,ac regu l ,e odrywania do ψ oraz aksjomatu ψ → (ϕ → ψ) dostajemy formu l ,e ϕ → ψ. Za lo˙zmy teraz, ˙ze ostatnim krokiem w wyprowadzeniu formu ly ψ jest zastosowanie regu ly (MP) do formu l ϑ → ψ oraz ϑ, dla pewnej formu ly ϑ. Z za lo˙zenia indukcyjnego mamy ∆ ⊢H ϕ → (ϑ → ψ) oraz ∆ ⊢H ϕ → ϑ. Stosuj ,ac regu l ,e odrywania do ϕ → (ϑ → ψ) oraz do aksjomatu (A2): (ϕ → (ϑ → ψ)) → ((ϕ → ϑ) → (ϕ → ψ)) dostajemy formu l ,e (ϕ → ϑ) → (ϕ → ψ). Ponownie stosuj ,ac regu l ,e odrywania do tej formu ly oraz do ϕ → ϑ dostajemy ˙z ,adan ,a formu l ,e ϕ → ψ. To ko´nczy dow´od twierdzenia o dedukcji. Twierdzenie 5.3 (o poprawno´sci) Je´sli ∆ ⊢H ϕ, to ∆ |= ϕ. W szczeg´olno´sci, je´sli ⊢H ϕ, to ϕ jest tautologi ,a. 36 Dow´od: Dow´od jest indukcyjny ze wzgl ,edu na liczb ,e krok´ow w wyprowadzeniu formu ly ϕ w systemie hilbertowskim ze zbioru hipotez ∆. Je´sli dow´od ten sk lada si ,e tylko z jednego kroku to albo ϕ ∈ ∆ albo ϕ jest aksjomatem. W obu przypadkach oczywi´scie zachodzi ∆ |= ϕ. Za l´o˙zmy teraz, ˙ze ϕ jest otrzymana przez zastosowanie regu ly odrywania do formu l ψ → ϕ oraz ψ. Z za lo˙zenia indukcyjnego mamy ∆ |= ψ → ϕ oraz ∆ |= ψ. (1) Niech ϱ b ,edzie dowolnym warto´sciowaniem spe lniaj ,acym wszystkie formu ly z ∆. Na mocy (1), warto´sciowanie ϱ spe lnia ψ → ϕ oraz spe lnia ψ. Wynika st ,ad, ˙ze ϱ spe lnia ϕ. Tym samym udowodnili´smy, ˙ze ∆ |= ϕ. To ko´nczy dow´od. Lemat 5.4 Dla dowolnych formu l ϕ, ψ zbudowanych przy u˙zyciu → oraz ⊥, nast ,epuj ,ace for- mu ly s ,a twierdzeniami systemu hilbertowskiego. 1. ϕ → (¬ψ → ¬(ϕ → ψ)); 2. ⊥ → ϕ; 3. (ϕ → ψ) → ((¬ϕ → ψ) → ψ); Dow´od: (1) Niech ∆ = {ϕ, ψ → ⊥, ϕ → ψ}. Stosuj ,ac regu l ,e odrywania do formu l ϕ oraz ϕ → ψ dostajemy ψ. Przez ponowne zastosowanie (MP) do tej formu ly oraz do ψ → ⊥ otrzymujemy wyprowadzenie ⊥. Tym samym pokazali´smy, ˙ze ∆ ⊢H ⊥. Stosuj ,ac teraz trzy razy twierdzenie o dedukcji dostajemy ⊢H ϕ → ((ψ → ⊥) → ((ϕ → ψ) → ⊥)), czyli ⊢H ϕ → (¬ψ → ¬(ϕ → ψ)). (2) Poniewa˙z {⊥, ¬ϕ} ⊢H ⊥, wi ,ec z twierdzenia o dedukcji wynika ⊥ ⊢H ¬¬ϕ. Stosuj ,ac teraz (MP) do tej formu ly oraz do aksjomatu (A3) w postaci ¬¬ϕ → ϕ otrzymujemy ⊥ ⊢H ϕ. Ponowne zastosowanie twierdzenia o dedukcji daje nam ⊢H ⊥ → ϕ. (3) Niech ∆ = {ϕ → ψ, ¬ϕ → ψ}. Zaczynamy od zbioru hipotez ∆ ∪ {ϕ, ¬ψ}. Stosuj ,ac (MP) do formu l ϕ oraz ϕ → ψ dostajemy ψ. Ponowne zastosowanie (MP) do tej formu ly oraz do ¬ψ daje nam ⊥. U˙zywaj ,ac teraz twierdzenia o dedukcji do formu ly ⊥ otrzymujemy ∆ ∪ {¬ψ} ⊢H ¬ϕ. Poniewa˙z mamy ∆ ∪ {¬ψ} ⊢H ¬ϕ → ψ, to stosuj ,ac (MP) otrzymujemy ∆ ∪ {¬ψ} ⊢H ψ. Jeszcze raz u˙zywamy (MP) aby z ¬ψ i ψ otrzyma´c ⊥ i mamy ∆ ∪ {¬ψ} ⊢H ⊥. 37 Na mocy twierdzenia o dedukcji ∆ ⊢H ¬¬ψ. Stosuj ,ac (MP) do formu ly ¬¬ψ oraz do aksjo- matu ¬¬ψ → ψ otrzymujemy ∆ ⊢H ψ. Dwukrotne zastosowanie twierdzenia o dedukcji daje nam ⊢H (ϕ → ψ) → ((¬ϕ → ψ) → ψ). To ko´nczy dow´od lematu. Powy˙zszy system mo˙zna latwo rozszerzy´c do systemu dla formu l opartych o pozosta le sp´ojniki logiczne. Wystarczy w tym celu doda´c aksjomaty wyra˙zaj ,ace r´ownowa˙zno´sci deﬁniuj ,ace te sp´ojniki. (B1) ϕ ∧ ψ → ¬(ϕ → ¬ψ) (B2) ¬(ϕ → ¬ψ) → ϕ ∧ ψ (B3) ϕ ∨ ψ → (¬ϕ → ψ) (B4) (¬ϕ → ψ) → ϕ ∨ ψ Tak otrzymany system oznaczymy przez ⊢H +. Twierdzenie 5.5 (o poprawno´sci dla ⊢H +) Dla dowolnego zbioru formu l ∆ i dla dowol- nej formu ly ϕ w j ,ezyku z ∨, ∧, →, ⊥, je´sli ∆ ⊢H + ϕ to ∆ |= ϕ. Dow´od: Wystarczy sprawdzi´c, ˙ze aksjomaty (B1)–(B4) s ,a tautologiami. Konkluzja wynika z Twierdzenia 5.3 o poprawno´sci dla ⊢H . Lemat 5.6 Dla dowolnej formu ly ϕ istnieje formu la ˜ϕ zbudowana przy u˙zyciu jedynie → oraz ⊥, taka ˙ze ⊢H + ϕ → ˜ϕ oraz ⊢H + ˜ϕ → ϕ. Dow´od: W danej formule ϕ, zast ,apmy ka˙zd ,a podformu l ,e postaci ψ ∧ϑ formu l ,a ¬(ψ → ¬ϑ) oraz ka˙zd ,a podformu l ,e postaci ψ ∨ ϑ formu l ,a ¬ψ → ϑ. Aksjomaty (B1)–(B4) m´owi ,a, ˙ze zast ,apione formu ly s ,a r´ownowa˙zne. Tak wi ,ec latwo dostajemy ⊢H + ϕ → ˜ϕ oraz ⊢H + ˜ϕ → ϕ. Szczeg´o ly dowodu pozostawimy Czytelnikowi. 5.2 System naturalnej dedukcji System naturalnej dedukcji (wprowadzony przez S. Ja´skowskiego i G. Gentzena) operuje wyra˙zeniami zwanymi sekwentami. S ,a to wyra˙zenia postaci ∆ ⊢ ϕ, gdzie ∆ jest pewnym sko´nczonym zbiorem formu l, a ϕ jest formu l ,a. W odr´o˙znieniu od systemu hilbertowskiego, w naturalnej dedukcji istotne s ,a regu ly dowodzenia, a aksjomat jest bardzo prosty. Charak- terystyczn ,a cech ,a naturalnej dedukcji jest to, ˙ze regu ly dowodzenia (za wyj ,atkiem regu ly (PS) ” przez sprzeczno´s´c”) s ,a podzielone na grupy, po jednej dla ka˙zdego sp´ojnika. W ramach jednej takiej grupy mamy dwa rodzaje regu l. Regu ly wprowadzania m´owi ,a o tym w jakiej sytuacji mo˙zna wprowadzi´c dany sp´ojnik na prawo od znaku ⊢ (tj. wywnioskowa´c formu l ,e danego kszta ltu). Regu ly eliminacji m´owi ,a o tym w jakiej sytuacji mo˙zna ten sp´ojnik wyeliminowa´c, tzn. jak mo˙zna u˙zy´c formu ly zbudowanej z jego pomoc ,a do wyprowadzenia innej formu ly. Regu l ,e dowodzenia ” przez sprzeczno´s´c” mo˙zna traktowa´c jako ” siln ,a” regu l ,e eliminacji ⊥. Pami ,etajmy, ˙ze ¬ϕ oznacza formu l ,e ϕ → ⊥. 38 Poni˙zej b ,edziemy stosowa´c nast ,epuj ,ac ,a konwencj ,e: Napis ∆, ϕ1, . . . , ϕn oznacza zbi´or ∆ ∪ {ϕ1, . . . , ϕn}, przy czym nie zak ladamy tu, ˙ze ϕi ̸∈ ∆. Aksjomat (A0) ∆, ϕ ⊢ ϕ Regu ly dowodzenia (→ -intro) ∆, ϕ ⊢ ψ ∆ ⊢ ϕ → ψ (→ -elim) ∆ ⊢ ϕ → ψ ∆ ⊢ ϕ ∆ ⊢ ψ (∧-intro) ∆ ⊢ ϕ ∆ ⊢ ψ ∆ ⊢ ϕ ∧ ψ (∧-elim) ∆ ⊢ ϕ ∧ ψ ∆ ⊢ ϕ (∧-elim) ∆ ⊢ ϕ ∧ ψ ∆ ⊢ ψ (∨-intro) ∆ ⊢ ϕ ∆ ⊢ ϕ ∨ ψ (∨-intro) ∆ ⊢ ψ ∆ ⊢ ϕ ∨ ψ (∨-elim) ∆ ⊢ ϕ ∨ ψ ∆, ϕ ⊢ ϑ ∆, ψ ⊢ ϑ ∆ ⊢ ϑ (PS) ∆, ¬ϕ ⊢ ⊥ ∆ ⊢ ϕ Zauwa˙zmy, ˙ze szczeg´olnym przypadkiem regu ly (→-intro) jest nast ,epuj ,aca regu la, mo˙zna j ,a traktowa´c jak regu l ,e wprowadzenia negacji. ∆, ϕ ⊢ ⊥ ∆ ⊢ ¬ϕ Zauwa˙zmy te˙z, ˙ze szczeg´olnym przypadkiem regu ly (→-elim) jest nast ,epuj ,aca regu la, mo˙zna j ,a traktowa´c jak regu l ,e eliminacji negacji. ∆ ⊢ ¬ϕ ∆ ⊢ ϕ ∆ ⊢ ⊥ O ile dowody w systemi hilbertowskim s ,a tradycyjnie deﬁniowane jako ci ,agi, a wi ,ec struktury liniowe, to w systemie naturalnej dedukcji dowody s ,a drzewami. Pozwala to znacznie lepiej wizualizowa´c zale˙zno´sci pomi ,edzy przes lankami i konkluzj ,a stosowanych regu l. Dowodem sekwentu ∆ ⊢ ϕ w systemie naturalnej dedukcji nazwiemy drzewo etykietowane sekwentami tak, ˙ze korze´n ma etykiet ,e ∆ ⊢ ϕ, li´scie s ,a etykietowane wyst ,apieniami aksjomatu oraz ka˙zdy wewn ,etrzny wierzcho lek jest etykietowany sekwentem otrzymanym z etykiet potomk´ow tego wierzcho lka przy zastosowaniu jednej z regu l. Piszemy ∆ ⊢N ϕ, gdy sekwent ∆ ⊢ ϕ ma dow´od w systemie naturalnej dedukcji. Gdy ∆ = ∅, to m´owimy te˙z, ˙ze ϕ jest twierdzeniem systemu naturalnej dedukcji i zapisujemy to przez ⊢N ϕ. Je´sli ∆ jest zbiorem niesko´nczonym, to ∆ ⊢N ϕ oznacza, ˙ze istnieje dow´od sekwentu ∆0 ⊢ ϕ, dla pewnego sko´nczonego ∆0 ⊆ ∆. Poni˙zej podajemy kilka przyk lad´ow dowod´ow w systemie naturalnej dedukcji. 39 Przyk lad 5.7 • Poka˙zemy ⊢N p → p. p ⊢ p (→ -intro) ⊢ p → p • Poka˙zemy ⊢N p → (q → p). p, q ⊢ p (→ -intro) p ⊢ q → p (→ -intro) ⊢ p → (q → p) • Poka˙zemy ⊢N ¬¬p → p. ¬¬p, ¬p ⊢ ¬¬p ¬¬p, ¬p ⊢ ¬p (→ -elim) ¬¬p, ¬p ⊢ p (PS) ¬¬p ⊢ p (→ -intro) ⊢ ¬¬p → p Twierdzenie 5.8 Dla dowolnego sekwentu ∆ ⊢ ϕ mamy nast ,epuj ,ac ,a r´ownowa˙zno´s´c: ∆ ⊢N ϕ wtedy i tylko wtedy, gdy ∆ ⊢H + ϕ. Dow´od: Aby pokaza´c, ˙ze ka˙zdy dow´od w ⊢N daje si ,e przerobi´c na dow´od w ⊢H + wystarczy sprawdzi´c, ˙ze ka˙zda z regu l systemu naturalnej dedukcji jest dopuszczalna w H +. Tzn. wystar- czy sprawdzi´c, ˙ze je´sli mamy dowody przes lanek w ⊢H +, to mo˙zemy udowodni´c konkluzj ,e. Zauwa˙zmy, ˙ze wyprowadzalno´s´c regu ly(→-intro) jest konsekwencj ,a twierdzenia o dedukcji, natomiast regu la (→-elim) jest regu l ,a (MP). Przyk ladowo poka˙zemy wyprowadzenie (∨-elim) oraz (PS) w H +, pozostawiaj ,ac Czytelnikowi wyprowadzenie pozosta lych regu l. Za l´o˙zmy, ˙ze mamy w H + dowody nast ,epuj ,acych sekwent´ow: ∆ ⊢ ϕ ∨ ψ, ∆, ϕ ⊢ ϑ oraz ∆, ψ ⊢ ϑ. W´owczas, stosuj ,ac aksjomat (B2) i regu l ,e (MP) mamy ∆ ⊢H + ¬ϕ → ψ. Za- tem ∆, ¬ϕ ⊢H + ψ i poniewa˙z ∆ ⊢H + ψ → ϑ to r´ownie˙z ∆, ¬ϕ ⊢H + ψ → ϑ. St ,ad ∆, ¬ϕ ⊢H + ϑ. Stosuj ,ac twierdzenie o dedukcji dostajemy ∆ ⊢H + ¬ϕ → ϑ. Skoro mamy r´ownie˙z δ ⊢H + ϕ → ϑ, to na mocy Lematu 5.4(3) otrzymujemy ∆ ⊢H + ϑ. Dla wyprowadzenia (PS) za l´o˙zmy, ˙ze ∆, ¬ϕ ⊢H + ⊥. Z twierdzenia o dedukcji dostajemy ∆ ⊢H + ¬¬ϕ. Tak wi ,ec z (A3) i (MP) dostajemy ∆ ⊢H + ϕ. Dla pokazania implikacji odwrotnej wystarczy pokaza´c, ˙ze wszystkie aksjomaty systemu H + s ,a twierdzeniami systemu naturalnej dedukcji. Wyprowadzenia (A1) i (A3) w ND zosta ly podane w Przyk ladzie 5.7. Przyk ladowo poka˙zemy wyprowadzenia (A2) i (B1). Zaczniemy od wyprowadzenia (A2). Niech ∆ = {ϕ → (ψ → ϑ), ϕ → ψ, ϕ}. Mamy nast ,epuj ,acy dow´od: ∆ ⊢ ϕ → (ψ → ϑ) ∆ ⊢ ϕ (→ -elim) ∆ ⊢ ψ → ϑ ∆ ⊢ ϕ → ψ ∆ ⊢ ϕ (→ -elim) ∆ ⊢ ψ (→ -elim) ∆ ⊢ ϑ 40 Stosuj ,ac trzy razy (→ -intro) do sekwentu ∆ ⊢ ϑ dostajemy wyprowadzenie aksjomatu (A2). Nast ,epnie poka˙zemy dow´od (B1) w ND. Zaczniemy od wyprowadzenia ¬(ϕ → ¬ψ) ⊢ ϕ, gdzie ∆ = {¬(ϕ → ¬ψ), ¬ϕ}: ∆, ϕ, ψ ⊢ ¬ϕ ∆, ϕ, ψ ⊢ ϕ (→ -elim) ∆, ϕ, ψ ⊢ ⊥ (→ -intro) ∆, ϕ ⊢ ¬ψ (→ -intro) ∆ ⊢ ϕ → ¬ψ ∆ ⊢ ¬(ϕ → ¬ψ) (→ -elim) ∆ ⊢ ⊥ (PS) ¬(ϕ → ¬ψ) ⊢ ϕ Nast ,epnie wyprowadzimy sekwent ¬(ϕ → ¬ψ) ⊢ ψ. Niech ∆ = {¬(ϕ → ¬ψ), ¬ψ} ∆, ϕ ⊢ ¬ψ (→ -intro) ∆ ⊢ ϕ → ¬ψ ∆ ⊢ ¬(ϕ → ¬ψ) (→ -elim) ∆ ⊢ ⊥ (PS) ¬(ϕ → ¬ψ) ⊢ ψ Maj ,ac wyprowadzone sekwenty ¬(ϕ → ¬ψ) ⊢ ϕ oraz ¬(ϕ → ¬ψ) ⊢ ψ mo˙zemy zako´nczy´c dow´od (B1). ¬(ϕ → ¬ψ) ⊢ ϕ ¬(ϕ → ¬ψ) ⊢ ψ (∧-intro) ¬(ϕ → ¬ψ) ⊢ ϕ ∧ ψ (→ -intro) ⊢ ¬(ϕ → ¬ψ) → (ϕ ∧ ψ) 5.3 Rachunek sekwent´ow Dla przedstawienia rachunku sekwent´ow rozszerzymy nieco poj ,ecie sekwentu. Przez sekwent b ,edziemy teraz rozumie´c napis ∆ ⊢ Γ, gdzie ∆ oraz Γ s ,a sko´nczonymi zbiorami formu l. Intuicyjnie, wyprowadzalno´s´c sekwentu ∆ ⊢ Γ w rachunku sekwent´ow b ,edzie oznacza´c, ˙ze alternatywa formu l z Γ wynika z hipotez ∆. Podobnie jak w poprzedniej cz ,e´sci, rozwa˙zamy formu ly, zbudowane w oparciu o sp´ojniki →, ∨, ∧ oraz sta l ,a zdaniow ,a ⊥. Negacj ,e ¬ traktujemy jako sp´ojnik zdeﬁniowany przez → i ⊥. Charakterystyczn ,a cech ,a rachunku sekwent´ow jest specyﬁczna posta´c regu l. Regu ly w tym systemie naturalnie dziel ,a si ,e na dwie grupy: jedna grupa regu l opisuje sytuacje kiedy mo˙zemy wprowadzi´c dany sp´ojnik na lewo od znaku ⊢, a druga grupa jest odpowiedzialna za wpro- wadzanie sp´ojnika na prawo od ⊢. Dla ka˙zdego sp´ojnika mamy odpowiadaj ,ac ,a par ,e regu l. Aksjomat (A⊥) mo˙zna traktowa´c jako regu l ,e (bez przes lanek) wprowadzenia ⊥ z lewej strony znaku ⊢. Przypomnijmy, ˙ze napis ∆, ϕ1, . . . , ϕn oznacza zbi´or ∆ ∪ {ϕ1, . . . , ϕn}. 41 Aksjomaty (A00) ∆, ϕ ⊢ Γ, ϕ (A⊥) ∆, ⊥ ⊢ Γ Regu ly dowodzenia (→ -lewa) ∆ ⊢ Γ, ϕ ∆, ψ ⊢ Γ ∆, ϕ → ψ ⊢ Γ (→ -prawa) ∆, ϕ ⊢ Γ, ψ ∆ ⊢ Γ, ϕ → ψ (∧-lewa) ∆, ϕ, ψ ⊢ Γ ∆, ϕ ∧ ψ ⊢ Γ (∧-prawa) ∆ ⊢ Γ, ϕ ∆ ⊢ Γ, ψ ∆ ⊢ Γ, ϕ ∧ ψ (∨-lewa) ∆, ϕ ⊢ Γ ∆, ψ ⊢ Γ ∆, ϕ ∨ ψ ⊢ Γ (∨-prawa) ∆ ⊢ Γ, ϕ, ψ ∆ ⊢ Γ, ϕ ∨ ψ Dowodem sekwentu ∆ ⊢ Γ, tak jak poprzednio, nazywamy drzewo etykietowane sekwentami tak, ˙ze korze´n jest etykietowany przez ∆ ⊢ Γ, li´scie s ,a etykietowane aksjomatami oraz wierz- cho lki wewn ,etrzne s ,a etykietowane sekwentami otrzymanymi poprawnie przez zastosowanie regu l dowodzenia. Je´sli istnieje dow´od sekwentu ∆ ⊢ Γ w rachunku sekwent´ow to zapisujemy to tak: ∆ ⊢G Γ. (Litera G pochodzi od nazwiska tw´orcy tego systemu, G. Gentzena.) Piszemy te˙z ∆ ⊢G ϕ, gdy ∆ jest niesko´nczony, ale ∆ ⊢G ϕ dla pewnego sko´nczonego ∆0 ⊆ ∆. Zauwa˙zmy, ˙ze je´sli mamy sekwent ∆ ⊢ Γ, ϕ to stosuj ,ac aksjomat (A⊥), a nast ,epnie (→-lewa) dostajemy sekwent ∆, ¬ϕ ⊢ Γ. Zatem nat ,epuj ,aca regu la jest dopuszczalna w systemie ⊢G (tj. je´sli dodamy j ,a do systemu, to zbi´or wyprowadzalnych sekwent´ow nie ulegnie zmianie): (¬-lewa) ∆ ⊢ Γ, ϕ ∆, ¬ϕ ⊢ Γ Ponadto zauwa˙zmy, ˙ze je´sli mamy dow´od sekwentu ∆ ⊢ Γ, to dla ka˙zdej formu ly ϕ mo˙zemy j ,a doda´c do prawej strony ka˙zdego sekwentu w tym dowodzie i otrzymamy dow´od sekwentu ∆ ⊢ Γ, ϕ. Latwy dow´od indukcyjny pozostawiamy Czytelnikowi ( ´Cwiczenie 12). W szcze- g´olno´sci, je´sli mamy udowodniony sekwent ∆, ϕ ⊢ Γ, to mo˙zemy te˙z udowodni´c sekwent ∆, ϕ ⊢ Γ, ⊥. Stosuj ,ac do niego regu l ,e (→-prawa) otrzymujemy sekwent ∆ ⊢ Γ, ¬ϕ. Tym samym pokazali´smy, ˙ze nast ,epuj ,aca regu la jest dopuszczalna w systemie ⊢G: (¬-prawa) ∆, ϕ ⊢ Γ ∆ ⊢ Γ, ¬ϕ Twierdzenie 5.9 Dla ka˙zdych ∆ i ϕ mamy nast ,epuj ,ac ,a r´ownowa˙zno´s´c ∆ ⊢G ϕ wtedy i tylko wtedy, gdy ∆ ⊢H + ϕ. Powy˙zsze twierdzenie pozostawimy bez dowodu. Latwo jest ” przet lumaczy´c” ka˙zde wyprowa- dzenie w systemie ⊢G na dow´od w stylu Hilberta. Dla dowodu implikacji odwrotnej rozszerza si ,e system ⊢G przez dodanie nowej regu ly zwanej ci ,eciem. (ci ,ecie) ∆, ϕ ⊢ Γ ∆ ⊢ ϕ, Γ ∆ ⊢ Γ 42 Niech ⊢GC oznacza system gentzenowski z ci ,eciem. Bez trudu mo˙zna pokaza´c, ˙ze regu la odrywania jest dopuszczalna w ⊢GC. Zatem, korzystaj ,ac z twierdzenia o pe lno´sci dla sys- temu hilbertowskiego, latwo pokazujemy, ˙ze ka˙zda tautologia jest twierdzeniem systemu ⊢GC. G l´owna trudno´s´c w dowodzie Twierdzenia 5.9 polega na udowodnieniu nast ,epuj ,acego twier- dzenia o eliminacji ci ,ecia. Twierdzenie to podajemy bez dowodu. Twierdzenie 5.10 (o eliminacji ci ,ecia) Je´sli ∆ ⊢GC Γ, to ∆ ⊢G Γ. G l´owna zaleta dowod´ow w rachunku sekwent´ow (bez ci ,ecia) wynika z nast ,epuj ,acej w lasno´sci podformu l: wszystkie formu ly wyst ,epuj ,ace w przes lance dowolnej regu ly s ,a podformu lami formu l wyst ,epuj ,acych w konkluzji. Zatem np. w dowodzie sekwentu ⊢ ϕ mamy do czynienia tylko z podformu lami formu ly ϕ. Dla danej formu ly ϕ, latwiej wi ,ec znale´z´c dow´od w sensie Gentzena ni˙z np. dow´od w sensie Hilberta. Dlatego systemy zbli˙zone do rachunku sekwent´ow znajduj ,a zastosowanie w automatycznym dowodzeniu twierdze´n. Poka˙zemy to na przyk ladzie. Przyk lad 5.11 1. Poszukamy dowodu sekwentu ⊢ ¬¬ϕ → ϕ w ⊢G. Poniewa˙z najbardziej zewn ,etrznym sp´ojnikiem w rozwa˙zanej formule jest →, to ostatni ,a regu l ,a w poszukiwanym dowodzie musia la by´c regu la (→-prawa). Zatem wystarczy znale´z´c dow´od sekwentu ¬¬ϕ ⊢ ϕ. Najbardziej zewn ,etrznym sp´ojnikiem formu ly po lewej stronie jest ¬, a zatem na mocy regu ly (¬-lewa) wystarczy udowodni´c sekwent ⊢ ϕ, ¬ϕ. Podobnie, na mocy regu ly (¬-prawa), wystarczy udowodni´c sekwent ϕ ⊢ ϕ, a on przecie˙z jest aksjomatem. 2. Je´sli zastosujemy powy˙zsz ,a procedur ,e do formu ly, kt´ora nie jest tautologi ,a, to dosta- niemy wskaz´owk ,e na to gdzie nale˙zy szuka´c warto´sciowania falsyﬁkuj ,acego t ,e formu l ,e. (Warto´sciowanie falsyﬁkuj ,ace sekwent ∆ ⊢ Γ to takie, kt´ore spe lnia wszystkie formu ly z ∆ oraz falsyﬁkuje wszystkie formu ly z Γ.) Dla zilustrowania tej tezy we´zmy bardzo prosty sekwent ⊢ p → q. Post ,epuj ,ac podobnie jak porzednio dochodzimy do sekwentu p ⊢ q, kt´ory nie jest aksjomatem, i kt´orego nie mo˙zemy ju˙z dalej roz lo˙zy´c. Jako warto´s- ciowanie falsyﬁkuj ,ace wystarczy wzi ,a´c warto´sciowanie spe lniaj ,ace p i falsyﬁkuj ,ace q. Z w lasno´sci podformu l wynika te˙z w lasno´s´c konserwatywno´sci systemu nad swoimi fragmen- tami: je´sli formu la, w kt´orej nie wyst ,epuje jaki´s sp´ojnik jest tautologi ,a, to jej wyprowadzenie nie wymaga regu l zwi ,azanych z tym sp´ojnikiem. ´Cwiczenia 1. Niech ⊢H1 oznacza system dowodzenia otrzymany z systemu ⊢H przez zamian ,e aksjomatu (A3) na nast ,epuj ,acy aksjomat: (A3’) (¬ϕ → ¬ψ) → ((¬ϕ → ψ) → ϕ). Dowie´s´c, ˙ze obydwa systemy s ,a r´ownowa˙zne, tzn., ˙ze dla dowolnego sekwentu ∆ ⊢ ϕ, zachodzi ∆ ⊢H ϕ wtedy i tylko wtedy, gdy ∆ ⊢H1 ϕ. 43 2. Niech ⊢H2 oznacza system dowodzenia otrzymany z systemu ⊢H przez zamian ,e aksjomatu (A3) na nast ,epuj ,acy aksjomat: (A3”) (¬ϕ → ¬ψ) → (ψ → ϕ). Dowie´s´c, ˙ze obydwa systemy s ,a r´ownowa˙zne, tzn., ˙ze dla dowolnego sekwentu ∆ ⊢ ϕ, zachodzi ∆ ⊢H ϕ wtedy i tylko wtedy, gdy ∆ ⊢H2 ϕ. 3. Dowie´s´c, ˙ze aksjomatu (A3) nie da si ,e wyprowadzi´c z aksjomat´ow (A0–2) przy pomocy regu ly odrywania. 4. Dowie´s´c ⊢H ¬p → (p → q) u˙zywaj ,ac twierdzenia o dedukcji oraz bez u˙zycia tego twierdzenia. 5. Pokaza´c, ˙ze w systemie ⊢H dopuszczalna jest nast ,epuj ,aca regu la: ϕ → ψ ¬ψ ¬ϕ tzn. pokaza´c, ˙ze je´sli ∆ ⊢H ϕ → ψ oraz ∆ ⊢H ¬ψ, to r´ownie˙z mamy ∆ ⊢H ¬ϕ. 6. Dowie´s´c, ˙ze dla ka˙zdej formu ly ϕ, nie b ,ed ,acej tautologi ,a, istnieje maksymalny zbi´or formu l ∆ (nad dan ,a sygnatur ,a) o tej w lasno´sci, ˙ze ∆ ̸⊢H ϕ. 7. Ka˙zdy z poni˙zszych sekwent´ow wyprowadzi´c w systemie ⊢H +, ⊢N , ⊢G. (a) ⊢ ⊥ → p; (b) p → q, q → r ⊢ p → r; (c) ⊢ (¬p → p) → p; (d) p, ¬p ⊢ q; (e) p → (q → r) ⊢ q → (p → r); (f) ⊢ (¬p → ¬q) → (q → p); (g) ⊢ ¬(p ∧ q) → (¬p ∨ ¬q). 8. Dowie´s´c, ˙ze je´sli ∆ ⊢N ϕ, to dla dowolnej formu ly ψ zachodzi ∆, ψ ⊢N ϕ. 9. Dowie´s´c, ˙ze je´sli ∆ ⊢N ⊥, to dla dowolnej formu ly ϕ zachodzi ∆ ⊢N ϕ. 10. Dla ka˙zdego z sytem´ow ⊢H +, ⊢N , ⊢G dowie´s´c, ˙ze je´sli sekwent ∆ ⊢ ϕ jest wyprowadzalny w tym systemie oraz S jest podstawieniem formu l na zmienne zdaniowe, to sekwent S(∆) ⊢ S(ϕ) powstaj ,acy w wyniku podstawienia jest te˙z wyprowadzalny w tym systemie. 11. Udowodni´c, ˙ze w rachunku sekwent´ow zamiana regu ly (∨-prawa) na dwie regu ly: ∆ ⊢ Γ, ϕ ∆ ⊢ Γ, ϕ ∨ ψ ∆ ⊢ Γ, ψ ∆ ⊢ Γ, ϕ ∨ ψ daje w wyniku r´ownowa˙zny system dowodzenia (wyprowadzalne s ,a te same sekwenty). 12. Udowodni´c, ˙ze nast ,epuj ,ace regu ly os labiania s ,a dopuszczalne w rachunku sekwent´ow: ∆ ⊢ Γ ∆, ϕ ⊢ Γ ∆ ⊢ Γ ∆ ⊢ Γ, ϕ 13. Wyprowadzi´c w rachunku sekwent´ow: (a) ⊢ p ∨ ¬p; (b) ⊢ ((p → q) → p) → p. Czy mo˙zna to zrobi´c u˙zywaj ,ac tylko sekwent´ow postaci ∆ ⊢ ϕ (z jedn ,a formu l ,a po prawej)? 44 6 Pe lno´s´c rachunku zda´n Zagadnienie pe lno´sci system´ow formalnych jest jednym z centralnych problem´ow logiki. O ile poprawno´s´c systemu formalnego (zwana te˙z adekwatno´sci ,a) oznacza, ˙ze wszystkie twierdze- nia systemu s ,a prawdziwe wzgl ,edem przyj ,etej semantyki, to pe lno´s´c jest w lasno´sci ,a m´owi ,ac ,a o tym, ˙ze ka˙zda formu la prawdziwa daje si ,e udowodni´c w systemie. Jest wiele r´o˙znych dowod´ow twierdzenia o pe lno´sci dla rachunku zda´n. My podamy elegancki dow´od pochodz ,acy od L. Kalm´ara. Dla udowodnienia nieco silniejszej wersji twierdzenia o pe lno´sci (Twierdze- nie 6.7) wykorzystamy silne i bardzo po˙zyteczne Twierdzenie 6.5 zwane twierdzeniem o zwar- to´sci. Lemat 6.1 (Kalm´ar) Niech ϕ b,edzie formu l ,a zbudowan ,a przy u˙zyciu → oraz ⊥, o zmien- nych zawartych w zbiorze {q1, . . . qn} i niech ϱ : ZZ → {0, 1} b,edzie dowolnym warto´s- ciowaniem. Dla i = 1, . . . , n deﬁniujemy formu ly: q′ i = { qi je´sli ϱ(qi) = 1, ¬qi je´sli ϱ(qi) = 0. Niech ϕ′ b,edzie formu l ,a identyczn ,a z ϕ, je´sli |= ϕ[ϱ], w przeciwnym razie niech ϕ′ oznacza formu l ,e ¬ϕ. W´owczas {q′ 1, . . . , q′ n} ⊢H ϕ′. Dow´od: Dow´od jest prowadzony przez indukcj ,e ze wzgl ,edu na budow ,e formu ly ϕ. Je´sli ϕ jest zmienn ,a qi to ϕ′ = q′ i. Zatem trywialnie zachodzi {q′ 1, . . . , q′ n} ⊢ ϕ′. Je´sli ϕ jest sta l ,a ⊥, to ϕ′ = ¬⊥ i oczywi´scie dla dowolnego wyboru q′ 1, . . . , q′ n zachodzi {q′ 1, . . . , q′ n} ⊢H ¬⊥. Za l´o˙zmy teraz, ˙ze ϕ jest postaci ψ → ϑ i rozwa˙zmy nast ,epuj ,ace przypadki. (A) ̸|= ψ[ϱ]. W´owczas ϕ′ = ϕ oraz ψ′ = ¬ψ. Z za lo˙zenia indukcyjnego mamy {q′ 1, . . . , q′ n} ⊢H ¬ψ. Zatem {q′ 1, . . . , q′ n}, ψ ⊢H ⊥. Z Lematu 5.4(2) mamy {q′ 1, . . . , q′ n}, ψ ⊢H ⊥ → ϑ. Zatem, stosuj ,ac (MP) dostajemy {q′ 1, . . . , q′ n}, ψ ⊢H ϑ i z twierdzenia o dedukcji {q′ 1, . . . , q′ n} ⊢H ψ → ϑ. (B) |= ϑ[ϱ]. W´owczas ϕ′ = ϕ, oraz ϑ′ = ϑ. Z za lo˙zenia indukcyjnego mamy {q′ 1, . . . , q′ n} ⊢H ϑ. Zatem {q′ 1, . . . , q′ n}, ψ ⊢H ϑ i z twierdzenia o dedukcji dostajemy {q′ 1, . . . , q′ n} ⊢H ψ → ϑ. (C) |= ψ[ϱ] oraz ̸|= ϑ[ϱ]. W´owczas ϕ′ = ¬ϕ. ψ′ = ψ oraz ϑ′ = ¬ϑ. Z za lo˙zenia indukcyjnego mamy {q′ 1, . . . , q′ n} ⊢H ψ oraz {q′ 1, . . . , q′ n} ⊢H ¬ϑ. 45 Z Lematu 5.4(1) mamy {q′ 1, . . . , q′ n} ⊢H ψ → (¬ϑ → ¬(ψ → ϑ)). Stosuj ,ac teraz dwukrotnie (MP) dostajemy {q′ 1, . . . , q′ n} ⊢H ¬(ψ → ϑ). To ko´nczy dow´od lematu. Lemat 6.2 Dla dowolnego zbioru formu l ∆ i dla dowolnych formu l ϕ i ψ, je´sli ∆, ϕ ⊢H ψ oraz ∆, ¬ϕ ⊢H ψ, to ∆ ⊢H ψ. Dow´od: Je´sli ∆, ϕ ⊢H ψ to na mocy twierdzenia o dedukcji mamy ∆ ⊢H ϕ → ψ. Podob- nie dostajemy ∆ ⊢H ¬ϕ → ψ. Stosuj ,ac Lemat 5.4(3), oraz dwukrotnie regu l ,e odrywania dostajemy ∆ ⊢H ψ. Lemat Kalm´ara odgrywa kluczow ,a rol ,e w dowodzie poni˙zszego twierdzenia o pe lno´sci. Twierdzenie 6.3 (o pe lno´sci dla ⊢H ) Je´sli ϕ jest tautologi ,a zbudowan ,a przy u˙zyciu → oraz ⊥, to ⊢H ϕ. Dow´od: Za l´o˙zmy, ˙ze ϕ jest tautologi ,a. Niech {q1, . . . , qn} b ,ed ,a wszystkimi zmiennymi wyst ,epuj ,acymi w ϕ. Dla dowolnej liczby 0 ≤ m ≤ n nazwiemy m-zbiorem ka˙zdy zbi´or formu l {q′ 1, . . . , q′ m}, gdzie q′ i jest albo qi lub ¬qi. Zauwa˙zmy, ˙ze 0-zbi´or jest pusty. Udowodnimy nast ,epuj ,ac ,a w lasno´s´c: dla ka˙zdego m spe lniaj ,acego 0 ≤ m ≤ n, je´sli ∆ jest m-zbiorem, to ∆ ⊢H ϕ. (2) Zauwa˙zmy, ˙ze bior ,ac m = 0 w (2) dostajemy tez ,e twierdzenia. Dow´od (2) przeprowadzimy przez indukcj ,e ze wzgl ,edu na m w zbiorze {0, . . . , n} uporz ,adkowanym relacj ,a ≤−1. Dla m = n w lasno´s´c (2) wynika z Lematu 6.1 oraz z faktu, ˙ze ϕ jest tautologi ,a. Za l´o˙zmy, ˙ze (2) zachodzi dla pewnego 0 < m < n i niech ∆ b ,edzie dowolnym (m − 1)-zbiorem. Z za lo˙zenia indukcyjnego dostajemy ∆, qm ⊢H ϕ oraz ∆, ¬qm ⊢H ϕ. Zatem na mocy Lematu 6.2 dostajemy ∆ ⊢H ϕ. To ko´nczy dow´od (2) i tym samym dow´od twierdzenia o pe lno´sci. Korzystaj ,ac z Lematu 5.6 natychmiast dostajemy twierdzenie o pe lno´sci dla systemu ⊢H + ze wszystkimi sp´ojnikami zdaniowymi. 46 Twierdzenie 6.4 (o pe lno´sci dla ⊢H +) Je´sli ϕ jest tautologi ,a, to ⊢H + ϕ. Dow´od: Poniewa˙z ⊢H + ϕ → ˜ϕ, wi ,ec z twierdzenia o poprawno´sci wynika, ˙ze |= ϕ → ˜ϕ. A zatem ˜ϕ jest tautologi ,a. Z twierdzenia o pe lno´sci dla systemu ⊢H dostajemy ⊢H ˜ϕ. St ,ad ⊢H + ˜ϕ i poniewa˙z ⊢H + ˜ϕ → ϕ (por. Lemat 5.6) wi ,ec stosuj ,ac (MP) dostajemy ⊢H + ˜ϕ 6.1 Elementy teorii modeli Powiemy, ˙ze zbi´or formu l ∆ jest spe lnialny gdy istnieje warto´sciowanie ϱ : ZZ → {0, 1} spe lniaj ,ace wszystkie formu ly ze zbioru ∆. Twierdzenie 6.5 (o zwarto´sci) Zbi´or formu l ∆ jest spe lnialny wtedy i tylko wtedy, gdy ka˙zdy sko´nczony podzbi´or zbioru ∆ jest spe lnialny. Dow´od: Powiemy, ˙ze zbi´or ∆ jest sko´nczenie spe lnialny, gdy ka˙zdy sko´nczony podzbi´or zbioru ∆ jest spe lnialny. Szkic dowodu twierdzenia o zwarto´sci wygl ,ada nast ,epuj ,aco. Bez zmniejszenia og´olno´sci mo˙zemy przyj ,a´c, ˙ze wszystkie rozwa˙zane formu ly s ,a zbudowane przy u˙zyciu jedynie sp´ojnik´ow → oraz ⊥. U˙zywaj ,ac lematu Kuratowskiego-Zorna pokazujemy najpierw, ˙ze istnieje maksy- malny sko´nczenie spe lnialny zbi´or formu l Γ zawieraj ,acy ∆. Oczywi´scie mamy ⊥ ̸∈ Γ. (3) Ponadto, dla dowolnej formu ly ϕ mamy je´sli ϕ ̸∈ Γ, to ¬ϕ ∈ Γ. (4) Istotnie, je´sli ϕ oraz ¬ϕ nie nale˙z ,a do Γ, to istniej ,a sko´nczone zbiory X, Y ⊆ Γ, takie ˙ze X∪{ϕ} oraz Y ∪{¬ϕ} nie s ,a spe lnialne. Wynika st ,ad, ˙ze zbiory warto´sciowa´n spe lniaj ,acych X oraz Y s ,a roz l ,aczne. Tak wi ,ec X ∪ Y nie jest spe lnialny, a otrzymana sprzeczno´s´c dowodzi (4). Zatem dla dowolnych formu l ϕ, ψ, (ϕ → ψ) ∈ Γ wtedy i tylko wtedy, gdy ϕ ̸∈ Γ lub ψ ∈ Γ. (5) Rzeczywi´scie, je´sli (ϕ → ψ) i ϕ nale˙z ,a do Γ oraz ψ ̸∈ Γ, to ¬ψ ∈ Γ na mocy (4). W´owczas niespe lnialny zbi´or {(ϕ → ψ), ϕ, ¬ψ} jest podzbiorem Γ, co dowodzi implikacji z lewej do prawej w (5). Na odwr´ot, je´sli (ϕ → ψ) ̸∈ Γ, to na mocy (4) mamy ¬(ϕ → ψ) ∈ Γ. Je´sli teraz ψ ∈ Γ, to niespe lnialny zbi´or {¬(ϕ → ψ), ψ} jest podzbiorem Γ. Podobnie, je´sli ϕ ̸∈ Γ, to ¬ϕ ∈ Γ, wi ,ec {¬(ϕ → ψ), ψ} ⊆ Γ, co ko´nczy dow´od (5). Teraz mo˙zemy zdeﬁniowa´c warto´sciowanie ϱ : ZZ → {0, 1} tak, ˙ze dla dowolnej zmiennej p ∈ ZZ warunki ϱ(p) = 1 i p ∈ Γ s ,a r´ownowa˙zne. Z nast ,epuj ,acej w lasno´sci wynika, ˙ze ϱ spe lnia wszystkie formu ly ze zbioru Γ, a zatem ∆ jest zbiorem spe lnialnym. 47 Dla dowolnej formu ly ϕ, |= ϕ[ϱ] wtedy i tylko wtedy, gdy ϕ ∈ Γ. (6) Dow´od (6) przeprowadzamy przez indukcj ,e ze wzgl ,edu na budow ,e formu ly ϕ. W lasno´sci (3) u˙zywamy w przypadku gdy ϕ jest ⊥, a w lasno´sci (5) w przypadku, gdy zewn ,etrznym sp´ojni- kiem ϕ jest →. Przyk lad 6.6 Podamy przyk lad zastosowania twierdzenia o zwarto´sci. Poka˙zemy, ˙ze je´sli niesko´nczonej mapy (o przeliczalnej liczbie kraj´ow) nie da si ,e pokolorowa´c przy pomocy k kolor´ow, to istnieje sko´nczony fragment tej mapy, kt´orego te˙z nie da si ,e pokolorowa´c przy po- mocy k kolor´ow. Niech I b ,edzie zbiorem kraj´ow tej mapy. Rozwa˙zmy zmienne zdaniowe pi,j, gdzie i ∈ I oraz j < k. Warto´sciowania b ,ed ,a odpowiada´c kolorowaniom mapy. Intencj ,a jest to aby warto´sciowanie przypisywa lo zmiennej pi,j warto´s´c 1 wtedy i tylko wtedy, gdy kraj i ma na mapie kolor j. Poni˙zsze formu ly przedstawiaj ,a podstawowe warunki dotycz ,ace kolorowania. Ka˙zdy kraj ma jaki´s kolor: dla ka˙zdego i ∈ I wyra˙za to formu la pi,0 ∨ pi,1 ∨ . . . ∨ pi,k−1. Ka˙zdy kraj ma co najwy˙zej jeden kolor: dla ka˙zdego i ∈ I, oraz ka˙zdych i, j < k, je´sli j ̸= j′ to mamy formu l ,e ¬(pi,j ∧ pi,j′). Ka˙zde dwa s ,asiaduj ,ace kraje maj ,a r´o˙zne kolory: dla i, i′ ∈ I takich, ˙ze i oraz i′ s ,asiaduj ,a oraz dla ka˙zdego j < k rozwa˙zmy formu l ,e ¬(pi,j ∧ pi′,j). Niech ∆ b ,edzie zbiorem wszystkich formu l przedstawionych wy˙zej. Latwo jest zauwa˙zy´c, ˙ze ∆ jest spe lnialny wtedy i tylko wtedy, gdy map ,e da si ,e pokolorowa´c k kolorami. Zatem je´sli mapy nie da si ,e pokolorowa´c k kolorami to ∆ nie jest spe lnialny i z twierdzenia o zwarto´sci wynika, ˙ze istnieje sko´nczony podzbi´or ∆0, kt´ory nie jest spe lnialny. W´owczas fragmentu mapy zawieraj ,acego kraje wymienione w indeksach zmiennych wyst ,epuj ,acych w formu lach z ∆0 nie da si ,e pokolorowa´c przy pomocy k kolor´ow. Jako wniosek z twierdzenia o zwarto´sci otrzymujemy nast ,epuj ,ace wzmocnienie twierdzenia o pe lno´sci (por. Twierdzenie 6.4). Twierdzenie 6.7 ( ” Silne” twierdzenie o pe lno´sci) Dla dowolnego zbioru formu l ∆ oraz dowolnej formu ly ϕ, je´sli ϕ jest semantyczn ,a konsekwencj ,a zbioru ∆, to ∆ ⊢H + ϕ. Dow´od: Je´sli ∆ |= ϕ to zbi´or ∆∪{¬ϕ} nie jest spe lnialny. Na mocy twierdzenia o zwarto´sci istnieje sko´nczony podzbi´or ∆0 ⊆ ∆ taki, ˙ze ∆0 ∪ {¬ϕ} nie jest spe lnialny. Zatem ∆0 |= ϕ. 48 Tak wi ,ec je´sli ∆0 = {ψ1, . . . , ψn} to oczywi´scie formu la ψ1 → (ψ2 → · · · → (ψn → ϕ) · · · ) jest tautologi ,a. Z twierdzenia o pe lno´sci wnioskujemy, ˙ze ⊢H + ψ1 → (ψ2 → · · · → (ψn → ϕ) · · · ). Stosuj ,ac n razy (MP) do powy˙zszej formu ly dostajemy ∆0 ⊢H + ϕ. Tak wi ,ec ∆ ⊢H + ϕ, co ko´nczy dow´od twierdzenia. Powiemy, ˙ze zbi´or formu l ∆ jest sprzeczny, gdy ∆ ⊢H ⊥. Zbi´or, kt´ory nie jest sprzeczny nazwiemy niesprzecznym. Oto nieco inne sformu lowanie ” silnego” twierdzenia o pe lno´sci: Twierdzenie 6.8 Zbi´or formu l jest spe lnialny wtedy i tylko wtedy, gdy jest niesprzeczny. Dow´od: Zauwa˙zmy, ˙ze zbi´or ∆ jest spe lnialny wtedy i tylko wtedy, gdy ∆ ̸|= ⊥. A zatem teza wynika z Twierdze´n 5.5 i 6.7, je´sli przyjmiemy ϕ = ⊥. A oto twierdzenie o pe lno´sci dla rachunku sekwent´ow i naturalnej dedukcji. Wniosek 6.9 Je´sli ∆ |= ϕ to ∆ ⊢G ϕ oraz ∆ ⊢N ϕ. Dow´od: Natychmiast z Twierdze´n 5.8, 5.9 i 6.7. ´Cwiczenia 1. Dowie´s´c, ˙ze ” silne” twierdzenie o pe lno´sci (Twierdzenie 6.7) poci ,aga twierdzenie o zwarto´sci. 2. Udowodni´c, ˙ze je´sli w systemie ⊢H+ zamienimy aksjomaty (B1–B4) na aksjomaty (D1) ϕ → ϕ ∨ ψ; (D2) ψ → ϕ ∨ ψ; (D3) (ϕ → ϑ) ∧ (ψ → ϑ) → (ϕ ∨ ψ → ϑ); (C1) ϕ ∧ ψ → ϕ; (C2) ϕ ∧ ψ → ψ; (C3) (ϑ → ϕ) ∧ (ϑ → ψ) → (ϑ → ϕ ∧ ψ). to twierdzenie o pe lno´sci pozostanie prawdziwe. 3. Dany jest niesko´nczony zbi´or ch lopc´ow, z kt´orych ka˙zdy ma sko´nczon ,a liczb ,e narzeczonych. Ponadto dla ka˙zdego k ∈ N , dowolnych k ch lopc´ow ma co najmniej k narzeczonych. Dowie´s´c, ˙ze ka˙zdy ch lopiec mo˙ze si ,e o˙zeni´c z jedn ,a ze swoich narzeczonych bez pope lnienia bigamii. 49 7 Pe lno´s´c rachunku predykat´ow 7.1 Hilbertowski system dowodzenia Poni˙zszy system dowodzenia dotyczy formu l pierwszego rz ,edu nad ustalon ,a sygnatur ,a Σ, zbudowanych w oparciu o sp´ojniki →, ⊥ oraz kwantyﬁkator ∀. Przypomnijmy, ˙ze ¬ϕ oznacza formu l ,e ϕ → ⊥. Przez generalizacj ,e formu ly ϕ b ,edziemy rozumie´c dowoln ,a formu l ,e postaci ∀x1 . . . ∀xnϕ, gdzie x1, . . . xn s ,a dowolnymi zmiennymi. Aksjomaty Dowolne generalizacje formu l postaci: (A1) ϕ → (ψ → ϕ); (A2) (ϕ → (ψ → ϑ)) → ((ϕ → ψ) → (ϕ → ϑ)); (A3) ¬¬ϕ → ϕ; (A4) ∀x(ϕ → ψ) → (∀xϕ → ∀xψ); (A5) ϕ → ∀xϕ, o ile x ̸∈ F V (ϕ); (A6) ∀xϕ → ϕ(σ/x), o ile σ jest dopuszczalny dla x w ϕ; (A7) x = x; (A8) x1 = y1 → (x2 = y2 → · · · → (xn = yn → f (x1, . . . , xn) = f (y1, . . . , yn)) · · · ), dla f ∈ ΣF n , n ≥ 0; (A9) x1 = y1 → (x2 = y2 → · · · → (xn = yn → (r(x1, . . . , xn) → r(y1, . . . , yn))) · · · ), dla r ∈ ΣR n , n ≥ 1. Regu ly dowodzenia (MP) ϕ ϕ → ψ ψ Poj ,ecie dowodu formalnego w powy˙zszym systemie deﬁniuje si ,e dok ladnie tak samo jak w przypadku rachunku zda´n (por. Rozdzia l 5). Piszemy te˙z ∆ ⊢H ϕ, gdy istnieje dow´od formu ly ϕ ze zbioru hipotez ∆. Sam system, podobnie jak w przypadku rachunku zda´n, b ,edziemy oznacza´c przez ⊢H . Nie powinno prowadzi´c to do niejednoznaczno´sci. Zwr´o´cmy uwag ,e, ˙ze system ⊢H zale˙zy od sygnatury Σ. Tak wi ,ec mamy r´o˙zne systemy dla r´o˙znych sygnatur. Poj ,ecie niesprzecznego zbioru formu l deﬁniuje si ,e tak samo jak w rachunku zda´n. Przyk lad 7.1 Poka˙zemy g l´owne kroki dowodu formu ly (x = y → y = x). 1. ∀x1∀x2∀y1∀y2(x1 = y1 → (x2 = y2 → (x1 = x2 → y1 = y2))) (A9) 2. x = y → (x = x → (x = x → y = x)) na mocy (A6) oraz (MP) 3. x = x → (x = y → (x = x → y = x)) z (2), jest to instancja tautologii zdaniowej 4. x = x (A7) 50 5. x = y → (x = x → y = x) (MP(4,3)) 6. x = x → (x = y → y = x) z (5), jest to instancja tautologii zdaniowej 7. x = x (A7) 8. x = y → y = x (MP(7,6)) Twierdzenie 7.2 (o dedukcji) Dla dowolnego zbioru formu l ∆ oraz dowolnych formu l ϕ, ψ, je´sli ∆, ϕ ⊢H ψ, to ∆ ⊢H ϕ → ψ. Dow´od: Dow´od tego twierdzenia jest dok ladnie taki sam jak analogicznego twierdzenia dla rachunku zda´n (por. Twierdzenie 5.2). Nat ,epuj ,ace twierdzenie m´owi, ˙ze wyb´or nazwy zmiennej zwi ,azanej nie ma wp lywu na dowodli- wo´s´c formu ly. Jest to tzw. w lasno´s´c α-konwersji. Twierdzenie 7.3 (o α-konwersji) Je´sli ∆ ⊢H ∀x ψ oraz zmienna y ̸∈ F V (∀x ψ) jest do- puszczalna dla x w ψ, to ∆ ⊢H ∀y ψ(y/x). Dow´od: Poniewa˙z y ̸∈ F V (∀x ψ), to na mocy (A5) mamy ∆ ⊢H ∀x ψ → ∀y∀x ψ. (7) Z drugiej strony mamy nast ,epuj ,ac ,a wersj ,e aksjomatu (A6) ∆ ⊢H ∀y (∀x ψ → ψ(y/x)), co l ,acznie z aksjomatem (A4) daje ∆ ⊢H ∀y∀x ψ → ∀y ψ(y/x). (8) Tak wi ,ec, zak ladaj ,ac ∆ ⊢H ∀x ψ i stosuj ,ac (MP) do (7), a nast ,epnie do (8) dostajemy ∆ ⊢H ∀y ψ(y/x), co ko´nczy dow´od. Podamy jeszcze jedno u˙zyteczne twierdzenie. M´owi ono, ˙ze tzw. regu la generalizacji jest dopuszczalna w systemie ⊢H . Niech F V (∆) = ⋃{F V (ϕ) | ϕ ∈ ∆}. Twierdzenie 7.4 (o generalizacji) Je´sli zachodzi ∆ ⊢H ϕ, to dla dowolnej zmiennej x, takiej ˙ze x ̸∈ F V (∆), mamy ∆ ⊢H ∀x ϕ. 51 Dow´od: Dowodzimy twierdzenie przez indukcj ,e ze wzgl ,edu na liczb ,e krok´ow w dowodzie formu ly ϕ ze zbioru hipotez ∆. Je´sli ϕ jest jednym z aksjomat´ow (A1–9), to dowolna gene- ralizacja tej formu ly jest te˙z aksjomatem, wi ,ec teza zachodzi. Aby pokaza´c ∆ ⊢H ∀x ϕ, dla formu ly ϕ ∈ ∆ u˙zywamy aksjomatu (A5) i regu ly (MP). Je´sli ostatnim krokiem w dowodzie by lo zastosowanie (MP), to dla pewnej formu ly ψ mamy ∆ ⊢H ψ → ϕ oraz ∆ ⊢H ψ w mniejszej liczbie krok´ow. Z za lo˙zenia indukcyjnego otrzymu- jemy ∆ ⊢H ∀x (ψ → ϕ) oraz ∆ ⊢H ∀x ψ. Zatem stosuj ,ac (MP) do ∀x (ψ → ϕ) oraz do instancji ∀x(ψ → ϕ) → (∀xψ → ∀xϕ) aksjomatu (A4) otrzymujemy ∀xψ → ∀xϕ. Ponowne zastosowanie (MP) do tej formu ly oraz do ∀x ψ daje nam ∀x ϕ. Powiemy, ˙ze formu la ϕ jest konsekwencj ,a semantyczn ,a zbioru formu l ∆ (i napiszemy ∆ |= ϕ), gdy dla ka˙zdej struktury A i dla ka˙zdego warto´sciowania ϱ w A spe lniaj ,acego wszystkie for- mu ly ze zbioru ∆, mamy (A, ϱ) |= ϕ. Zwr´o´cmy uwag ,e, ˙ze je´sli ∆ jest zbiorem zda´n, to powy˙zsza deﬁnicja jest r´ownowa˙zna nast ,epuj ,acej w lasno´sci: ka˙zdy model dla ∆ jest modelem dla ϕ. W og´olnym przypadku, gdy formu ly z ∆ mog ,a zawiera´c zmienne wolne, powy˙zsze dwie deﬁnicje nie s ,a r´ownowa˙zne. Na przyk lad, je´sli f jest symbolem operacji jednoargumentowej, to x = y ̸|= f (z) = z, ale ka˙zdy model dla x = y (czyli jednoelementowy) jest modelem dla f (z) = z. Twierdzenie 7.5 (o poprawno´sci) Dla dowolnego zbioru formu l ∆ i formu ly ϕ, je´sli ∆ ⊢H ϕ, to ∆ |= ϕ. Dow´od: Dow´od przeprowadzamy przez indukcj ,e ze wzgl ,edu na liczb ,e krok´ow w dowodzie formu ly ϕ ze zbioru hipotez ∆. Je´sli ϕ ∈ ∆, to oczywi´scie mamy ∆ |= ϕ. Sprawdzamy, ˙ze je´sli ϕ jest dowoln ,a generalizacj ,a jednego z aksjomat´ow (A1–9), to zachodzi |= ϕ. Oczywi´scie regu la (MP) zachowuje relacj ,e semantycznej konsekwencji, tzn. je´sli ∆ |= ϕ i ∆ |= ϕ → ψ, to ∆ |= ψ. Twierdzenie o poprawno´sci mo˙ze by´c u˙zyte do pokazania, ˙ze pewne wynikania nie daj ,a si ,e wyprowadzi´c w systemie ⊢H . Przyk ladowo, zobaczmy, ˙ze x = y ̸⊢H ∀x (x = y). Istotnie, bior ,ac dwuelementow ,a struktur ,e A oraz warto´sciowanie, kt´ore ” skleja” warto´sci zmiennych x oraz y, dostajemy x = y ̸|= ∀x (x = y). Zatem z twierdzenia o poprawno´sci wnioskujemy, ˙ze x = y ̸⊢H ∀x (x = y). Jest to r´ownie˙z przyk lad na to, ˙ze system ⊢H nie jest zamkni ,ety ze wzgl ,edu na dowolne generalizacje, tzn. za lo˙zenie x ̸∈ F V (∆) w twierdzeniu o generalizacji jest istotne. Zachodzi r´ownie˙z odwrotne twierdzenie do Twierdzenia 7.5. Dow´od tego twierdzenia jest celem niniejszego rozdzia lu. System formalny dla formu l zawieraj ,acych pozosta le sp´ojniki: ∧, ∨ i kwantyﬁkator egzysten- cjalny otrzymuje si ,e z ⊢H przez dodanie aksjomat´ow charakteryzuj ,acych te symbole: (B1) ϕ ∧ ψ → ¬(ϕ → ¬ψ) (B2) ¬(ϕ → ¬ψ) → ϕ ∧ ψ (B3) ϕ ∨ ψ → (¬ϕ → ψ) (B4) (¬ϕ → ψ) → ϕ ∨ ψ 52 (B5) ∃x ϕ → ¬∀x ¬ϕ (B6) ¬∀x ¬ϕ → ∃x ϕ G l´ownym narz ,edziem w dowodzie ” silnego” twierdzenia o pe lno´sci b ,edzie tzw. twierdzenie o istnieniu modelu. Metoda dowodu tego twierdzenia polega na budowaniu modelu ze sta lych. Zaproponowa l j ,a L. Henkin. Najpierw wprowadzimy nast ,epuj ,ac ,a deﬁnicj ,e. Niech Γ b ,edzie zbiorem zda´n pierwszego rz ,edu nad sygnatur ,a Σ oraz niech C ⊆ Σ0 b ,edzie pewnym zbiorem sta lych. Powiemy, ˙ze Γ jest zbiorem C-nasyconym, gdy Γ jest zbiorem niesprzecznym oraz dla dowolnej formu ly ϕ(x) o co najwy˙zej jednej zmiennej wolnej x, je´sli Γ ̸⊢H ∀x ϕ(x), to istnieje sta la c ∈ C, taka ˙ze Γ ⊢H ¬ϕ(c/x). Niech Γ b ,edzie C-nasycony. Zauwa˙zmy, ˙ze je´sli Γ ⊢H ¬∀x ϕ(x) oraz je´sli ϕ jest postaci ¬ψ, to w´owczas Γ ⊢H ¬∀x ϕ(x) jest r´ownowa˙zne Γ ⊢H ∃x ψ(x). Ponadto z warunku C-nasycenia Γ wynika istnienie sta lej c ∈ C takiej, ˙ze Γ ⊢H ¬ϕ(c/x). To ostatnie jest r´ownowa˙zne (na mocy prawa podw´ojnego przeczenia) temu, ˙ze Γ ⊢H ψ(c/x). Tak wi ,ec w tym przypadku c jest ” ´swiadkiem” zachodzenia w lasno´sci Γ ⊢H ∃x ψ(x). Moc ,a sygnatury Σ nazwiemy moc zbioru (⋃∞ n=0 ΣF n )∪( ⋃∞ n=1 ΣR n ). Moc sygnatury Σ b ,edziemy oznacza´c przez |Σ|. Dopu´scimy mo˙zliwo´s´c rozszerzenia sygnatury o sta le. Dla dowolnego zbioru C roz l ,acznego z sygnatur ,a Σ, przez Σ(C) b ,edziemy oznacza´c sygnatur ,e powsta l ,a z Σ przez dodanie symboli sta lych ze zbioru C. Lemat 7.6 (o nasyceniu) Niech C b,edzie niesko´nczonym zbiorem, roz l ,acznym z sygnatur ,a Σ oraz takim, ˙ze |Σ| ≤ |C|. Niech ∆ b,edzie niesprzecznym zbiorem zda´n nad Σ. Istnieje zbi´or zda´n Γ nad sygnatur ,a Σ(C) taki, ˙ze ∆ ⊆ Γ oraz Γ jest C-nasycony. Dow´od: Bez zmniejszenia og´olno´sci mo˙zemy przyj ,a´c, ˙ze istnieje zmienna z nie wyst ,epuj ,aca wolno w ˙zadnej formule ze zbioru ∆ (w przeciwnym przypadku mo˙zemy tak przenumerowa´c zmienne, aby ten warunek by l spe lniony). Przedstawimy dow´od dla przypadku kiedy Σ i C s ,a zbiorami przeliczalnymi. Dow´od og´olnego przypadku pozostawimy Czytelnikowi jako ´cwicze- nie (nale˙zy zastosowa´c indukcj ,e pozasko´nczon ,a). Ustawmy zbi´or wszystkich formu l nad Σ(C) o jednej zmiennej wolnej x w ci ,ag ϕ0, ϕ1, . . . Zdeﬁniujemy ci ,ag zbior´ow {Γn | n ∈ N} oraz ci ,ag sta lych {cn | n ∈ N} ⊆ C o nast ,epuj ,acych w lasno´sciach: • Γn zawiera sko´nczenie wiele sta lych z C. • ∆ ⊆ Γn jest niesprzecznym zbiorem zda´n nad Σ(C). • Je´sli Γn ̸⊢H ∀x ϕn(x), to Γn+1 = Γn ∪ {¬ϕn(cn/x)}. Ustalmy dowoln ,a sta l ,a c∗ ∈ C. Przyjmujemy Γ0 = ∆. Je´sli Γn ⊢H ∀x ϕn(x), to deﬁniujemy Γn+1 = Γn oraz cn = c∗. Je´sli natomiast Γn ̸⊢H ∀x ϕn(x) to niech cn ∈ C b ,edzie sta l ,a nie 53 wyst ,epuj ,ac ,a w Γn ani w ϕn. Musimy pokaza´c, ˙ze Γn+1 = Γn ∪ {¬ϕn(cn/x)} jest zbiorem niesprzecznym. Za l´o˙zmy przeciwnie, ˙ze Γn+1 ⊢H ⊥. Zatem Γn ⊢H ¬¬ϕn(cn/x) i z (A3) dostajemy Γn ⊢H ϕn(cn/x). Poniewa˙z cn nie wyst ,epuje w Γn ani w ϕn to mo˙zemy w dowodzie powy˙zszego sekwentu zamieni´c wszystkie wyst ,apie- nia cn przez now ,a zmienn ,a z, kt´ora si ,e w tym dowodzie nie pojawi la oraz nie wyst ,epuje wolno w formu lach z Γn. Tak wi ,ec otrzymujemy Γn ⊢H ϕn(z/x) oraz z ̸∈ F V (Γn). Na mocy Twier- dzenia 7.4 o generalizacji dostajemy Γn ⊢H ∀z ϕn(z/x). Poniewa˙z x jest dopuszczalna dla z w ϕn(z/x) oraz ϕn(z/x)(x/z) = ϕn(x), to stosuj ,ac α-konwersj ,e (Twierdzenie 7.3) dostajemy Γn ⊢H ∀x ϕn(x), wbrew za lo˙zeniu. W ten spos´ob udowodnili´smy niesprzeczno´s´c zbioru Γn+1. To ko´nczy konstrukcj ,e zbior´ow Γn oraz sta lych cn. Niech Γ = ⋃ n∈N Γn. Poka˙zemy, ˙ze Γ jest zbiorem C-nasyconym. Oczywi´scie Γ jako suma la´ncucha zbior´ow niesprzecznych jest r´ownie˙z zbiorem niesprzecznym. Niech ϕ(x) b ,edzie dowoln ,a formu l ,a nad Σ(C) o jednej zmiennej wolnej i za l´o˙zmy, ˙ze Γ ̸⊢H ∀x ϕ(x). Niech ϕ(x) = ϕn(x), dla pewnego n. Oczywi´scie mamy Γn ̸⊢H ∀x ϕn(x) i z konstrukcji zbior´ow Γn wynika, ˙ze Γn+1 ⊢H ¬ϕn(cn/x). Zatem Γ ⊢H ¬ϕn(cn/x), co dowodzi C-nasycenia zbioru Γ. 7.2 Konstrukcja modelu ze sta lych Niech C ⊆ Σ0 b ,edzie dowolnym zbiorem sta lych i niech Γ b ,edzie dowolnym C-nasyconym zbiorem zda´n nad Σ. W zbiorze C deﬁniujemy relacj ,e r´ownowa˙zno´sci ∼: c1 ∼ c2 wtedy i tylko wtedy, gdy Γ ⊢H c1 = c2. Zdeﬁniujemy struktur ,e AΓ. No´snikiem tej struktury jest zbi´or ilorazowy C/ ∼. Musimy okre´sli´c interpretacj ,e symboli operacji i relacji z Σ. Dla przyk ladu za l´o˙zmy, ˙ze f ∈ ΣF 2 jest symbolem operacji dwuargumentowej. Funkcj ,e f AΓ : (C/∼)2 → C/∼ deﬁniujemy warunkiem f AΓ([c1]∼, [c2]∼) = [d]∼ wtedy i tylko wtedy, gdy Γ ⊢H f (c1, c2) = d. Dla pokazania, ˙ze f AΓ jest dobrze okre´slon ,a funkcj ,a musimy sprawdzi´c, ˙ze: Dla dowolnych c1, c2 ∈ C istnieje d ∈ C takie, ˙ze Γ ⊢H f (c1, c2) = d (9) Je´sli c1 ∼ c ′ 1, c2 ∼ c ′ 2 oraz Γ ⊢H f (c1, c2) = d i Γ ⊢H f (c ′ 1, c′ 2) = d′, to d ∼ d′. (10) W lasno´s´c (9) wynika z faktu, ˙ze zbi´or Γ jest C-nasycony. Zauwa˙zmy najpierw, ˙ze Γ ⊢H ¬∀x ¬f (c1, c2) = x. Istotnie, za l´o˙zmy ∀x ¬f (c1, c2) = x. W´owczas z aksjomatu (A6) dostajemy ¬f (c1, c2) = f (c1, c2). Z drugiej strony, z aksjomatu (A7) i (A6) dostajemy f (c1, c2) = f (c1, c2). Tak wi ,ec otrzymujemy ⊥, a wi ,ec Γ ⊢H ¬∀x ¬f (c1, c2) = x. Zatem z C-nasycenia Γ wynika istnienie sta lej d ∈ C takiej, ˙ze Γ ⊢H ¬¬f (c1, c2) = d. Korzystaj ,ac teraz z (A3) dostajemy Γ ⊢H f (c1, c2) = d. 54 W lasno´s´c (10) wynika natychmiast z nast ,epuj ,acej postaci aksjomatu (A8) (posta´c t ,e otrzy- mujemy z (A8) z pomoc ,a aksjomatu (A6)) c1 = c ′ 1 → (c2 = c ′ 2 → f (c1, c2) = f (c ′ 1, c′ 2)). Interpretacja symboli relacji w AΓ wygl ,ada podobnie. Dla przyk ladu zdeﬁniujemy relacj ,e rAΓ dla symbolu r ∈ ΣR 2 . ([c1]∼, [c2]∼) ∈ rAΓ wtedy i tylko wtedy, gdy Γ ⊢H r(c1, c2). W tym przypadku r´ownie˙z musimy dowie´s´c poprawno´sci deﬁnicji (tzn. niezale˙zno´sci od wyboru reprezentant´ow). Czyli musimy pokaza´c, ˙ze je´sli c1 ∼ c′ 1 oraz c2 ∼ c′ 2, to Γ ⊢H r(c1, c2) wtedy i tylko wtedy, gdy Γ ⊢H r(c ′ 1, c′ 2). Wynika to natychmiast z aksjomat´ow (A9) i (A6). Teraz mo˙zemy przej´s´c do twierdzenia o istnieniu modelu. Twierdzenie 7.7 (o istnieniu modelu) Ka˙zdy niesprzeczny zbi´or zda´n nad dowoln ,a syg- natur ,a Σ ma model, kt´orego moc nie przekracza max{ℵ0, |Σ|}.Dok ladniej, dla struktury AΓ zbudowanej powy˙zej oraz dowolnej formu ly ϕ takiej, ˙ze F V (ϕ) ⊆ {x1, . . . , xn} i dla dowolnego warto´sciowania ϱ takiego, ˙ze ϱ(xi) = [ci]∼, dla i = 1, . . . , n mamy (AΓ, ϱ) |= ϕ wtedy i tylko wtedy, gdy Γ ⊢H ϕ(c1/x1, . . . , cn/xn). (11) Dow´od: Za l´o˙zmy, ˙ze ∆ jest niesprzecznym zbiorem zda´n. Niech C b ,edzie dowolnym niesko´nczonym zbiorem roz l ,acznym z Σ i takim, ˙ze |C| ≥ |Σ|. Z Lematu 7.6 o nasyceniu wiemy, ˙ze istnieje zbi´or zda´n Γ ⊆ ∆ nad sygnatur ,a Σ(C), kt´ory jest C-nasycony. Stosu- j ,ac lemat Kuratowskiego-Zorna dowodzimy, ˙ze istnieje maksymalny zbi´or Γ o powy˙zszych w lasno´sciach. Niech Γ b ,edzie takim zbiorem. Dalsza cz ,e´s´c dowodu b ,edzie przebiega la w od- niesieniu do ustalonego zbioru Γ. Najpierw zanotujmy nast ,epuj ,ac ,a wa˙zn ,a w lasno´s´c zbioru Γ. Dla dowolnego zdania ϕ, je´sli Γ ̸⊢H ϕ, to Γ ∪ {ϕ} jest zbiorem sprzecznym. (12) Dla dowodu (12) zauwa˙zmy, ˙ze je´sli Γ∪{ϕ} jest zbiorem niesprzecznym, to jest on C-nasycony. Istotnie, je´sli Γ ∪ {ϕ} ̸⊢H ∀x ψ(x), dla pewnej formu ly ψ o jednej zmiennej wolnej, to mamy r´ownie˙z Γ ̸⊢H ∀x ψ(x). Zatem dla pewnej sta lej c ∈ C zachodzi Γ ⊢H ¬ψ(c/x), wi ,ec oczywi´scie r´ownie˙z Γ ∪ {ϕ} ⊢H ¬ψ(c/x). Tak wi ,ec z maksymalno´sci zbioru Γ wynika, ˙ze Γ ∪ {ϕ} musi by´c zbiorem sprzecznym. To dowodzi (12). Zauwa˙zmy, ˙ze z w lasno´sci (11) wynika pierwsza cz ,e´s´c twierdzenia, bowiem mamy w´owczas AΓ |= Γ. W lasno´s´c (11) dowodzimy przez indukcj ,e ze wzgl ,edu na budow ,e formu ly ϕ. Dla formu l atomowych musimy dowie´s´c nast ,epuj ,ac ,a pomocnicz ,a w lasno´s´c. Dla dowolnego termu t i sta lej d ∈ C mamy [[t]] AΓ ϱ = [d]∼ wtedy i tylko wtedy, gdy Γ ⊢H t(c1/x1, . . . , cn/xn) = d, (13) 55 gdzie F V (t) ⊆ {x1, . . . , xn} oraz v(xi) = [ci]∼, dla i = 1, . . . , n. Dow´od (13) przeprowadzamy przez rutynow ,a indukcj ,e ze wzgl ,edu na budow ,e termu t. Szczeg´o ly pozostawiamy Czytel- nikowi. Powracamy do dowodu (11). Je´sli ϕ jest formu l ,a t1 = t2, to [[t1]]AΓ ϱ = [[t2]]AΓ ϱ wtedy i tylko wtedy, gdy dla pewnego d ∈ C zachodzi [[t1]]AΓ ϱ = [d]∼ oraz [[t2]]AΓ ϱ = [d]∼. Na mocy (13) jest to r´ownowa˙zne temu, ˙ze dla pewnego d ∈ C zachodzi Γ ⊢H t1(c1/x1, . . . , cn/xn) = d oraz Γ ⊢H t2(c1/x1, . . . , cn/xn) = d. Ostatnia w lasno´s´c jest r´ownowa˙zna (na mocy C-nasycenia zbioru Γ) w lasno´sci Γ ⊢H t1(c1/x1, . . . , cn/xn) = t2(c1/x1, . . . , cn/xn). Za l´o˙zmy teraz, ˙ze ϕ jest formu l ,a postaci ψ → ϑ. Niech ψ∗ oznacza formu l ,e ψ(c1/x1, . . . , cn/xn) oraz niech ϑ∗ oznacza formu l ,e ϑ(c1/x1, . . . , cn/xn). Za l´o˙zmy, ˙ze (AΓ, ϱ) |= ϕ i rozwa˙zmy dwa przypadki. Je´sli Γ ⊢H ψ∗, to na mocy za lo˙zenia indukcyjnego mamy (AΓ, ϱ) |= ψ. Zatem (AΓ, ϱ) |= ϑ i korzystaj ,ac ponownie z za lo˙zenia indukcyjnego otrzymujemy Γ ⊢H ϑ∗. Dalej na mocy aksjomatu (A1) i regu ly (MP) otrzymujemy Γ ⊢H ψ∗ → ϑ∗. Je´sli natomiast Γ ̸⊢H ψ∗, to jak wynika z (12) zbi´or Γ∪{ψ∗} jest sprzeczny. St ,ad Γ∪{ψ∗} ⊢H ϑ∗ i z twierdzenia o dedukcji (Twierdzenie 7.2) dostajemy ponownie Γ ⊢H ψ∗ → ϑ∗. Dow´od implikacji odwrotnej, tzn., ˙ze Γ ⊢H ψ∗ → ϑ∗ poci ,aga (AΓ, ϱ) |= ϕ pozostawiamy Czytelnikowi do uzupe lnienia. Na koniec rozwa˙zmy przypadek gdy ϕ jest postaci ∀y ψ(y). Za l´o˙zmy, ˙ze (AΓ, ϱ) |= ϕ. Niech ψ∗ oznacza formu l ,e ψ(c1/x1, . . . , cn/xn). Formu la ψ∗ ma co najwy˙zej jedn ,a zmienn ,a woln ,a y. Je´sli Γ ̸⊢H ∀y ψ∗, to z C-nasycenia Γ istnieje taka sta la d ∈ C, ˙ze Γ ⊢H ¬ψ∗(d/y). Zatem na mocy za lo˙zenia indukcyjnego otrzymujemy (AΓ, ϱ[d]∼ y ) ̸|= ψ, co daje sprzeczno´s´c z naszym za lo˙zeniem (AΓ, ϱ) |= ϕ. Tak wi ,ec musi by´c Γ ⊢H ∀y ψ∗. Na odwr´ot, za l´o˙zmy, ˙ze Γ ⊢H ∀y ψ∗ i niech d ∈ C b ,edzie dowoln ,a sta l ,a. Z aksjomatu (A6) dostajemy Γ ⊢H ψ∗(d/y) i na mocy za lo˙zenia indukcyjnego dostajemy (AΓ, ϱ[d]∼ y ) |= ψ. Poniewa˙z d jest dowolne, to powy˙zsze spe lnianie dowodzi (AΓ, ϱ) |= ϕ. Tym samym dow´od twierdzenia jest zako´nczony. Na zako´nczenie udowodnimy zapowiedziane wcze´sniej ” silne” twierdzenie o pe lno´sci dla sys- temu ⊢H . Jest ono prostym wnioskiem z twierdzenia o istnieniu modelu. Twierdzenie 7.8 ( ” Silne” twierdzenie o pe lno´sci) Dla dowolnego zbioru formu l ∆ i dla dowolnej formu ly ϕ, je´sli ∆ |= ϕ , to ∆ ⊢H ϕ. W szczeg´olno´sci, je´sli ϕ jest tautologi ,a j ,ezyka pierwszego rz ,edu, to ⊢H ϕ. Dow´od: Za l´o˙zmy, ˙ze ∆ ̸⊢ ϕ. Niech C = {c0, c1, . . .} b ,edzie niesko´nczonym przeliczal- nym zbiorem sta lych, roz l ,acznym z sygnatur ,a Σ. Ustawmy zmienne indywiduowe w ci ,ag x0, x1, . . . Dla dowolnej formu ly ψ nad sygnatur ,a Σ niech ψ∗ oznacza zdanie nad sygnatur ,a Σ(C) otrzymane z ψ przez zast ,apienie ka˙zdej zmiennej xn wolno wyst ,epuj ,acej w ψ sta l ,a cn. Niech ∆∗ = {ψ∗ | ψ ∈ ∆}. Twierdzimy, ˙ze zbi´or zda´n ∆∗ ∪ {¬ϕ∗} jest zbiorem niesprzecznym. Za l´o˙zmy przeciwnie, ˙ze ∆∗ ∪ {¬ϕ∗} ⊢ ⊥. W´owczas dla pewnego sko´nczonego podzbioru ∆0 ⊆ ∆ mamy ∆∗ 0 ∪ {¬ϕ∗} ⊢ ⊥. Z twierdzenia o dedukcji dostajemy ∆∗ 0 ⊢ ¬¬ϕ∗ i na mocy aksjomatu (A3) mamy ∆∗ 0 ⊢ ϕ∗ Przyjmijmy, ˙ze 56 ∆0 = {ψ1, . . . , ψn}. Stosuj ,ac n razy twierdzenie o dedukcji, dostajemy ⊢ ψ∗ 1 → (· · · → (ψ∗ n → ϕ∗) · · · ). Zast ,epuj ,ac w powy˙zszym dowodzie sta le ci nowymi, nigdzie w tym dowodzie nie pojawia- j ,acymi si ,e zmiennymi zi, nast ,epnie generalizuj ,ac (por. Twierdzenie 7.4) i podstawiaj ,ac na miejsce zmiennych zwi ,azanych zi (por. aksjomat (A6)) zmienne xi dostajemy12 ⊢ ψ1 → (· · · → (ψn → ϕ) · · · ), czyli ∆0 ⊢ ϕ, a co za tym idzie r´ownie˙z ∆ ⊢ ϕ, wbrew za lo˙zeniu. Tak wi ,ec zbi´or ∆∗ ∪ {¬ϕ∗} jest niesprzeczny. Z twierdzenia o istnieniu modelu wynika, ˙ze ∆∗ ∪ {¬ϕ∗} ma model. Istnieje wi ,ec Σ(C)-struk- tura A taka, ˙ze A |= ∆∗ oraz A ̸|= ϕ∗. Niech ϱ : X → A b ,edzie warto´sciowaniem, kt´ore ka˙zdej zmiennej xi przypisuje warto´s´c cA i . Na mocy Twierdzenia 7.7 mamy w´owczas (A, ϱ) |= ψ, dla ka˙zdej formu ly ψ ∈ ∆ oraz (A, ϱ) ̸|= ϕ. Dowodzi to ∆ ̸|= ϕ. ´Cwiczenia 1. Rozpatrzmy system ⊢h, kt´orego aksjomatami s ,a formu ly postaci (A1–A9), a nie dowolne gene- ralizacje takich formu l. Regu lami wnioskowania w ⊢h niech b ,ed ,a (MP) oraz regu la generalizacji: ϕ ∀x ϕ Udowodni´c, ˙ze twierdzenia system´ow ⊢h i ⊢H s ,a takie same, ale z Γ ⊢h ϕ nie wynika Γ |= ϕ. 2. Udowodni´c twierdzenie o pe lno´sci dla nieprzeliczalnych sygnatur. 3. System naturalnej dedukcji dla logiki pierwszego rz ,edu mo˙zna otrzyma´c przez dodanie do sys- temu ⊢N nastepuj ,acych regu l: Γ ⊢ ϕ(y/x) (∀-intro) Γ ⊢ ∀xϕ Γ ⊢ ∀xϕ (∀-elim) Γ ⊢ ϕ(t/x) Γ ⊢ ϕ(t/x) (∃-intro) Γ ⊢ ∃xϕ Γ ⊢ ∃xϕ Γ, ϕ(y/x) ⊢ ψ (∃-elim) Γ ⊢ ψ przy czym regu l ,e (∀-intro) wolno stosowa´c tylko wtedy gdy y ̸∈ F V (∀xϕ) oraz y nie jest wolne w ˙zadnej z formu l ze zbioru Γ. Natomiast regu la (∃-intro) u˙zywana jest przy zastrze˙zeniu y ̸∈ F V (Γ ∪ {∃xϕ} ∪ {ψ}). Udowodni´c twierdzenie o pe lno´sci dla tego systemu. 4. Zaproponowa´c regu ly rachunku sekwent´ow dla logiki pierwszego rz ,edu. 12Zauwa˙zmy, ˙ze zmienna xi jest dopuszczalna dla zi w stosownej formule. 57 8 Teoria modeli W tym rozdziale poznamy podstawowe fakty z teorii modeli. Wi ,ekszo´s´c z nich to wnioski z twierdzenia o pe lno´sci. Zaczniemy od twierdzenia o zwarto´sci. Twierdzenie 8.1 (o zwarto´sci) 1. Dla dowolnego zbioru formu l ∆ i dowolnej formu ly ϕ, je´sli ∆ |= ϕ, to istnieje sko´nczony podzbi´or ∆0 ⊆ ∆ taki, ˙ze ∆0 |= ϕ. 2. Dla dowolnego zbioru formu l ∆, je´sli ka˙zdy sko´nczony podzbi´or ∆0 ⊆ ∆ jest spe lnialny, to ∆ te˙z jest spe lnialny. Dow´od: W cz ,e´sci pierwszej, je´sli ∆ |= ϕ, to z twierdzenia o pe lno´sci wynika, ˙ze ∆ ⊢H ϕ. W dowodzie wyst ,epuje tylko sko´nczenie wiele formu l z ∆. Je´s li ∆0 jest zbiorem wszystkich tych formu l, to oczywi´scie ∆0 ⊢H ϕ. Z twierdzenia o poprawno´sci wynika, ˙ze ∆0 |= ϕ. Cz ,e´s´c druga wynika z cz ,e´sci pierwszej, gdy przyjmiemy ϕ = ⊥. Niespe lnialno´s´c zbioru ∆ to bowiem to samo, co ∆ |= ⊥. Pierwszym wa˙znym przyk ladem zastosowania twierdzenia o zwarto´sci jest dow´od innego wa˙znego twierdzenia teorii modeli. Twierdzenie 8.2 (Skolem, L¨owenheim, Tarski) Je´sli zbi´or formu l ∆ nad Σ ma model niesko´nczony, to ma tak˙ze model ka˙zdej mocy m ≥ max{ℵ0, |Σ|}, gdzie |Σ| to moc sygnatury Σ. Dow´od: Niech C b ,edzie zbiorem nowych symboli sta lych, dotychczas nie wyst ,epuj ,acych w Σ, kt´orego moc wynosi m. Niech ¯∆ = ∆ ∪ {c ̸= d | c, d ∈ Σoraz c r´o˙zne od d}. Ten nowy zbi´or formu l nad now ,a sygnatur ,a Σ(C) jest spe lnialny. Aby si ,e o tym przekona´c, we´zmy dowolny sko´nczony podzbi´or ¯∆0 ⊆ ¯∆ oraz niesko´nczony model A zbioru ∆ (o kt´orego istnieniu wiemy z za lo˙ze´n). Zinterpretujmy w A sko´nczenie wiele symboli z C, kt´ore wyst ,epuj ,a w ¯∆0, jako dowolnie wybrane, r´o˙zne elementy. Jest oczywiste, ˙ze okre´slony w ten spos´ob model ¯A0 spe lnia ¯∆0. Zatem na mocy twierdzenia o zwarto´sci, ¯∆ istotnie te˙z ma model. Wynika st ,ad, ˙ze ¯∆ jest zbiorem niesprzecznym. Stosuj ,ac do niego twierdzenie o istnieniu modelu, otrzymujemy model ¯B o mocy nie przekraczaj ,acej mocy zbioru wszystkich formu l logiki pierwszego rz ,edu nad Σ(C), kt´ora wynosi m, ale jednocze´snie nie mniejszej ni˙z |C| = m, bo wszystkie sta le z C musz ,a by´c w nim zinterpretowane jako r´o˙zne elementy. Je´sli teraz w modelu ¯B zignorujemy interpretacj ,e sta lych z C to otrzymamy Σ-struktur ,e B mocy m, kt´ora jest modelem zbioru ∆ 58 Wniosek 8.3 ˙Zadna struktura niesko´nczona nie daje si ,e opisa´c zbiorem zda´n logiki pierw- szego rz ,edu z dok ladno´sci ,a do izomorﬁzmu. Dok ladniej, nie istnieje zbi´or ∆ zda´n logiki pierw- szego rz ,edu kt´ory ma model niesko´nczony A i zarazem dla ka˙zdej struktury B spe lniaj ,acej ∆ zachodzi B ∼= A. Historycznie rzecz bior ,ac, twierdzenie Skolema-L¨owenheima-Tarskiego jest nast ,epc ,a dw´och s labszych i starszych twierdze´n, kt´ore zreszt ,a nadal s ,a przywo lywane. Zatem dla pe lno´sci informacji formu lujemy je poni˙zej. Twierdzenie 8.4 (Dolne twierdzenie Skolema-L¨owenheima) Ka˙zdy spe lnialny zbi´or zda´n nad Σ ma model o mocy nie wi ,ekszej ni˙z moc zbioru formu l logiki pierwszego rz ,edu nad Σ. Twierdzenie 8.5 (G´orne twierdzenie Skolema-L¨owenheima) Je´sli zbi´or zda´n nad Σ ma model niesko´nczony, to dla ka˙zdego m ma model o mocy nie mniejszej ni˙z m. Najstarszym protoplast ,a tej grupy twierdze´n by lo po prostu Twierdzenie 8.6 (Skolema-L¨owenheima) Ka˙zda niesko´nczona struktura A nad co naj- wy˙zej przeliczaln ,a sygnatur ,a zawiera co najwy˙zej przeliczaln ,a podstruktur,e, elementarnie r´ow- nowa˙zn ,a z A. W tym sformu lowaniu twierdzenie to daje si ,e udowodni´c bez odwo lania do twierdze´n o pe lno´sci ani o istnieniu modelu i by lo znane wcze´sniej od nich. Wywo la lo ono kiedy´s pot ,e˙zny ferment w dziedzinie logiki: jak to jest mo˙zliwe, ˙ze teoria mnogo´sci ma przeliczalny model, gdy sk ,adin ,ad musi on zawiera´c zbiory nieprzeliczalne, jak np. P(N)? Oczywi´scie nikt wola l g lo´sno nie wypowiada´c drugiej ewentualno´sci: ˙ze teoria mnogo´sci nie ma ˙zadnego modelu i jest po prostu sprzeczna. Nic wi ,ec dziwnego, ˙ze to twierdzenie by lo znane pocz ,atkowo jako Paradoks Skolema. Na szcz ,e´scie staranna analiza wskazuje, ˙ze nie mamy tu jednak do czynienia z antynomi ,a. Ot´o˙z je´sli mamy przeliczalny model teorii mnogo´sci, to wszystkie zbiory do niego nale˙z ,ace ogl ,adane z zewn ,atrz s ,a przeliczalne. Jednak dla niekt´orych z nich, np. dla interpretacji P(N), ˙zadna funkcja z interpretacji N zbioru liczb naturalnych na interpretacj ,e P(N) sama nie jest elementem tego modelu. To ju˙z wystarcza, aby spe lnia l on zdanie m´owi ,ace, ˙ze P(N) jest nieprzeliczalny. Tradycyjnie o wszystkich twierdzeniach z powy˙zszej grupy m´owi si ,e ” twierdzenie Skolema- L¨owenheima”. Twierdzenia o zwarto´sci i twierdze´n Skolema-L¨owenheima cz ,esto u˙zywa si ,e do tego, by wykaza´c istnienie r´o˙znych nietypowych modeli. Je´sli przypomnimy sobie elementarn ,a r´ownowa˙zno´s´c ⟨R, ≤⟩ ≡ ⟨Q, ≤⟩, wyprowadzon ,a jako wniosek z Twierdzenia 4.13, to rozpoznamy w niej r´ownie˙z potencjalny efekt zastosowania (dolnego) twierdzenia Skolema-L¨owenheima. Klasycznym przyk ladem zastosowania twierdzenia o zwarto´sci jest poni˙zszy fakt: 59 Twierdzenie 8.7 Je´sli zbi´or zda´n ∆ ma modele sko´nczone dowolnie du˙zej mocy, to ma te˙z model niesko´nczony. Dow´od: Przypu´s´cmy, ˙ze ∆ ma modele sko´nczone dowolnie du˙zej mocy. Niech ¯∆ = ∆ ∪ {(∃x1 . . . ∃xn ⋀i<j xi ̸= xj) | n ∈ N}. Oczywi´scie ⋀i<j xi ̸= xj oznacza koniunkcj ,e wszystkich n(n − 1) formu l postaci xi ̸= xj, w kt´orych i < j. Zbi´or ¯∆ jest spe lnialny, bo ka˙zdy jego sko´nczony podzbi´or ¯∆0 ⊆ ¯∆ jest spe lnialny. Istotnie, modelem ¯∆0 jest ka˙zdy model ∆ mocy co najmniej max{n | (∃x1 . . . ∃xn ⋀i<j xi ̸= xj) ∈ ¯∆0}. Na mocy twierdzenia o zwarto´sci ¯∆ jest te˙z spe lnialny. Ma on wy l ,acznie modele niesko´nczone, a ka˙zdy jego model jest te˙z modelem dla ∆. Twierdzenie o zwarto´sci mo˙ze te˙z s lu˙zy´c do dowodzenia niewyra˙zalno´sci pewnych poj ,e´c w lo- gice pierwszego rz ,edu. Pos lu˙zymy si ,e tu nast ,epuj ,acym przyk ladem. Twierdzenie 8.8 Poj ,ecie dobrego porz ,adku nie jest wyra˙zalne w logice pierwszego rz ,edu. Dok ladniej, dla ka˙zdego zbioru ∆ formu l pierwszego rz ,edu nad sygnatur ,a =, ≤ takiego, ˙ze ka˙zdy dobry porz ,adek jest modelem ∆, istnieje te˙z taka struktura A nie b,ed ,aca dobrym porz ,adkiem, ˙ze A |= ∆. Dow´od: Niech zbi´or zda´n ∆ ma t ,e w la´sciwo´s´c, ˙ze ka˙zdy dobry porz ,adek jest jego mo- delem. Bez utraty og´olno´sci mo˙zemy za lo˙zy´c, ˙ze ∆ zawiera ju˙z zwyk le aksjomaty liniowych porz ,adk´ow. Niech C = {c0, c1, . . . } b ,edzie zbiorem nowych sta lych. Niech ¯∆ = ∆ ∪ {ci < cj | j < i}. Ka˙zdy sko´nczony podzbi´or ¯∆0 ⊆ ¯∆ jest spe lnialny, np. w zbiorze N, w kt´orym ka˙zda sta la ci wyst ,epuj ,aca w ¯∆0 jest interpretowana jako 2| ¯∆0|−i, za´s pozosta le sta le jako 0. Zatem na mocy twierdzenia o zwarto´sci ¯∆ jest r´ownie˙z spe lnialny. Niech A b ,edzie modelem ¯∆. Relacja ≤A jest porz ,adkiem liniowym, spe lnia ∆, ale nie jest porz ,adkiem dobrym, bo zawiera niesko´nczony ci ,ag zst ,epuj ,acy cA 0 > cA 1 > cA 2 > . . . Interesuj ,ace jest por´ownanie powy˙zszego dowodu z alternatywnym dowodem za pomoc ,a metody Fra¨ıss´e, sugerowanym w ´Cwiczeniu 1 do Rozdzia lu 4. ´Cwiczenia 1. Wskaza´c przyk lad takiego zbioru ∆ zda´n logiki pierwszego rz ,edu, ˙ze ka˙zde dwa jego przeliczalne modele s ,a izomorﬁczne, ale istniej ,a dwa nieprzeliczalne, nieizomorﬁczne ze soba modele zbioru ∆. 2. Udowodni´c, ˙ze dla ka˙zdej struktury sko´nczonej A nad sko´nczon ,a sygnatur ,a istnieje taki zbi´or ∆ zda´n pierwszego rz ,edu, ˙ze A |= ∆ i dla ka˙zdej struktury B |= ∆ zachodzi B ∼= A. 3. Niech Σ b ,edzie sko´nczon ,a sygnatur ,a. Udowodni´c, ˙ze dla ka˙zdego zbioru zda´n ∆ nad Σ, nast ,epu- j ,ace dwa warunki s ,a r´ownowa˙zne • ∆ ma wy l ,acznie sko´nczone modele. • ∆ ma z dok ladno´sci ,a do izomorﬁzmu sko´nczenie wiele modeli. 60 4. Udowodni´c, ˙ze klasa wszystkich struktur izomorﬁcznych ze struktur ,a postaci A = ⟨P(A), ∪, ∩, ⊆⟩, gdzie ∪, ∩ oraz ⊆ s ,a odpowiednio sum ,a, przeci ,eciem i zawieraniem zbior´ow, nie jest aksjomaty- zowalna ˙zadnym zbiorem zda´n pierwszego rz ,edu. 5. Pokaza´c, ˙ze je´sli klasa A struktur nad sygnatur ,a Σ jest aksjomatyzowalna pewnym zbiorem zda´n logiki pierwszego rz ,edu, oraz jej dope lnienie sk ladaj ,ace si ,e ze struktur sygnatury Σ, ktore nie nale˙z ,a do A te˙z jest aksjomatyzowalne, to ka˙zda z tych klas jest w istocie aksjomatyzowalna jednym zdaniem pierwszego rz ,edu. Wskaz´owka: Za lo˙zy´c, ˙ze pierwsza klasa jest aksjomatyzowalna przez ∆, a druga przez ∆′, ale ˙zaden sko´nczony podzbi´or ∆ nie jest aksjomatyzacj ,a A. Pokaza´c, ˙ze ∆ ∪ ∆′ spe lnia za lo˙zenia twierdzenia o zwarto´sci. 6. Pokaza´c nast ,epuj ,ace twierdzenie Robinsona: Je´sli ∆, ∆′ s ,a spe lnialnymi zbiorami zda´n nad pewn ,a sygnatur ,a Σ, za´s ∆ ∪ ∆′ nie jest spe lnialny, to istnieje takie zdanie ϕ, ˙ze ∆ |= ϕ oraz ∆′ |= ¬ϕ. Wskaz´owka: Pokaza´c, ˙ze je´sli teza nie zachodzi, to ∆ ∪ ∆′ spe lnia za lo˙zenia twierdzenia o zwar- to´sci. 7. Niech Spec(ϕ) oznacza zbi´or mocy wszystkich sko´nczonych modeli formu ly ϕ. Pokaza´c, ˙ze je´sli ∆ jest takim zbiorem zda´n, i˙z dla ka˙zdego ϕ ∈ ∆ zbi´or Spec(¬ϕ) jest sko´nczony, oraz je´sli ∆ |= ψ, to tak˙ze Spec(¬ψ) jest sko´nczony. 61 9 Arytmetyka pierwszego rz ,edu S lowo arytmetyka u˙zywane jest w odniesieniu do r´o˙znych teorii dotycz ,acych liczb naturalnych. Nasza sygnatura dla arytmetyki pierwszego rz ,edu sk lada si ,e z dwuargumentowych symboli funkcyjnych + i · , oznaczaj ,acych dodawanie i mno˙zenie, symbolu nast ,epnika s, oraz sta lej 0. Skoro przedmiotem arytmetyki s ,a liczby naturalne, wi ,ec struktur ,e N = ⟨N, +, ·, 0, s⟩, ze ” zwyk lymi” operacjami arytmetycznymi nazwiemy standardowym modelem arytmetyki. Zbi´or Th(N) z lo˙zony ze wszystkich zda´n prawdziwych w modelu N nazywiemy za´s arytmetyk ,a zupe ln ,a. Niestety, arytmetyka zupe lna nie wyznacza modelu standardowego jednoznacznie. Fakt 9.1 Dla dowolnej mocy m ≥ ℵ0 istnieje niestandardowy model arytmetyki mocy m, tj. struktura mocy m M = ⟨M, ⊕, ⊗, 0, S⟩, kt´ora jest elementarnie r´ownowa˙zna N ale nieizomorﬁczna z N. Dow´od: Niech ∆ sk lada si ,e ze wszystkich formu l postaci x ̸= s(s(. . . s(0) . . .)). Nietrudno pokaza´c, ˙ze ka˙zdy sko´nczony podzbi´or zbioru Th(N) ∪ ∆ jest spe lnialny w modelu N przez dostatecznie du˙z ,a warto´s´c x. Na mocy twierdzenia o zwarto´sci (Twierdzenie 8.1), ca lo´s´c jest spe lnialna w pewnym modelu M przez pewne warto´sciowanie ϱ. Wtedy M spe lnia te same zdania co N, ale element ϱ(x) nie ma odpowiednika w modelu N, bo ka˙zdy element N mo˙zna otrzyma´c z zera za pomoc ,a nastepnika. Z Twierdzenia 8.2 wynika, ˙ze model M mo˙ze by´c ˙z ,adanej mocy. Powy˙zszy fakt to kolejny przyk lad wskazuj ,acy na ograniczenia si ly wyrazu logiki pierwszego rz ,edu. Pora wi ,ec na pewne obserwacje o charakterze pozytywnym. J ,ezyk arytmetyki jest tak elastyczny, ˙ze mo˙zna w nim zdeﬁniowa´c ka˙zd ,a funkcj ,e obliczaln ,a. Twierdzenie 9.2 (G¨odel) Dla dowolnej cz ,e´sciowej funkcji obliczalnej f : Nk −◦\u0001 N istnieje taka formu la ϕ, ˙ze F V (ϕ) ⊆ {x1, . . . , xk, y} oraz dla ϱ(x1) = n1, . . . , ϱ(xk) = nk, ϱ(y) = m zachodzi r´ownowa˙zno´s´c (N, ϱ) |= ϕ wtedy i tylko wtedy, gdy f (n1, . . . , nk) = m. Dow´od Twierdzenia 9.2 opuszczamy. Istotnym problemem technicznym w tym dowodzie jest konieczno´s´c kodowania ci ,ag´ow liczb o nieznanej z g´ory d lugo´sci. U˙zywa si ,e w tym celu tzw. chi´nskiego twierdzenia o resztach. Wniosek 9.3 Teoria Th(N) jest nierozstrzygalna. Co wi ,ecej, ani zbi´or Th(N), ani jego dope lnienie nie s ,a nawet rekurencyjnie przeliczalne. Dow´od: Z Twierdzenia 9.2 wynika w szczeg´olno´sci, ˙ze dla dowolnego zbioru rekurencyjnie przeliczalnego A ⊆ N istnieje formu la ϕ(x), o jednej zmiennej wolnej x, dla kt´orej 62 (N, x : n) |= ϕ wtedy i tylko wtedy, gdy n ∈ A. Korzystaj ,ac z Lematu 2.10, mo˙zemy napisa´c to tak: ϕ(n) ∈ Th(N) wtedy i tylko wtedy, gdy n ∈ A, gdzie symbol n oznacza term sn(0). A wi ,ec rozstrzygalno´s´c Th(N) implikowa laby rozstrzy- galno´s´c problemu stopu. Aby udowodni´c drug ,a cz ,e´s´c twierdzenia, przypomnijmy, ˙ze problem decyzyjny Czy dana maszyna Turinga zatrzymuje si ,e dla ka˙zdego s lowa wej´sciowego? nie jest cz ,e´sciowo rozstrzygalny, i ˙ze to samo dotyczy jego dope lnienia. Je´sli zakodujemy nasz problem w postaci zbioru A ⊆ N, to zbi´or ten b ,edzie mo˙zna zdeﬁniowa´c formu l ,a arytmetyki z dwoma kwantyﬁkatorami, wyra˙zaj ,ac ,a w lasno´s´c Dla ka˙zdego (kodu) s lowa w istnieje kod obliczenia akceptuj ,acego to s lowo. Zbi´or A jest wi ,ec te˙z deﬁniowalny formu l ,a arytmetyki i by lby rekurencyjnie przeliczalny, gdyby taka by la teoria Th(N). 9.1 Twierdzenie G¨odla o niezupe lno´sci Skoro nie mo˙zna zdeﬁniowa´c jednoznacznie modelu standardowego (Fakt 9.1), mo˙ze mo˙zna chocia˙z, za pomoc ,a odpowiednich aksjomat´ow, scharakteryzowa´c zdania kt´ore s ,a w nim praw- dziwe? Przez PA (od ” Peano Arithmetics”) oznaczymy teori ,e o aksjomatach: • ∀x∀y (s(x) = s(y) → x = y); • ∀x¬(s(x) = 0) • ∀x (x + 0 = x); • ∀x∀y (x + s(y) = s(x + y)); • ∀x (x · 0 = 0); • ∀x∀y (x · s(y) = (x · y) + x); • ∀x (ϕ(x) → ϕ(s(x))) → (ϕ(0) → ∀x ϕ(x)), gdzie ϕ(x) mo˙ze by´c dowoln ,a formu l ,a. Pierwsze dwa aksjomaty m´owi ,a, ˙ze operacja nast ,epnika jest r´o˙znowarto´sciowa, a zero nie jest nast ,epnikiem ˙zadnej liczby (to gwarantuje niesko´nczo- no´s´c ka˙zdego modelu). Kolejne dwa aksjomaty stanowi ,a indukcyjn ,a deﬁnicj ,e dodawania, a nast ,epne dwa — indukcyjn ,a deﬁnicj ,e mno˙zenia. Na ko´ncu zamiast pojedynczego aksjo- matu, mamy schemat aksjomatu, nazywany schematem indukcji. Zatem zbi´or aksjomat´ow Peano jest w istocie niesko´nczony. Ale zbi´or ten jest rekurencyjny: mo˙zna efektywnie ustali´c co jest aksjomatem a co nie jest. Oczywi´scie standardowy model arytmetyki jest modelem arytmetyki Peano: N |= PA. 63 Inaczej m´owi ,ac, wszystkie konsekwencje aksjomat´ow Peano (twierdzenia teorii PA) s ,a praw- dziwe w standardowym modelu. A na odwr´ot? Kiedy´s przypuszczano, ˙ze PA jest teori ,a zupe ln ,a (por. Deﬁnicja 4.14), tj. ˙ze ka˙zde zdanie prawdziwe w N jest twierdzeniem aryt- metyki Peano. Przypuszczenie to okaza lo sie fa lszywe dzieki odkryciu dokonanemu przez G¨odla, a mianowicie dzi ,eki metodzie arytmetyzacji (numeracji G¨odla), kt´ora pozwoli la na wyra˙zanie w j ,ezyku aryt- metyki fakt´ow odnosz ,acych si ,e do samej arytmetyki, w szczeg´olno´sci istnienia lub nieistnienia dowodu dla danej formu ly. Twierdzenie 9.4 (G¨odla o niezupe lno´sci) Istnieje takie zdanie Z w j ,ezyku arytmetyki, ˙ze PA ̸⊢H Z i PA ̸⊢H ¬Z. Dow´od: Skoro zbi´or aksjomat´ow PA jest rekurencyjny, wi ,ec zbi´or wszystkich twierdze´n teorii PA (formu l, kt´ore mo˙zna wyprowadzi´c z tych aksjomat´ow) jest rekurencyjnie przeli- czalny. Aby bowiem stwierdzi´c, ˙ze dana formu la jest twierdzeniem PA, wystarczy systema- tycznie generowa´c wszystkie mo˙zliwe dowody, a˙z wreszcie otrzymamy ten w la´sciwy. Gdyby PA by la teori ,a zupe ln ,a, to dla dowolnego zdania ϕ, pr ,edzej czy p´o´zniej znale´zliby´smy albo dow´od formu ly ϕ albo formu ly ¬ϕ. A wi ,ec w takim przypadku PA by laby po prostu rozstrzygalna. Ale z drugiej strony, teoria zupe lna jest identyczna z teori ,a ka˙zdego swojego modelu, wi ,ec PA by laby identyczna z Th(N). W´owczas jednak teoria Th(N) musia laby by´c rozstrzygalna, co przeczy Wnioskowi 9.3. Istota twierdzenia G¨odla polega nie na tym, ˙ze akurat PA jest niezupe lna. Je´sli zbi´or aksjo- mat´ow PA rozszerzymy do innego (rekurencyjnie przeliczalnego) zbioru aksjomat´ow prawdzi- wych w N to nadal b ,edzie istnia lo zdanie niezale˙zne od tych aksjomat´ow. Dow´od pozostanie prawie bez zmian. A wi ,ec nie tylko PA, ale w og´ole ka˙zda efektywnie zadana teoria musi by´c niezupe lna, je´sli tylko jest dostatecznie silna na to, aby da lo sie w niej zinterpretowa´c poj ,ecia arytmetyczne. Przytoczony powy˙zej ” wsp´o lczesny” dow´od twierdzenia G¨odla wykorzystuje numeracj ,e g¨od- lowsk ,a po´srednio, poprzez odwo lanie si ,e do poj ,ecia rozstrzygalnego problemu decyzyjnego. (M´owi ,ac o algorytmach generuj ,acych dowody, w istocie mamy na my´sli pewne obliczenia na kodach takich dowod´ow, itd.) Oryginalny dow´od G¨odla pos lugiwa l si ,e numeracj ,a bezpo´sred- nio i przebiega l mniej wi ,ecej tak jak ni˙zej. Na pocz ,atek numerujemy wszystkie symbole j ,ezyka arytmetyki: Symbol: 0 s + · ⊥ → = ∀ ( ) x0 x1 . . . Numer: 1 2 3 4 5 6 7 8 9 10 11 12 . . . Ka˙zdemu ci ,agowi znak´ow, w tym ka˙zdej formule, dowodowi itp., mo˙zna teraz przypisa´c kod liczbowy. Je´sli przez #a oznaczymy numer znaku a, to kodem napisu ” a1a2 . . . an” jest liczba Kod (a1a2 . . . an) = 2#a13 #a25 #a37 #a4 · · · p#an n , 64 gdzie pn oznacza n-t ,a liczb ,e pierwsz ,a. Odkrycie G¨odla oparte jest na obserwacji, ˙ze w lasno´sci formu l arytmetyki mog ,a by´c wyra˙zane w j ,ezyku samej arytmetyki jako teorioliczbowe w las- no´sci kod´ow. Zamiast np. m´owi´c o w lasno´sciach formu ly ∀x0((x1 + x0 = 0) → ⊥), mo˙zna m´owi´c o w lasno´sciach jej kodu, tj. liczby Kod (∀x0((x1 + x0 = 0) → ⊥)) = 283115 9791112133171119723129103163754110. Przypomnijmy, ˙ze symbol n oznacza term sn(0). Oczywi´scie znaczeniem termu n w N jest liczba n. Mo˙zna teraz np. napisa´c tak ,a formu l ,e ϕ(x) o jednej zmiennej wolnej x, ˙ze dla dowolnego n ∈ N spe lnianie N |= ϕ(n) ma miejsce wtedy i tylko wtedy, gdy • n jest numerem pewnej formu ly o co najwy˙zej jednej zmiennej wolnej. Oczywi´scie wiele rozmaitych w lasno´sci syntaktycznych mo˙zemy wyrazi´c w podobny spos´ob. Przydatna jest np. formu la σ(x, y) o takiej w lasno´sci: N |= σ(n, m), wtedy i tylko wtedy, gdy • m jest numerem pewnej formu ly α(x) o jednej zmiennej wolnej, • n jest numerem zdania α(m). W skr´ocie zapiszemy to tak: N |= σ(n, m), wtedy i tylko wtedy, gdy n jest numerem zdania αm(m). Nie ka˙zda w lasno´s´c formu l mo˙ze jednak by´c wyra˙zona w j ,ezyku arytmetyki. Twierdzenie 9.5 (Tarskiego o niewyra˙zalno´sci prawdy) Nie istnieje formu la wyra˙za- j ,aca prawdziwo´s´c formu l w standardowym modelu, tj. taka formu la π(x), ˙ze N |= π(n) wtedy i tylko wtedy, gdy n jest numerem zdania prawdziwego w N. Dow´od: Dow´od twierdzenia polega na wyra˙zeniu znanego paradoksu k lamcy 13 w j ,ezyku arytmetyki. Rozpatrzmy nastepuj ,ac ,a formu l ,e τ (x) ≡ ∃y (σ(y, x) ∧ ¬π(y)). W´owczas N |= τ (n) wtedy i tylko wtedy, gdy • n jest numerem pewnej formu ly α(x) o jednej zmiennej wolnej, • zdanie α(n) jest fa lszywe w N. Mniej ´sci´sle, ale pro´sciej: N |= τ (n) wtedy i tylko wtedy, gdy N |= ¬αn(n). 13Stwierdzenie ” To zdanie jest fa lszywe” nie mo˙ze by´c ani prawdziwe ani fa lszywe. 65 Formu la τ (x) te˙z ma numer, powiedzmy, ˙ze τ (x) = αk(x). A zatem mo˙zemy napisa´c N |= τ (k) wtedy i tylko wtedy, gdy N |= ¬αk(k). Mo˙zemy to napisa´c z czystym sumieniem, bo warunek • k jest numerem pewnej formu ly α(x) o jednej zmiennej wolnej, jest oczywi´scie spe lniony. Ale przecie˙z αk(k) to w la´snie formu la τ (k). A zatem: N |= τ (k) wtedy i tylko wtedy, gdy N |= ¬τ (k). No jasne: zdanie τ (k) stwierdza ”Ja jestem fa lszywe!” Ze znanym skutkiem . . . Uwaga: Twierdzenie Tarskiego podpowiada rozstrzygni ,ecie paradoksu k lamcy: Problem le˙zy w niewyra˙zalno´sci poj ,ecia ” zdania prawdziwego”, tak˙ze w j ,ezyku polskim. A skoro pytamy o w lasno´s´c, kt´orej nie umiemy zdeﬁniowa´c, to nie dziwmy si ,e, ˙ze nie ma odpowiedzi. Twierdzenie G¨odla o niezupe lno´sci arytmetyki otrzymamy po nieznacznej modyﬁkacji po- wy˙zszego rozumowania. Zamiast niemo˙zliwego do zdeﬁniowania poj ,ecia prawdy, u˙zyjemy wyra˙zalnej w lasno´sci ” mie´c dow´od w arytmetyce Peano”. Otrzymamy w ten spos´ob zdanie Z, kt´ore m´owi: ” Ja nie mam dowodu! ”. Inny dow´od Twierdzenia 9.4: Post ,epujemy jak w poprzednim dowodzie, u˙zywaj ,ac for- mu ly π′(x) o w lasno´sci N |= π′(n) wtedy i tylko wtedy, gdy n jest numerem zdania, kt´ore ma dow´od w PA. Otrzymamy w ko´ncu tak ,a konkluzj ,e: N |= τ (k) wtedy i tylko wtedy, gdy PA ̸⊢H τ (k). Przyjmuj ,ac Z = τ (k), wnioskujemy, ˙ze ani Z ani ¬Z nie mo˙ze mie´c dowodu w PA. Za lo˙zenie P A ⊢H Z prowadzi do sprzeczno´sci, bo je´sli P A ⊢H Z to N |= Z. Ale za lo˙zenie P A ⊢H ¬Z te˙z prowadzi do sprzeczno´sci, bo mieliby´smy z jednej strony N |= ¬Z, a z drugiej N |= Z. Uwaga: nietrudno zauwa˙zy´c, ˙ze N |= Z. Rozumowanie G¨odla prowadzi do jeszcze jednego wa˙znego wniosku, nazywanego drugim twierdzeniem o niezupe lno´sci . Niech m b ,edzie numerem zdania ” 0 = s(0)” i niech Con oznacza zdanie ¬π′(m). Zdanie to wyra˙za niesprzeczno´s´c arytmetyki Peano. Rozumowanie podobne do u˙zytego w dowodzie Twierdzenia 9.4 mo˙zna. . . sformalizowa´c w j ,ezyku aryt- metyki. Otrzymamy konkluzj ,e: PA ⊢H Con → Z, gdzie Z jest zdaniem z Twierdzenia 9.4. W konsekwencji otrzymujemy: Wniosek 9.6 PA ̸⊢H Con. Niesprzeczno´sci arytmetyki Peano nie mo˙zna udowodni´c na gruncie samej arytmetyki Peano (chyba, ˙ze PA jest sprzeczna). Ta sama konkluzja dotyczy ka˙zdej dostatecznie silnej teorii. Na zako´nczenie powiedzmy jeszcze, ˙ze teoria PA jest nierozstrzygalna. Dow´od tego faktu wymaga pewnego udoskonalenia Twierdzenia 9.2. Zamiast r´ownowa˙zno´sci 66 (N, ϱ) |= ϕ wtedy i tylko wtedy, gdy f (n1, . . . , nk) = m, mo˙zna mianowicie pokaza´c r´ownowa˙zno´s´c postaci PA ⊢H ϕ(n1, . . . , nk, m) wtedy i tylko wtedy, gdy f (n1, . . . , nk) = m. Nierozstrzygalno´s´c PA mo˙zna udowodni´c metod ,a podobn ,a do u˙zytej w dowodzie Wniosku 9.3. ´Cwiczenia 1. Udowodni´c, ˙ze istnieje niestandardowy, przeliczalny model T h(N), a w nim liczba, maj ,aca niesko´nczenie wiele dzielnik´ow pierwszych. 2. Pokaza´c, ˙ze nast ,epuj ,ace zdania s ,a twierdzeniami arytmetyki Peano: (a) 2 · 2 = 4; (b) ∀x(¬(x = 0) → ∃y(x = s(y))); (c) ∀x∀y∀z ((x + y) + z = x + (y + z)); (d) ∀x∀y(x + y = y + x); 3. Jaka jest r´o˙znica pomi ,edzy nast ,epuj ,acymi zdaniami? • Dwa razy dwa jest cztery. • Zdanie ”Dwa razy dwa jest cztery” jest prawdziwe. Wskaz´owka: Pierwsze zdanie m´owi o pewnej w lasno´sci liczb. ˙Zeby si ,e z nim zgodzi´c, wystarczy wiedzie´c ile jest dwa razy dwa. Co trzeba wiedzie´c, aby zrozumie´c drugie zdanie? 67 10 Zdaniowa logika dynamiczna Zdaniowa logika dynamiczna (PDL, od angielskiej nazwy Propositional Dynamic Logic) zosta- la zaproponowana przez V. Pratta w 1976 r. Jest ona eleganckim i zwi ,ez lym formalizmem pozwalaj ,acym bada´c rozumowania dotycz ,ace program´ow iteracyjnych. Formalizm ten roz- szerza logik ,e modaln ,a poprzez wprowadzenie modalno´sci dla ka˙zdego programu z osobna. W tej cz ,e´sci poka˙zemy jedynie dwie podstawowe w lasno´sci PDL: w lasno´s´c ma lego modelu oraz pe lno´s´c aksjomatyzacji. Z w lasno´sci ma lego modelu natychmiast wynika rozstrzygalno´s´c problemu spe lnialno´sci dla PDL. System o podobnym charakterze, o nazwie Logika Algoryt- miczna, zosta l zaproponowany w roku 1970 przez A. Salwickiego. 10.1 Sk ladnia i semantyka PDL Syntaktycznie PDL jest mieszanin ,a trzech klasycznych sk ladnik´ow: logiki zdaniowej, logiki modalnej oraz algebry wyra˙ze´n regularnych. J ,ezyk PDL zawiera wyra˙zenia dw´och rodzaj´ow: zdania (lub formu ly) ϕ, ψ, . . . oraz programy α, β, γ, . . .. Zak ladamy, ˙ze mamy do dyspozycji przeliczalnie wiele atomowych symboli ka˙zdego rodzaju. Programy atomowe s ,a oznaczane przez a, b, c, . . ., a zbi´or wszystkich atomowych program´ow oznaczamy przez Π0. Programy s ,a budowane z program´ow atomowych przy u˙zyciu operacji z lo˙zenia (;), niedeter- ministycznego wyboru (∪) oraz iteracji (∗). Intuicyjnie wykonanie programu α; β oznacza wykonanie α, a nast ,epnie wykonanie na danych wyprodukowanych przez α programu β. Wykonanie programu α ∪ β oznacza niedeterministyczny wyb´or wykonania α lub β. Na- tomiast wykonanie programu α∗ oznacza wykonanie α pewn ,a liczb ,e razy, by´c mo˙ze zero. Ponadto mamy operacj ,e testowania tworz ,ac ,a z ka˙zdej formu ly ϕ nowy program ϕ?. Wyko- nanie programu ϕ? jest mo˙zliwe tylko wtedy, gdy warunek ϕ zachodzi. Z drugiej strony, formu ly mog ,a odwo lywa´c si ,e do dowolnego programu α poprzez modalno´s´c konieczno´sci [α]: dla dowolnego zdania ϕ, napis [α]ϕ czytamy ” po (ka˙zdym) wykonaniu programu α koniecznie musi zaj´s´c ϕ”. Deﬁnicja 10.1 Deﬁnicja formu l i program´ow jest wzajemnie rekurencyjna. Deﬁniujemy zbi´or program´ow Π oraz zbi´or formu l Φ jako najmniejsze zbiory spe lniaj ,ace nast ,epuj ,ace warunki • ZZ ⊆ Φ • Π0 ⊆ Π • je´sli ϕ, ψ ∈ Φ, to ϕ → ψ ∈ Φ oraz ⊥ ∈ Φ • je´sli α, β ∈ Π, to (α; β), (α ∪ β), oraz α∗ ∈ Π • je´sli α ∈ Π oraz ϕ ∈ Φ, to [α]ϕ ∈ Φ • je´sli ϕ ∈ Φ, to ϕ? ∈ Π. 68 Aby unikn ,a´c pisania zbyt wielu nawias´ow stosujemy nast ,epuj ,ace priorytety: • Jednoargumentowe operatory (wliczaj ,ac [α]) wi ,a˙z ,a silniej ni˙z dwuargumentowe. • Operator ; wi ,a˙ze silniej ni˙z ∪. • Sp´ojniki logiczne maj ,a takie same priorytety jak zdeﬁniowano wcze´sniej. Tak wi ,ec wyra˙zenie [α; β∗ ∪ γ∗]ϕ ∨ ψ odpowiada nast ,epuj ,acemu wyra˙zeniu z nawiasami ([(α; β∗) ∪ γ∗]ϕ) ∨ ψ. Poniewa˙z operatory ; oraz ∪ oka˙z ,a si ,e by´c l ,aczne, wi ,ec zwyczajowo b ,edziemy opuszcza´c nawiasy w wyra˙zeniach typu α; β; γ lub α ∪ β ∪ γ. Przypomnijmy, ˙z ,e negacja ¬ϕ jest skr´otem formu ly ϕ → ⊥. Dualnie do [ ] deﬁniujemy modalno´s´c mo˙zliwo´sci <α>ϕ := ¬[α]¬ϕ. Zdanie <α>ϕ czytamy ” istnieje obliczenie programu α, kt´ore zatrzymuje si ,e w stanie spe lnia- j ,acym formu l ,e ϕ”. Istotn ,a r´o˙znic ,a pomi ,edzy modalno´sciami [ ] i < > jest to, ˙ze <α>ϕ implikuje i˙z program α si ,e zatrzymuje, podczas gdy [α]ϕ nie gwarantuje zatrzymania si ,e programu α. W szczeg´olno´sci formu la [α]⊥ wyra˙za w lasno´s´c m´owi ,ac ,a, ˙ze ˙zadne obliczenie programu α nie zatrzymuje si ,e. Natomiast formu la <α>⊥ jest zawsze fa lszywa. Przejdziemy teraz do zdeﬁniowania semantyki. Podstawow ,a struktur ,a semantyczn ,a dla PDL jest tzw. struktura Kripkego. Deﬁnicja 10.2 Struktura Kripkego jest uporz ,adkowan ,a par ,a K = ⟨K, mK⟩, gdzie K jest zbiorem element´ow u, v, w, . . . zwanych stanami, a mK jest funkcj ,a przyporz ,adkowuj ,ac ,a ka˙z- demu atomowemu zdaniu p ∈ ZZ, podzbi´or mK(p) ⊆ K oraz ka˙zdemu atomowemu pro- gramowi a ∈ Π0, relacj ,e binarn ,a mK(a) ⊆ K × K. Poni˙zej funkcj ,e mK rozszerzymy do dowolnych formu l i dowolnych program´ow. Intuicyjnie dla formu ly ϕ, zbi´or stan´ow mK(ϕ) jest zbiorem wszystkich stan´ow struktury K, w kt´orych ϕ jest spe lniona. Natomiast dla programu α, relacja mK(α) jest tzw. relacj ,a wej´scia-wyj´scia programu α w strukturze K. 69 Deﬁnicja 10.3 mK(ϕ → ψ) := (K − mK(ϕ)) ∪ mK(ψ) mK(⊥) := ∅ mK([α]ϕ) := {u | ∀v ∈ K(⟨u, v⟩ ∈ mK(α) ⇒ v ∈ mK(ϕ))} mK(α; β) := {⟨u, v⟩ | ∃w ∈ K(⟨u, w⟩ ∈ mK(α) ∧ ⟨w, v⟩ ∈ mK(β))} mK(α ∪ β) := mK(α) ∪ mK(β) mK(α∗) := ⋃ n≥0 mK(α) n mK(ϕ?) := {⟨u, u⟩ | u ∈ mK(ϕ)}. Deﬁnicja 10.4 Powiemy, ˙ze formu la ϕ jest spe lniona w stanie u struktury K, gdy u ∈ mK(ϕ). Podobnie jak w logice pierwszego rz ,edu spe lnianie zapisujemy nast ,epuj ,aco (K, u) |= ϕ. Gdy z kontekstu wynika o jak ,a struktur ,e chodzi, to mo˙zemy po prostu pisa´c u |= ϕ. Powiemy, ˙ze formu la ϕ jest prawdziwa w strukturze K, gdy jest spe lniona w ka˙zdym stanie tej struktury. Zapisujemy to K |= ϕ. Formu la ϕ jest tautologi ,a PDL, gdy jest ona prawdziwa w ka˙zdej strukturze Kripkego. Wreszcie powiemy, ˙ze formu la ϕ jest spe lnialna, gdy istnieje struktura Kripkego K, taka ˙ze ϕ jest spe lniona w przynajmniej jednym stanie K. Przyk lad 10.5 Niech p b ,edzie zmienn ,a zdaniow ,a oraz niech a b ,edzie atomowym programem. Niech K = (K, mK) b ,edzie tak ,a struktur ,a Kripkego, ˙ze K = {u, v, w} mK(p) = {u, v} mK(a) = {⟨u, v⟩, ⟨u, w⟩, ⟨v, w⟩, ⟨w, v⟩}. Nastepuj ,acy diagram ilustruje K. s s s u v w ˙ ˆ ˘ ˇ p\u0013\u0013 \u0013\u00137 -S S S So w a a a W tej strukturze mamy u |= <a>¬p ∧ <a>p, ale v |= [a]¬p oraz w |= [a]p. Ponadto ka˙zdy stan struktury K spe lnia nast ,epuj ,ac ,a formu l ,e <a∗>[(aa)∗]p ∧ <a∗>[(aa)∗]¬p. Przyk lad 10.6 Niech p, q b ,ed ,a zmiennymi zdaniowymi i niech a, b b ,ed ,a atomowymi progra- 70 mami. Ponadto niech K = (K, mK) b ,edzie struktur ,a Kripkego zdeﬁniowan ,a nast ,epuj ,aco K = {s, t, u, v} mK(p) = {u, v} mK(q) = {t, v} mK(a) = {⟨t, v⟩, ⟨v, t⟩, ⟨s, u⟩, ⟨u, s⟩} mK(b) = {⟨u, v⟩, ⟨v, u⟩, ⟨s, t⟩, ⟨t, s⟩}. Nast ,epuj ,acy rysunek ilustruje K. s s s s u s v t ˙ ˆ ˘ ˇ ˙ ˆ ˘ ˇ q p ? - - 6 6 ˙ ˙ ? b b a a Nast ,epuj ,ace formu ly s ,a prawdziwe w K. p ↔ [(ab∗a)∗]p q ↔ [(ba∗b)∗]q. Ponadto niech α b ,edzie programem α = (aa ∪ bb ∪ (ab ∪ ba)(aa ∪ bb)∗(ab ∪ ba))∗. (14) Program α traktowany jako wyra˙zenie regularne, generuje wszystkie s lowa nad alfabetem {a, b} o parzystej liczbie wyst ,apie´n a oraz b. Mo˙zna pokaza´c, ˙ze dla dowolnego zdania ϕ, formu la ϕ ↔ [α]ϕ jest prawdziwa w K. Zauwa˙zmy, ˙ze operator ∗ jest z natury inﬁnitarny. Z deﬁnicji domkni ,ecie zwrotne i przechod- nie relacji jest niesko´nczon ,a sum ,a. Z tego wzgl ,edu twierdzenie o zwarto´sci nie zachodzi dla PDL. Istotnie, zbi´or {<α∗>ϕ} ∪ {¬ϕ, ¬<α>ϕ, ¬<α2>ϕ, . . .} jest sko´nczenie spe lnialny (tzn. ka˙zdy sko´nczony podzbi´or jest spe lnialny), ale ca ly zbi´or nie jest spe lnialny. 10.2 Przyk lady tautologii PDL W tej cz ,e´sci przedstawimy przyk lady tautologii PDL. Wszystkie dowody, jako latwe pozosta- wimy Czytelnikowi. Pierwsza grupa tautologii to schematy znane z logiki modalnej. 71 Twierdzenie 10.7 Nast ,epuj ,ace formu ly s ,a tautologiami PDL. (i) <α>(ϕ ∨ ψ) ↔ <α>ϕ ∨ <α>ψ (ii) [α](ϕ ∧ ψ) ↔ [α]ϕ ∧ [α]ψ (iii) [α](ϕ → ψ) → ([α]ϕ → [α]ψ) (iv) <α>(ϕ ∧ ψ) → <α>ϕ ∧ <α>ψ (v) [α]ϕ ∨ [α]ψ → [α](ϕ ∨ ψ) (vi) <α>⊥ ↔ ⊥ (vii) [α]ϕ ↔ ¬<α>¬ϕ. Implikacje odwrotne w Twierdzeniu 10.7(iii)–(v) nie zachodz ,a. Przyk ladowo implikacja od- wrotna do (iv) nie jest spe lniona w stanie u nast ,epuj ,acej struktury Kripkego. su \b\b\b\b* HHHHj s s ϕ ∧ ¬ψ ψ ∧ ¬ϕ Nast ,epna grupa tautologii, specyﬁczna dla PDL, dotyczy sp´ojnik´ow programotw´orczych ; i ∪ oraz testu ?. Twierdzenie 10.8 Nast ,epuj ,ace formu ly s ,a tautologiami PDL. (i) <α ∪ β>ϕ ↔ <α>ϕ ∨ <β>ϕ (ii) [α ∪ β]ϕ ↔ [α]ϕ ∧ [β]ϕ (iii) <α ; β>ϕ ↔ <α><β>ϕ (iv) [α ; β]ϕ ↔ [α][β]ϕ (v) <ϕ?>ψ ↔ (ϕ ∧ ψ) (vi) [ϕ?]ψ ↔ (ϕ → ψ). Ostatnia grupa tautologii dotyczy operatora iteracji ∗. Twierdzenie 10.9 Nastepuj ,ace formu ly s ,a tautologiami PDL. (i) [α∗]ϕ → ϕ (ii) ϕ → <α∗>ϕ 72 (iii) [α∗]ϕ → [α]ϕ (iv) <α>ϕ → <α∗>ϕ (v) [α∗]ϕ ↔ [α∗α∗]ϕ (vi) <α∗>ϕ ↔ <α∗α∗>ϕ (vii) [α∗]ϕ ↔ [α∗∗]ϕ (viii) <α∗>ϕ ↔ <α∗∗>ϕ (ix) [α∗]ϕ ↔ ϕ ∧ [α][α∗]ϕ (x) <α∗>ϕ ↔ ϕ ∨ <α><α∗>ϕ (xi) [α∗]ϕ ↔ ϕ ∧ [α∗](ϕ → [α]ϕ) (xii) <α∗>ϕ ↔ ϕ ∨ <α∗>(¬ϕ ∧ <α>ϕ). W lasno´s´c (ii) m´owi, ˙ze α∗ jest semantycznie relacj ,a zwrotn ,a. Przechodnio´s´c relacji α∗ jest wyra˙zona w (vi). Natomiast fakt, ze α∗ zawiera relacj ,e α jest wyra˙zony w (iv). Implikacja ← w (xi) wyra˙za zasad ,e indukcji. Baz ,a jest za lo˙zenie, ˙ze w lasno´s´c ϕ jest spe lniona w pewnym stanie u. Warunek indukcyjny m´owi, ˙ze w ka˙zdym stanie osi ,agalnym z u poprzez sko´nczon ,a liczb ,e iteracji programu α, kolejne wykonanie α zachowuje w lasno´s´c ϕ. Teza stwierdza, ˙ze w´owczas ϕ jest spe lnione we wszystkich stanach osi ,agalnych w sko´nczonej liczbie iteracji α. 10.3 W lasno´s´c ma lego modelu W tej cz ,e´sci udowodnimy w lasno´s´c ma lego modelu dla PDL. W lasno´s´c ta m´owi, ˙ze je´sli ϕ jest spe lnialna to jest spe lniona w pewnej sko´nczonej strukturze Kripkego. Co wi ,ecej, jak b ,edzie wynika lo z dowodu, struktura ta ma co najwy˙zej 2|ϕ| stan´ow, gdzie |ϕ| oznacza rozmiar for- mu ly ϕ. Wynika st ,ad natychmiast rozstrzygalno´s´c problemu spe lnialno´sci dla PDL. Technika zastosowana w dowodzie twierdzenia o ma lym modelu nosi nazw ,e ﬁltracji i jest od dawna stosowana w logikach modalnych. W przypadku PDL sytuacj ,e komplikuje fakt, ˙ze deﬁnicja formu l i program´ow jest wzajemnie rekurencyjna, co powoduje ˙ze indukcyjne rozumowania s ,a nieco bardziej delikatne. W lasno´s´c ma lego modelu dla PDL zosta la udowodniona w 1977 r. przez M. Fischera i R. Ladnera. Zaczniemy od deﬁnicji domkni ,ecia Fischera-Ladnera. Zdeﬁniujemy dwie funkcje FL : Φ → 2Φ FL □ : {[α]ϕ | α ∈ Ψ, ϕ ∈ Φ} → 2 Φ przez wzajemn ,a indukcj ,e (a) FL(p) := {p}, gdy p jest zmienn ,a zdaniow ,a (b) FL(ϕ → ψ) := {ϕ → ψ} ∪ FL(ϕ) ∪ FL(ψ) 73 (c) FL(⊥) := {⊥} (d) FL([α]ϕ) := FL □([α]ϕ) ∪ FL(ϕ) (e) FL □([a]ϕ) := {[a]ϕ}, gdy a jest atomowym programem (f) FL □([α ∪ β]ϕ) := {[α ∪ β]ϕ} ∪ FL □([α]ϕ) ∪ FL □([β]ϕ) (g) FL □([α ; β]ϕ) := {[α ; β]ϕ} ∪ FL □([α][β]ϕ) ∪ FL □([β]ϕ) (h) FL □([α∗]ϕ) := {[α∗]ϕ} ∪ FL □([α][α∗]ϕ) (i) FL □([ψ?]ϕ) := {[ψ?]ϕ} ∪ FL(ψ). Zbi´or FL(ϕ) jest nazywany domkni ,eciem Fischera-Ladnera. Zauwa˙zmy, ˙ze deﬁnicja FL(ϕ) jest indukcyjna ze wzgl ,edu na budow ,e formu ly ϕ, natomiast pomocnicza funkcja FL □ jest okre´slona jedynie na formu lach postaci [α]ϕ i jej deﬁnicja jest indukcyjna ze wzgl ,edu na budow ,e programu α. Tak wi ,ec chocia˙z w warunku (h) formu la po prawej stronie deﬁnicji jest d lu˙zsza ni˙z po lewej, to program α w zewn ,etrznej modalno´sci jest prostszy ni˙z α∗ i dlatego deﬁnicja ta jest dobrze ufundowana. Niech |α| oraz |ϕ| oznaczaj ,a d lugo´s´c programu α i formu ly ϕ rozumian ,a jako liczb ,e wyst ,apie´n symboli nie licz ,ac nawias´ow. Nast ,epuj ,acy lemat podaje ograniczenie g´orne na moc domkni ,ecia Fischera-Ladnera. Lemat 10.10 (i) Dla dowolnej formu ly ϕ mamy |FL(ϕ)| ≤ |ϕ|. (ii) Dla dowolnej formu ly [α]ϕ mamy |FL □([α]ϕ)| ≤ |α|. Dow´od: Dow´od jest przez jednoczesn ,a indukcj ,e ze wzgl ,edu na schemat deﬁniuj ,acy FL oraz FL □. Pozostawimy go Czytelnikowi jako ´cwiczenie. Nast ,epny lemat ma charakter techniczny. B ,edzie wykorzystany w dowodzie lematu o ﬁltracji. Lemat 10.11 (i) Je´sli σ ∈ FL(ϕ), to FL(σ) ⊆ FL(ϕ). (ii) Je´sli σ ∈ FL □([α]ϕ), to FL(σ) ⊆ FL □([α]ϕ) ∪ FL(ϕ). Dow´od: Dowodzimy (i) oraz (ii) przez jednoczesn ,a indukcj ,e. Szczeg´o ly pozostawiamy Czytelnikowi jako ´cwiczenie. Nast ,epuj ,ace w laso´sci FL s ,a bezpo´sredni ,a konsekwencj ,a Lematu 10.11. 74 Lemat 10.12 (i) Je´sli [α]ψ ∈ FL(ϕ), to ψ ∈ FL(ϕ). (ii) Je´sli [ρ?]ψ ∈ FL(ϕ), to ρ ∈ FL(ϕ). (iii) Je´sli [α ∪ β]ψ ∈ FL(ϕ), to [α]ψ ∈ FL(ϕ) oraz [β]ψ ∈ FL(ϕ). (iv) Je´sli [α ; β]ψ ∈ FL(ϕ), to [α][β]ψ ∈ FL(ϕ) and [β]ψ ∈ FL(ϕ). (v) Je´sli [α∗]ψ ∈ FL(ϕ), to [α][α∗]ψ ∈ FL(ϕ). Dla danej formu ly ϕ oraz struktury Kripkego K = (K, mK) deﬁniujemy now ,a struktur ,e K/FL(ϕ) = ⟨K/FL(ϕ), mK/FL(ϕ)⟩, zwan ,a ﬁltracj ,a struktury K przez FL(ϕ). Najpierw de- ﬁniujemy binarn ,a relacj ,e ≡ w zbiorze stan´ow K. u ≡ v wtedy i tylko wtedy, gdy ∀ψ ∈ FL(ϕ) (u ∈ mK(ψ) ⇐⇒ v ∈ mK(ψ)). Innymi s lowy uto˙zsamiamy stany u oraz v je´sli s ,a one nierozr´o˙znialne przez ˙zadn ,a formu l ,e ze zbioru FL(ϕ). Filtracja struktury jest zwyk l ,a konstrukcj ,a ilorazow ,a. Niech [u] := {v | v ≡ u} K/FL(ϕ) := {[u] | u ∈ K} mK/FL(ϕ)(p) := {[u] | u ∈ mK(p)}, gdy p jest zmienn ,a zdaniow ,a mK/FL(ϕ)(a) := {⟨[u], [v]⟩ | ⟨u, v⟩ ∈ mK(a)}, gdy a jest atomowym programem. Przekszta lcenie mK/FL(ϕ) rozszerza si ,e w zwyk ly spos´ob na wszystkie formu ly i programy. Nast ,epuj ,acy lemat pokazuje zwi ,azek pomi ,edzy strukturami K oraz K/FL(ϕ). G l´owna trud- no´s´c techniczna polega tu sformu lowaniu poprawnego za lo˙zenia indukcyjnego. Sam dow´od (jednoczesna indukcja) jest zupe lnie rutynowy i dlatego pozostawimy go Czytelnikowi jako ´cwiczenie. Lemat 10.13 (o ﬁltracji) Niech u, v b,ed ,a stanami w strukturze Kripkego K. (i) Dla dowolnej formu ly ψ ∈ FL(ϕ), mamy u ∈ mK(ψ) ⇐⇒ [u] ∈ mK/FL(ϕ)(ψ). (ii) Dla dowolnej formu ly [α]ψ ∈ FL(ϕ) zachodzi (a) je´sli ⟨u, v⟩ ∈ mK(α), to ⟨[u], [v]⟩ ∈ mK/FL(ϕ)(α); (b) je´sli ⟨[u], [v]⟩ ∈ mK/FL(ϕ)(α) oraz u ∈ mK([α]ψ), to v ∈ mK(ψ). Z lematu o ﬁltracji natychmiast dostajemy twierdzenie o ma lym modelu. Twierdzenie 10.14 (W lasno´s´c ma lego modelu) Niech ϕ b,edzie spe lnialn ,a formu l ,a PDL. W´owczas ϕ jest spe lniona w strukturze Kripkego maj ,acej co najwy˙zej 2|ϕ| stan´ow. 75 Dow´od: Je´sli ϕ jest spe lnialna, to istnieje struktura Kripkego K oraz stan u ∈ K, taki ˙ze u ∈ mK(ϕ). Niech FL(ϕ) b ,edzie domkni ,eciem Fischera-Ladnera formu ly ϕ. Na mocy Lematu 10.13 o ﬁltracji mamy [u] ∈ mK/FL(ϕ)(ϕ). Ponadto K/FL(ϕ) ma nie wi ,ecej stan´ow ni˙z liczba warto´sciowa´n przypisuj ,acych warto´sci logiczne formu lom z FL(ϕ). Tych ostatnich jest, na mocy Lematu 10.10(i), co najwy˙zej 2|ϕ|. Z powy˙zszego twierdzenia natychmiast wynika rozstrzygalno´s´c problemu spe lnialno´sci dla formu l PDL. Naiwny algorytm polegaj ,acy na przeszukiwaniu wszystkich struktur Kripkego o co najwy˙zej 2|ϕ| stanach ma z lo˙zono´s´c podw´ojnie wyk ladnicz ,a wzgl ,edem d lugo´sci formu ly. U˙zywaj ,ac nieco sprytniejszej metody mo˙zna rozstrzygn ,a´c problem spe lnialno´sci w czasie po- jedynczo wyk ladniczym. Z lo˙zono´s´c ta jest najlepsza mo˙zliwa, mo˙zna bowiem pokaza´c, ˙ze problem spe lnialno´sci dla PDL jest zupe lny w deterministycznym czasie wyk ladniczym. 10.4 Aksjomatyzacja PDL Podamy teraz system formalny dla PDL i naszkicujemy dow´od jego pe lno´sci. Jest to system w stylu Hilberta. Aksjomaty (P0) Aksjomaty logiki zdaniowej (P1) [α](ϕ → ψ) → ([α]ϕ → [α]ψ) (P2) [α](ϕ ∧ ψ) ↔ [α]ϕ ∧ [α]ψ (P3) [α ∪ β]ϕ ↔ [α]ϕ ∧ [β]ϕ (P4) [α ; β]ϕ ↔ [α][β]ϕ (P5) [ψ?]ϕ ↔ (ψ → ϕ) (P6) ϕ ∧ [α][α∗]ϕ ↔ [α∗]ϕ (P7) ϕ ∧ [α∗](ϕ → [α]ϕ) → [α∗]ϕ (aksjomat indukcji) Regu ly dowodzenia (MP) ϕ ϕ → ψ ψ (GEN) ϕ [α]ϕ Regu la (GEN) nazywana jest regu l ,a modalnej generalizacji. Je´sli ϕ daje si ,e wyprowadzi´c w powy˙zszym systemie poszerzonym o dodanie nowych aksjomat´ow ze zbioru Σ, to b ,edziemy to zapisywa´c przez Σ ⊢ ϕ. Jak zwykle piszemy ⊢ ϕ, gdy Σ jest zbiorem pustym. Fakt, ˙ze wszystkie aksjomaty s ,a tautologiami PDL wynika z Sekcji 10.2. Pozostawimy Czytelnikowi sprawdzenie, ˙ze powy˙zsze regu ly zachowuj ,a w lasno´s´c bycia tautologi ,a. Tak 76 wi ,ec ka˙zde twierdzenie powy˙zszego systemu jest tautologi ,a. Naszkicujemy dow´od twierdze- nia odwrotnego, czyli tzw. twierdzenia o pe lno´sci dla PDL. Przypomnijmy, ˙ze zbi´or formu l Σ jest sprzeczny, gdy Σ ⊢ ⊥. W przeciwnym przypadku m´owimy, ˙ze Σ jest niesprzeczny. W poni˙zszym lemacie zebrane s ,a podstawowe w lasno´sci zbior´ow niesprzecznych potrzebne do dowodu twierdzenia o pe lno´sci. Lemat 10.15 Niech Σ b,edzie zbiorem formu l PDL. W´owczas (i) Σ jest niesprzeczny wtedy i tylko wtedy, gdy Σ ∪ {ϕ} jest niesprzeczny lub Σ ∪ {¬ϕ} jest niesprzeczny; (ii) je´sli Σ jest niesprzeczny, to Σ jest zawarty w maksymalnym niesprzecznym zbiorze for- mu l. Ponadto, je´sli Σ jest maksymalnym niesprzecznym zbiorem formu l, to (iii) Σ zawiera wszystkie twierdzenia PDL; (iv) je´sli ϕ ∈ Σ oraz ϕ → ψ ∈ Σ, to ψ ∈ Σ; (v) ϕ ∨ ψ ∈ Σ wtedy i tylko wtedy, gdy ϕ ∈ Σ lub ψ ∈ Σ; (vi) ϕ ∧ ψ ∈ Σ wtedy i tylko wtedy, gdy ϕ ∈ Σ oraz ψ ∈ Σ; (vii) ϕ ∈ Σ wtedy i tylko wtedy, gdy ¬ϕ ̸∈ Σ; (viii) ⊥ ̸∈ Σ. Z powy˙zszego lematu natychmiast dostajemy nast ,epuj ,ac ,a w lasno´s´c. Lemat 10.16 Niech Σ oraz Γ b,ed ,a maksymalnymi niesprzecznymi zbiorami formu l oraz niech α b,edzie dowolnym programem. Nast ,epuj ,ace dwa warunki s ,a r´ownowa˙zne: (a) Dla dowolnej formu ly ψ, je´sli ψ ∈ Γ, to <α>ψ ∈ Σ. (b) Dla dowolnej formu ly ψ, je´sli [α]ψ ∈ Σ, to ψ ∈ Γ. Struktura, kt´or ,a za chwil ,e zbudujemy przy u˙zyciu maksymalnych niesprzecznych zbior´ow for- mu l nie b ,edzie struktur ,a Kripkego z tego wzgl ,edu, ˙ze znaczeniem programu α∗ nie b ,edzie mu- sia lo by´c domkni ,ecie przechodnie i zwrotne relacji wyznaczonej przez α. Spe lnione b ,ed ,a nieco s labsze w lasno´sci, wystarczaj ,ace jednak do przeprowadzenia dowodu twierdzenia o pe lno´sci. Deﬁnicja 10.17 Niestandardow ,a struktur ,a Kripkego nazwiemy ka˙zd ,a struktur ,e N = (N, mN) spe lniaj ,ac ,a wszystkie warunki struktury Kripkego podane w deﬁnicjach 10.2 oraz 10.3 za wy- j ,atkiem warunku (14). Zamiast tego warunku ˙z ,adamy, aby mN(α∗) by lo relacj ,a zwrotn ,a 77 i przechodni ,a, zawiera lo relacj ,e mN(α) oraz spe lnia lo aksjomaty (P6) i (P7). Tzn. zamiast warunku mN(α∗) := ⋃ n≥0 mN(α) n, (15) ˙z ,adamy, aby dla ka˙zdego programu α, relacja mN(α∗) by la zwrotna, przechodnia, zawiera la mN(α) oraz spe lnia la nast ,epuj ,ace dwa warunki dla dowolnej formu ly ϕ mN([α∗]ϕ) = mN(ϕ ∧ [α ; α∗]ϕ) (16) mN([α∗]ϕ) = mN(ϕ ∧ [α∗](ϕ → [α]ϕ)). (17) Wracamy teraz do konstrukcji struktury z maksymalnych niesprzecznych zbior´ow formu l. Zdeﬁniujemy niestandardow ,a struktur ,e Kripkego N = (N, mN) nast ,epuj ,aco: Elementami zbioru N s ,a maksymalne niesprzeczne zbiory formu l PDL. Dalej: mN(ϕ) := {s | ϕ ∈ s} mN(α) := {⟨s, t⟩ | dla wszystkich ϕ, je´sli ϕ ∈ t, to <α>ϕ ∈ s} = {⟨s, t⟩ | dla wszystkich ϕ, je´sli [α]ϕ ∈ s, to ϕ ∈ t}. Z Lematu 10.16 wynika, ˙ze obydwie deﬁnicje mN(α) s ,a r´ownowa˙zne. Dow´od nastepuj ,acego twierdzenia pozostawimy Czytelnikowi. Twierdzenie 10.18 Struktura N jest niestandardow ,a struktur ,a Kripkego. Dow´od: Fakt, ˙ze N spe lnia w lasno´sci (16) oraz (17) wynika natychmiast z Lematu 10.15(iii) oraz z aksjomat´ow (P6) i (P7). Sprawdzenie pozosta lych warunk´ow pozostawimy Czytel- nikowi jako ´cwiczenie. Istotn ,a cech ,a niestandardowych struktur Kripkego jest to, ˙ze daje si ,e przenie´s´c na nie lemat o ﬁltracji (Lemat 10.13). Lemat 10.19 (o ﬁltracji dla niestandardowych struktur Kripkego) Niech N b,edzie niestandardow ,a struktur ,a Kripkego i niech u, v b,ed ,a stanami w N. (i) Dla dowolnej formu ly ψ ∈ FL(ϕ), mamy u ∈ mN(ψ) ⇐⇒ [u] ∈ mN/FL(ϕ)(ψ). (ii) Dla dowolnej formu ly [α]ψ ∈ FL(ϕ) zachodzi (a) je´sli ⟨u, v⟩ ∈ mN(α),to ⟨[u], [v]⟩ ∈ mN/FL(ϕ)(α); (b) je´sli ⟨[u], [v]⟩ ∈ mN/FL(ϕ)(α) oraz u ∈ mN([α]ψ), to v ∈ mN(ψ). Dow´od: Szczeg´o ly dowodu tego lematu pomijamy, zach ,ecaj ,ac jednocze´snie Czytelnika do spr´obowania w lasnych si l. R´o˙znica w dowodzie tego lematu w stosunku do dowodu Lematu 10.13 polega na tym, ˙ze w dowodze kroku indukcyjnego dla cz ,e´sci (ii) dla przy- padku, gdy α jest programem postaci β∗ wykorzystujemy jedynie w lasno´sci (16) oraz (17), zamiast (15). Mo˙zemy ju˙z teraz zako´nczy´c dow´od twierdzenia o pe lno´sci. 78 Twierdzenie 10.20 (Pe lno´s´c dla PDL) Ka˙zda tautologia PDL jest twierdzeniem systemu: dla dowolnej formu ly ϕ, je´sli |= ϕ, to ⊢ ϕ. Dow´od: Rozumujemy przez sprzeczno´s´c. Je´sli ̸⊢ ϕ, to {¬ϕ} jest zbiorem niesprzecznym. Zatem, na mocy Lematu 10.15(ii) istnieje maksymalny nesprzeczny zbi´or u formu l PDL zawie- raj ,acy ¬ϕ. Na mocy lematu o ﬁltracji dla niestandardowych struktur Kripkego (Lemat 10.19) stwierdzamy, ˙ze ¬ϕ jest spe lniona w stanie [u] sko´nczonej struktury N/FL(ϕ). Latwo jest za- uwa˙zy´c, ˙ze sko´nczona niestandardowa struktura Kripkego jest zwyk l ,a struktur ,a Kripkego (tzn. tak ,a, w kt´orej zachodzi (15)). Tak wi ,ec ϕ nie jest tautologi ,a. To ko´nczy dow´od twierdzenia o pe lno´sci. ´Cwiczenia 1. Uzupe lni´c brakuj ,ace dowody w tej cz ,e´sci. 2. Pokaza´c, ˙ze dla PDL nie zachodzi twierdzenie o dedukcji. 3. Rozszerzmy zbi´or program´ow poprzez dodanie sp´ojnika programotw´orczego ∩, interpretowanego w strukturach Kripkego jako przeci ,ecie teoriomnogo´sciowe relacji. Niech PDL∩ oznacza logik ,e zdaniow ,a dla tak poszerzonych program´ow. Pokaza´c, ˙ze PDL∩ nie ma w lasno´sci ma lego modelu, tzn. ˙ze istnieje spe lnialna formu la, kt´ora nie jest spe lniona w ˙zadnej sko´nczonej strukturze Kripkego. 4. Udowodni´c, ˙ze spe lnialno´s´c formu l logiki PDL∩ jest nierozstrzygalna. Wskaz´owka: Zakodowa´c problem ” domina” (pokrycia p laszczyzny p lytkami). 79 11 Logika intuicjonistyczna Logika klasyczna oparta jest na poj ,eciu warto´sci logicznej zdania. Poprawnie zbudowane i jednoznaczne stwierdzenie jest w tej logice klasyﬁkowane jako ” prawdziwe” lub ” fa lszywe”. Warto´s´c logiczna zdania z lo˙zonego (np. implikacji) jest za´s ustalana na podstawie warto´sci jego sk ladowych (niezale˙znie od ich faktycznej tre´sci). W wi ,ekszo´sci przypadk´ow takie post ,e- powanie jest naturalne i wygodne. Ale nie zawsze. Przypomnijmy na przyk lad, ˙ze klasyczna materialna implikacja nie zawsze odpowiada jakiejkolwiek faktycznej zale˙zno´sci pomi ,edzy przes lank ,a i konkluzj ,a (Rozdzia l 3.1). Inn ,a konsekwencj ,a dwuwarto´sciowo´sci logiki klasy- cznej jest prawo wy l ,aczonego ´srodka. Akceptujemy alternatyw ,e p ∨ ¬p, niezale˙znie od tego czy zdanie p jest faktycznie prawdziwe czy fa lszywe, a nawet nie wiedz ,ac, co dok ladnie to zdanie wyra˙za. Zilustrujmy to na przyk ladzie: Fakt 11.1 Istniej ,a takie liczby niewymierne x i y, ˙ze xy jest liczb ,a wymiern ,a. Dow´od: Je´sli √2 √2 jest wymierne, to mo˙zna przyj ,a´c x = y = √2, w przeciwnym przy- padku niech x = √2 √2 i y = √2. Powy˙zszy dow´od, przy ca lej swojej prostocie i elegancji, ma pewn ,a oczywist ,a wad ,e: nadal nie wiemy, jakie liczby naprawd ,e spe lniaj ,a ˙z ,adany warunek. A oto inny dow´od Faktu 11.1. Dow´od 2: Dla x = √2 oraz y = 2 log2 3 mamy xy = 3. M´owimy, ˙ze drugi dow´od, w odr´o˙znieniu od pierwszego, jest konstruktywny. Oczywi´scie, konstruktywny dow´od zawiera w sobie wi ,ecej przydatnej informacji ni˙z niekonstruktywny, ale z punktu widzenia logiki klasycznej, oba te dowody s ,a tak samo poprawne. Logika, dopuszczaj ,aca tylko wnioskowania o charakterze konstruktywnym, znana jest pod tradycyjn ,a, nieco myl ,ac ,a, nazw ,a logiki intuicjonistycznej . W tej logice nie przypisujemy zda- niom warto´sci logicznych. Nieformalne obja´snienie zasad logiki intuicjonistycznej pos luguje si ,e poj ,eciem konstrukcji. Zdanie jest uwa˙zane za prawdziwe, gdy mo˙zna poda´c jego konstrukcj ,e, tworzon ,a wed lug nast ,epuj ,acych zasad (od nazwisk Brouwera, Heytinga i Ko lmogorowa zwa- nych interpretacj ,a BHK ): • Konstrukcja dla ϕ ∧ ψ polega na podaniu konstrukcji dla ϕ i konstrukcji dla ψ; • Konstrukcja dla ϕ ∨ ψ polega na wskazaniu jednego ze sk ladnik´ow ϕ, ψ i podaniu kon- strukcji dla tego sk ladnika. • Konstrukcja dla implikacji ϕ → ψ to metoda (funkcja) przekszta lcaj ,aca ka˙zd ,a kon- strukcj ,e przes lanki ϕ w konstrukcj ,e dla konkluzji ψ. • Nie ma konstrukcji dla fa lszu ⊥. • Konstrukcja dla ∀x ϕ(x) to metoda, kt´ora ka˙zdej potencjalnej warto´sci a zmiennej x przypisuje konstrukcj ,e dla ϕ(a). 80 • Konstrukcja dla ∃x ϕ(x) polega na wskazaniu pewnej warto´sci a zmiennej x, oraz kon- strukcji dla ϕ(a). Negacja intuicjonistyczna ¬ϕ uto˙zsamiana jest z implikacj ,a ϕ → ⊥. A zatem • Konstrukcja dla ¬ϕ to metoda obracaj ,aca ka˙zd ,a ewentualn ,a konstrukcj ,e ϕ w absurd ( ”rzecz, kt´orej nie ma”). Nie od rzeczy jest tu nastepuj ,aca uwaga: o konstrukcji dla ϕ → ψ mo˙zna my´sle´c jak o funkcji typu ϕ → ψ, bo przecie˙z konstrukcjom dla ϕ (obiektom ” typu ϕ”) przypisuje ona konstrukcje dla ψ, czyli obiekty ” typu ψ”. Za chwil ,e wr´ocimy do tej analogii. Przyk lad 11.2 Konstrukcj ,e dla formu ly p → ¬¬p mo˙zemy zapisa´c tak: Przypu´s´cmy, ˙ze dana jest konstrukcja C dla przes lanki p. Wtedy konstrukcja dla konkluzji ¬¬p (czyli dla (p → ⊥) → ⊥) jest nast ,epuj ,aca: dan ,a konstrukcj ,e dla formu ly p → ⊥ nale˙zy zastosowa´c do C. Pr´oba podania konstrukcji dla implikacji odwrotnej ¬¬p → p natraﬁa jednak na nieprzezwy- ci ,e˙zaln ,a trudno´s´c. Aby wykorzysta´c dan ,a konstrukcj ,e dla (p → ⊥) → ⊥, musieliby´smy mie´c konstrukcj ,e dla p → ⊥, a skoro jej nie mamy, to za lo˙zenie jest bezu˙zyteczne. Niemo˙zliwe jest te˙z wskazanie konstrukcji dla schematu p ∨ ¬p, nie znaj ,ac p nie mo˙zemy bowiem wskaza´c ˙zadnego z cz lon´ow alternatywy. Podobnie b ,edzie na przyk lad z implikacj ,a ∀x(q ∨ p(x)) → q ∨ ∀x p(x). Konstrukcja przes lanki dla ka˙zdej warto´sci a zmiennej x generuje albo konstrukcj ,e dla q albo konstrukcj ,e dla p(a). Ale skorzysta´c z niej mo˙zna tylko dla konkretnych warto´sci a. Tymczasem, aby poda´c konstrukcj ,e dla konkluzji, musieliby´smy umie´c podj ,a´c krytyczn ,a decyzj ,e ” w ciemno”. Proponujemy teraz Czytelnikowi wykonanie ´Cwiczenia 2, a nastepnie pr´ob ,e znalezienia kon- strukcji dla formu l z ´Cwiczenia 5. 11.1 Intuicjonistyczny rachunek zda´n Obja´snienia odwo luj ,ace si ,e do poj ,ecia konstrukcji s ,a tylko nieformalne. ´Scis l ,a deﬁnicj ,e logiki intuicjonistycznej mo˙ze stanowi´c system wnioskowania, na przyk lad w stylu naturalnej de- dukcji. Dla uproszczenia ograniczymy si ,e tutaj do intuicjonistycznego rachunku zda´n. System naturalnej dedukcji dla takiego rachunku, przedstawiony poni˙zej mo˙zna uwa˙za´c za u´sci´slenie interpretacji BHK. Otrzymujemy go z systemu klasycznego (Sekcja 5.2) przez odrzucenie regu ly PS.14 14Robimy to, zauwa˙zaj ,ac z pewn ,a satysfakcj ,a, ˙ze w la´snie ta regu la ” nie pasuje” do pozosta lych, bo odbiega swoj ,a form ,a od zasady wprowadzania i eliminacji sp´ojnik´ow. 81 (→ -intro) ∆, ϕ ⊢ ψ ∆ ⊢ ϕ → ψ (→ -elim) ∆ ⊢ ϕ → ψ ∆ ⊢ ϕ ∆ ⊢ ψ (∧-intro) ∆ ⊢ ϕ ∆ ⊢ ψ ∆ ⊢ ϕ ∧ ψ (∧-elim) ∆ ⊢ ϕ ∧ ψ ∆ ⊢ ϕ (∧-elim) ∆ ⊢ ϕ ∧ ψ ∆ ⊢ ψ (∨-intro) ∆ ⊢ ϕ ∆ ⊢ ϕ ∨ ψ (∨-intro) ∆ ⊢ ψ ∆ ⊢ ϕ ∨ ψ (∨-elim) ∆ ⊢ ϕ ∨ ψ ∆, ϕ ⊢ ϑ ∆, ψ ⊢ ϑ ∆ ⊢ ϑ Ciekawy jest spos´ob w jaki z klasycznego rachunku sekwent´ow (Sekcja 5.3) mo˙zna otrzyma´c system dla logiki intuicjonistycznej. Ot´o˙z nale˙zy w tym celu ograniczy´c liczb ,e formu l wys- t ,epuj ,acych po prawej stronie sekwent´ow do (co najwy˙zej) jednej, przy czym sekwent Γ ⊢ z pust ,a praw ,a stron ,a mo˙zna uto˙zsamia´c z sekwentem Γ ⊢ ⊥. Regu la (∨-prawa) traci wtedy sens i trzeba j ,a zast ,api´c przez dwie regu ly podobne do tych z ´Cwiczenia 11 w Rozdziale 5. Pozosta le regu ly pozostaj ,a w zasadzie bez zmian. (→ -lewa) ∆ ⊢ ϕ ∆, ψ ⊢ ϑ ∆, ϕ → ψ ⊢ ϑ (→ -prawa) ∆, ϕ ⊢ ψ ∆ ⊢ ϕ → ψ (∧-lewa) ∆, ϕ, ψ ⊢ ϑ ∆, ϕ ∧ ψ ⊢ ϑ (∧-prawa) ∆ ⊢ ϕ ∆ ⊢ ψ ∆ ⊢ ϕ ∧ ψ (∨-lewa) ∆, ϕ ⊢ ϑ ∆, ψ ⊢ ϑ ∆, ϕ ∨ ψ ⊢ ϑ ∆ ⊢ ϕ ∆ ⊢ ϕ ∨ ψ (∨-prawa) ∆ ⊢ ψ ∆ ⊢ ϕ ∨ ψ Intuicjonistyczny system dowodzenia w stylu Hilberta dla logiki zdaniowej, w kt´orej wyst ,epuje tylko implikacja i fa lsz, a negacja ¬ϕ jest zdeﬁniowana jako ϕ → ⊥, otrzymamy bardzo latwo: wystarczy usun ,a´c aksjomat ¬¬ϕ → ϕ z systemu klasycznego i doda´c jeden nowy: (A3i) ⊥ → ϕ. Ale aksjomaty (B1)–(B4) z Rozdzia lu 5 do logiki intuicjonistycznej nie pasuj ,a, bo nie zgadzaj ,a si ,e z interpretacj ,a BHK. Trzeba wi ,ec przyj ,a´c aksjomaty z ´Cwiczenia 2 do Rozdzia lu 6, kt´ore zamiast deﬁniowa´c koniunkcj ,e i alternatyw ,e, wyra˙zaj ,a ich najwa˙zniejsze w lasno´sci. (D1) ϕ → ϕ ∨ ψ; (D2) ψ → ϕ ∨ ψ; (D3) (ϕ → ϑ) ∧ (ψ → ϑ) → (ϕ ∨ ψ → ϑ); (C1) ϕ ∧ ψ → ϕ; (C2) ϕ ∧ ψ → ψ; (C3) (ϑ → ϕ) ∧ (ϑ → ψ) → (ϑ → ϕ ∧ ψ). 82 Fakt 11.3 Opisane powy˙zej intuicjonistyczne systemy dowodzenia (naturalna dedukcja, ra- chunek sekwent´ow oraz system Hilberta) s ,a sobie r´ownowa˙zne: formu la ϕ jest twierdzeniem dowolnego z tych system´ow wtedy i tylko wtedy, gdy jest twierdzeniem ka˙zdego z pozosta lych. Dow´od: ´Cwiczenie. Semantyka topologiczna Jak ju˙z powiedzieli´smy, logika intuicjonistyczna r´o˙zni si ,e od klasycznej tym, ˙ze nie odwo luje si ,e do poj ,ecia warto´sci logicznej, a formalna deﬁnicja jest syntaktyczna (przez system do- wodzenia) a nie semantyczna. Okazuje si ,e jednak, ˙ze intuicjonistyczny rachunek zda´n ma ciekaw ,a semantyk ,e topologiczn ,a. Stanowi ona uog´olnienie semantyki klasycznego rachunku zda´n z ´Cwiczenia 7 do Rozdzia lu 1. R´o˙znica polega na tym, ˙ze znaczeniami formu l mog ,a by´c jedynie zbiory otwarte. Deﬁnicja 11.4 Niech O b ,edzie rodzin ,a wszystkich podzbior´ow otwartych zbioru liczb rzeczy- wistych R. Dla A ⊆ R, przez Int(A) oznaczymy wn ,etrze zbioru A, tj. najwi ,ekszy zbi´or otwarty zawarty w A. Warto´sciowaniem w zbiorze O nazwiemy dowoln ,a funkcj ,e ϱ : ZZ → O. Dla danego ϱ, mo˙zemy ka˙zdej formule zdaniowej przypisa´c warto´s´c w O: • [[⊥]]ϱ = ∅ oraz [[⊤]]ϱ = R; • [[p]]ϱ = ϱ(p), gdy p jest symbolem zdaniowym; • [[¬ϕ]]ϱ = Int(R − [[ϕ]]ϱ); • [[ϕ ∨ ψ]]ϱ = [[ϕ]]ϱ ∪ [[ψ]]ϱ; • [[ϕ ∧ ψ]]ϱ = [[ϕ]]ϱ ∩ [[ψ]]ϱ; • [[ϕ → ψ]]ϱ = Int((R − [[ϕ]]ϱ) ∪ [[ψ]]ϱ). Powiemy, ˙ze formu la ϕ jest prawdziwa w R, gdy jej warto´sci ,a jest ca ly zbi´or R. Twierdzenie 11.5 Formu la rachunku zda´n jest intuicjonistycznym twierdzeniem, wtedy i tyl- ko wtedy, gdy jest prawdziwa w R. Uwaga: Implikacja ” tylko wtedy” w Twierdzeniu 11.5 zachodzi nie tylko dla liczb rzeczy- wistych, ale tak˙ze dla dowolnej przestrzeni topologicznej. Przyk lad 11.6 Aby si ,e przekona´c, ˙ze prawo wy l ,aczonego ´srodka nie jest twierdzeniem logiki intuicjonistycznej, przypu´s´cmy, ˙ze ϱ(p) = (0, ∞). Wtedy [[p ∨ ¬p]]ϱ = R − {0} ̸= R. Je´sli za´s ϱ(p) = R − {1} to tak˙ze [[¬¬p → p]]ϱ = R − {1}, wi ,ec i formu la ¬¬p → p nie jest intuicjonistycznym twierdzeniem. 83 Normalizacja dowod´ow Wr´o´cmy teraz do systemu naturalnej dedukcji dla intuicjonistycznego rachunku zda´n. Dla uproszczenia ograniczmy si ,e na razie do tzw. minimimalnej logiki implikacyjnej, tj. do formu l zbudowanych z pomoc ,a samej implikacji. Przypu´s´cmy, ˙ze mamy taki dow´od: (1) · · · Γ ⊢ ϕ (2) · · · Γ, ϕ ⊢ ψ (→I) Γ ⊢ ϕ → ψ (→E) Γ ⊢ ψ W tym dowodzie najpierw wprowadzamy implikacj ,e, a zaraz potem j ,a eliminujemy. Mo˙zna jednak zrobi´c inaczej. Tam gdzie w cz ,e´sci (2) dowodu u˙zywane jest za lo˙zenie ϕ mo˙zna po prostu wstawi´c ca l ,a cz ,e´s´c (1). Chocia˙z rozmiary nowego dowodu mog ,a by´c wi ,eksze (za lo˙ze- nie ϕ mog lo by´c u˙zywane kilkakrotnie) to jednak jego struktura b ,edzie prostsza. Docelowo mo˙zemy uzyska´c dow´od, w kt´orym takie sytuacje jak na rysunku w og´ole nie wyst ,epuj ,a. Taki dow´od nazwiemy dowodem normalnym. Proces normalizacji dowodu jest podobny do procesu eliminacji ci ,ecia, a dowody normalne maj ,a podobne zalety jak dowody bez ci ,ecia. W szczeg´olno´sci, wyszukiwanie dowodu dla danej formu ly staje si ,e latwiejsze, je´sli mo˙zna si ,e ograniczy´c do dowod´ow normalnych. 11.2 Lambda-termy z typami Normalizacja dowod´ow ma bliski zwi ,azek z rachunkiem lambda. Przypomnijmy tu podsta- wowe deﬁnicje. Deﬁnicja 11.7 Przyjmijmy, ˙ze mamy pewien przeliczalny niesko´nczony zbi´or zmiennych przedmiotowych. Termy rachunku lambda (lambda-termy) okre´slamy przez indukcj ,e: • Zmienne przedmiotowe s ,a termami. • Je´sli M i N s ,a termami, to (M N ) te˙z. • Je´sli M jest termem i x jest zmienn ,a, to (λxM ) jest termem. Wyra˙zenie postaci (M N ) nazywamy aplikacj ,a, a wyra˙zenie postaci (λxM ) to λ-abstrakcja. Stosujemy nastepuj ,ace konwencje notacyjne: – opuszczamy zewn ,etrzne nawiasy; – aplikacja wi ,a˙ze w lewo, tj. M N P oznacza (M N )P ; – piszemy λx1 . . . xn.M zamiast λx1(. . . (λxnM ) · · · ). Uwaga: kropka w wyra˙zeniu λx1 . . . xn.M zast ,epuje lewy nawias, kt´orego zasi ,eg rozci ,aga si ,e do ko´nca wyra˙zenia M . Zwyczajowo u˙zywa si ,e te˙z notacji λx.M . 84 Operator lambda-abstrakcji λ, podobnie jak kwantyﬁkator, wi ,a˙ze zmienne, tj. wszystkie wy- st ,apienia x w wyra˙zeniu λxM uwa˙za si ,e za zwi ,azane. Zazwyczaj lambda-termy rozwa˙za si ,e z dok ladno´sci ,a do alfa-konwersji, tj. uto˙zsamia si ,e termy r´o˙zni ,ace si ,e tylko zmiennymi zwi ,azanymi. Pominiemy tu ´scis l ,a deﬁnicj ,e podstawienia M [N/x], kt´ora jest podobna do deﬁnicji stosowanej dla formu l z kwantyﬁkatorami. Deﬁnicja 11.8 Relacja beta-redukcji to najmniejsza relacja w zbiorze lambda-term´ow, spe l- niaj ,aca warunki: – (λxP )Q →β P [Q/x]; – je´sli M →β M ′, to M N →β M ′N , N M →β N M ′ oraz λxM →β λxM ′. Inaczej m´owi ,ac, M →β M ′ zachodzi gdy podterm termu M postaci (λxP )Q, czyli redeks, zostaje zast ,apiony w M ′ przez wynik podstawienia P [Q/x]. Znakiem ↠β oznaczamy domkni ,e- cie przechodnio-zwrotne relacji →β. M´owimy, ˙ze term jest w postaci normalnej , gdy nie zawiera ˙zadnego redeksu, tj. nie redukuje si ,e. Zauwa˙zmy tu analogi ,e pomi ,edzy redukcj ,a (λxP )Q →β P [Q/x] i wywo laniem procedury P , przy kt´orym na miejsce parametru formalnego x podstawiony zostaje parametr aktualny Q. Deﬁnicja 11.9 Przyjmijmy pewien zbi´or typ´ow atomowych, kt´ory oznaczymy przez ZZ (zbie˙z- no´s´c oznacze´n jest nieprzypadkowa). Powiemy teraz, ˙ze • Typy atomowe s ,a typami; • Je´sli σ i τ s ,a typami, to σ → τ jest typem. A zatem nasze typy to po prostu formu ly zdaniowe zbudowane przy pomocy samej implikacji. Stosujemy tak ,a konwencj ,e, ˙ze strza lka jest l ,aczna w prawo, tj. napis σ → τ → ρ oznacza σ → (τ → ρ). Przez otoczenie typowe rozumiemy zbi´or deklaracji postaci (x : τ ), gdzie x jest zmienn ,a (przedmiotow ,a) a τ jest typem. ˙Z ,adamy przy tym, aby otoczenie by lo funkcj ,a, tj. aby jedna zmienna nie by la deklarowana dwa razy. Przez Γ(x:σ) oznaczamy otoczenie okre´slone tak: Γ(x:σ)(y) = { Γ(y), je´sli y ̸= x; σ, w przeciwnym przypadku. Lambda-termom mo˙zna teraz przypisywa´c typy. Napis M : τ stwierdza, ˙ze M jest termem typu τ . Interpretacja operatora → jest taka: Term typu τ → σ zaaplikowany do argumentu typu τ daje wynik typu σ. Poniewa˙z typ termu mo˙ze zale˙ze´c od typ´ow jego zmiennych wolnych, wi ,ec nasz system przypisania typ´ow wyprowadza asercje postaci Γ ⊢ M : τ , gdzie Γ jest otoczeniem typowym. 85 Aksjomat: Γ(x : σ) ⊢ x : σ Regu ly: Γ(x:σ) ⊢ M : τ (Abs) Γ ⊢ (λx M ) : σ → τ Γ ⊢ M : σ → τ Γ ⊢ N : σ (App) (M N ) : τ Wa˙zne, ˙ze takie przypisanie typu zachowuje si ,e przy beta-redukcji. Fakt 11.10 Je´sli Γ ⊢ M : τ oraz M →β N , to Γ ⊢ N : τ . 11.3 Izomorﬁzm Curry’ego-Howarda (formu ly-typy) Uderzaj ,ace podobie´nstwo pomi ,edzy regu lami przypisania typ´ow i regu lami dowodzenia w na- turalnej dedukcji bywa nazywane izomorﬁzmem Curry’ego-Howarda. Lambda-termy z typami prostymi, to w istocie to samo co dowody w logice minimalnej. Bez wchodzenia w szczeg´o ly sformu lujmy tu najwa˙zniejsz ,a konsekwencj ,e tego izomorﬁzmu. Fakt 11.11 Formu la implikacyjna ϕ jest twierdzeniem intuicjonistycznym wtedy i tylko wte- dy, gdy istnieje zamkni ,ety (tj. bez zmiennych wolnych) lambda-term typu ϕ. Zwi ,azek pomi ,edzy dowodami i lambda-termami staje si ,e jeszcze bardziej interesuj ,acy, gdy zauwa˙zymy podobie´nstwo dowodu ze strony 84 do beta-redeksu postaci (λxP )Q: (1) · · · Γ ⊢ Q : ϕ (2) · · · Γ, x:ϕ ⊢ P : ψ (Abs) Γ ⊢ λx P : ϕ → ψ (App) Γ ⊢ (λx P )Q : ψ Normalizacja tamtego dowodu daje w wyniku dow´od, kt´orego odpowiednikiem jest term P [Q/x]. Ewaluacja lambda-term´ow (beta-redukcja) ´sci´sle wi ,ec reprezentuje zjawisko norma- lizacji dowod´ow. W szczeg´olno´sci okazuje si ,e, ˙ze dowodom normalnym odpowiadaj ,a termy w postaci normalnej. Ma to niebagatelne znaczenie w zwi ,azku z nast ,epuj ,acym twierdzeniem, kt´orego (nietrywialny) dow´od pomijamy. Twierdzenie 11.12 Ka˙zdy term z typami prostymi mo˙zna zredukowa´c do postaci normalnej. Wniosek z Twierdze´n 11.10–11.12 jest taki: aby ustali´c czy formu la ϕ ma dow´od, nale˙zy zbada´c, czy istnieje zamkni ,ety term typu ϕ w postaci normalnej. W ten spos´ob mo˙zna np. rozstrzygn ,a´c, kt´ore z formu l w ´Cwiczeniu 6 s ,a twierdzeniami intuicjonistycznymi. Technika wyszukiwania dowodu danej formu ly za pomoc ,a konstrukcji odpowiedniego lambda- termu daje si ,e uog´olni´c dla j ,ezyk´ow znacznie bogatszych ni˙z zdaniowa logika implikacyjna i znajduje zastosowanie w systemach wspomagaj ,acych dowodzenie, takich jak system Coq. 86 Przyk lad 11.13 W my´sl interpretacji BHK, konstrukcj ,a (dowodem) koniunkcji ϕ ∧ ψ jest para konstrukcji, jedna ” typu ϕ” a druga ” typu ψ”. W naturalnej dedukcji, regu la wprowadza- nia koniunkcji odpowiada tworzeniu takiej pary, a regu la eliminacji koniunkcji reprezentuje rzutowanie na jedn ,a ze wsp´o lrz ,ednych. A wi ,ec koniunkcja tak naprawd ,e to samo co produkt kartezja´nski. Je´sli rozszerzymy rachunek lambda o pary (rekordy) i rzutowania, b ,edziemy mogli napisa´c takie regu ly przypisania typ´ow zawieraj ,acych znak koniunkcji. Γ ⊢ M : ϕ Γ ⊢ N : ψ Γ ⊢ ⟨M, N ⟩ : ϕ ∧ ψ Γ ⊢ M : ϕ ∧ ψ Γ ⊢ π1(M ) : ϕ Γ ⊢ M : ϕ ∧ ψ Γ ⊢ π2(M ) : ψ ´Cwiczenia 1. Twierdzenie o niedeﬁniowalno´sci dobrego porz ,adku w logice pierwszego rz ,edu udowodnili´smy dwukrotnie. Po raz pierwszy by lo to ´Cwiczenie 1 do Rozdzia lu 4, po raz drugi Twierdzenie 8.8. Kt´ory z rozwa˙zanych dowod´ow dostarcza wi ,ecej informacji i dlaczego? 2. Poda´c konstrukcje dla nast ,epuj ,acych formu l: (a) ⊥ → p; (b) (p → q → r) → (p → q) → p → r; (c) ¬¬¬p → ¬p; (d) (p → q) → (¬q → ¬p); (e) ¬(p ∨ q) ↔ (¬p ∧ ¬q); (f) ¬¬(p ∨ ¬p); (g) (p → ¬q) → (¬p → ¬q) → ¬q. 3. Udowodni´c, ˙ze formu ly z ´Cwiczenia 2 s ,a twierdzeniami intuicjonistycznymi. 4. Udowodni´c cz ,e´s´c ” tylko wtedy” Twierdzenia 11.5. 5. Udowodni´c, ˙ze nast ,epuj ,ace klasyczne tautologie nie s ,a twierdzeniami intuicjonistycznymi, odwo lu- j ,ac si ,e do semantyki topologicznej. (a) ((p → q) → p) → p; (b) ¬(p ∧ q) ↔ (¬p ∨ ¬q); (c) p ∨ (p → q); (d) ((p ↔ q) ↔ r) ↔ (p ↔ (q ↔ r)); (e) (¬¬p → p) → p ∨ ¬p; (f) (p → q) ↔ (¬p ∨ q); (g) (p → q) → (¬p → q) → q. 6. Czy istniej ,a zamkni ,ete lambda-termy nast ,epuj ,acych typ´ow? (a) (p → q → r) → (p → q) → p → r; (b) ((p → q) → p) → p; (c) ((((p → q) → p) → p) → q) → q; (d) ((p → q) → r) → (p → r) → r; (e) ((((p → q) → r) → (p → r) → r) → q) → q. 87 12 Logika drugiego rz ,edu Sk ladni ,e logiki drugiego uzyskujemy przez rozszerzenie zbioru regu l sk ladniowych dla logiki pierwszego rz ,edu o kwantyﬁkatory wi ,a˙z ,ace symbole relacyjne. Z przyczyn technicznych tym razem wygodnie nam b ,edzie przyj ,a´c, ˙ze podstawowymi sp´ojnikami logicznymi s ,a ¬, ∨ i ∃. Deﬁnicja 12.1 Deﬁnicja formu l drugiego rz ,edu jest indukcyjna, podobnie jak analogiczna Deﬁnicja 2.5 dla logiki pierwszego rz ,edu. Jednak tym razem nie ustalamy sygnatury z g´ory. • Ka˙zda formu la atomowa nad sygnatur ,a Σ jest formu l ,a drugiego rz ,edu nad sygnatur ,a Σ. • Je´sli ϕ, ψ s ,a formu lami drugiego rz ,edu nad sygnatur ,a Σ, to ϕ ∨ ψ jest te˙z formu l ,a drugiego rz ,edu nad sygnatur ,a Σ. • Je´sli ϕ jest formu l ,a drugiego rz ,edu nad sygnatur ,a Σ, to ¬ϕ jest te˙z formu l ,a drugiego rz ,edu nad sygnatur ,a Σ. • Je´sli ϕ jest formu l ,a drugiego rz ,edu nad sygnatur ,a Σ a x ∈ X jest zmienn ,a indywiduow ,a, to ∃xϕ jest te˙z formu l ,a drugiego rz ,edu nad sygnatur ,a Σ. • je´sli ϕ jest formu l ,a drugiego rz ,edu nad sygnatur ,a Σ, a R jest symbolem relacji k-argu- mentowej z Σ, to ∃Rϕ jest formu l ,a drugiego rz ,edu nad sygnatur ,a Σ − {R}. Deﬁnicja semantyki jest te˙z podobna jak dla logiki pierwszego rz ,edu. • Znaczenie formu l atomowych jest identyczne jak w logice pierwszego rz ,edu. • (A, ϱ) |= ϕ ∨ ψ, gdy zachodzi (A, ϱ) |= ϕ lub zachodzi (A, ϱ) |= ψ. • (A, ϱ) |= ¬ϕ, gdy nie zachodzi (A, ϱ) |= ϕ. • (A, ϱ) |= ∃xϕ wtedy i tylko wtedy, gdy istnieje takie a ∈ A, ˙ze zachodzi (A, ϱa x) |= ϕ. • Je´sli A = ⟨A, R1, . . . , f1, . . . ⟩ jest struktur ,a sygnatury Σ − {R} oraz ϱ jest warto´s- ciowaniem w tej strukturze, to (A, ϱ) |= ∃Rϕ wtedy i tylko wtedy gdy istnieje struk- tura A′ nad sygnatur ,a Σ o postaci ⟨A, R, R1, . . . , f1 . . . ⟩ spe lniaj ,aca (A, ϱ) |= ϕ. Dualny kwantyﬁkator drugiego rz ,edu ∀ wprowadzamy jako skr´ot notacyjny: ∀Rϕ oznacza ¬∃R¬ϕ. 12.1 Nieaksjomatyzowalno´s´c logiki drugiego rz ,edu Sp´ojrzmy na nast ,epuj ,acy przyk lad zdania Ind nad sygnatur ,a arytmetyki: ∀R(R(0) ∧ ∀n(R(n) → R(s(n))) → ∀nR(n)). 88 Orzeka ono, ˙ze ka˙zda relacja jednoargumentowa (czy podzbi´or uniwersum), kt´ora zawiera 0 i jest zamkni ,eta ze wzgl ,edu na na operacj ,e nast ,epnika, zawiera wszystkie elementy uniwer- sum. Jest to wyra˙zona w j ,ezyku drugiego rz ,edu zasada indukcji matematycznej. Twierdzenie Dedekinda orzeka, ˙ze po do lo˙zeniu tego aksjomatu do zwyk lych aksjomat´ow arytmetyki Peano PA (z kt´orych mo˙zna wtedy usun ,a´c dotychczasowy schemat aksjomatu indukcji), otrzymu- jemy aksjomatyzacj ,e kategoryczn ,a, czyli tak ,a, kt´ora ma z dok ladno´sci ,a do izomorﬁzmu tylko jeden model N — ten standardowy. Zauwa˙zmy przy okazji, ˙ze przyk lad ten wskazuje, i˙z dla logiki drugiego rz ,edu nie zachodzi g´orne twierdzenie Skolema-L¨owenheima. Wracaj ,ac do poprzedniego przyk ladu, widzimy, ˙ze zbi´or wszystkich zda´n ϕ logiki pierwszego rz ,edu, dla kt´orych P A ∪ {Ind} |= ϕ, jest to˙zsamy z Th(N). Mo˙zemy teraz udowodni´c, ˙ze w odr´o˙znieniu od logiki pierwszego rz ,edu, Twierdzenie 12.2 Logika drugiego rz ,edu nie ma ˙zadnego pe lnego i poprawnego systemu dowodowego. Dow´od: Zbi´or konsekwencji semantycznych {ϕ | P A∪{Ind} |= ϕ} = Th(N) nie jest nawet rekurencyjnie przeliczalny, na mocy Wniosku 9.3. Tymczasem dla ka˙zdego poprawnego sys- temu dowodzenia X dla logiki drugiego rz ,edu, zbi´or formu l wyprowadzalnych z rekurencyjnego zbioru P A ∪ {Ind} jest rekurencyjnie przeliczalny. Widzimy teraz jasno, ˙ze logika drugiego rz ,edu jest niezwykle skomplikowana w badaniu, gdy˙z w la´sciwie ˙zadne z po˙zytecznych twierdze´n dotycz ,acych logiki pierwszego rz ,edu nie zachodzi dla logiki drugiego rz ,edu. Jedynym, co zostaje, to odpowiednia modyﬁkacja gier Ehren- feuchta i metoda Fra¨ıss´e. Jednak ich praktyczna u˙zyteczno´s´c jest r´ownie˙z znikoma wobec ich z lo˙zono´sci. Np. w grze musz ,a wyst ,epowa´c rundy, w kt´orych gracze wybieraj ,a i zaznaczaj ,a ca le relacje na uniwersum obu struktur. Jednak dla bardzo ograniczonych syntaktycznie frag- ment´ow logiki drugiego rz ,edu mo˙zliwym staje si ,e zapanowanie nad strategiami w odpowiada- j ,acych im uproszczonych wersjach gry. Tymi w la´snie metodami udowodniono kilka twierdze´n o niemo˙zno´sci zdeﬁniowania w r´o˙znych fragmentach logiki drugiego rz ,edu r´o˙znych konkret- nych w lasno´sci. W dalszym ci ,agu tego rozdzia lu dowiemy si ,e, jaki jest stopie´n trudno´sci pyta´n o wyra˙zalno´s´c b ,ad´z niewyra˙zalno´s´c r´o˙znych w lasno´sci w logice drugiego rz ,edu. 12.2 R´ownowa˙zno´s´c logiki MSO i automat´ow sko´nczonych W zastosowaniach cz ,esto spotyka si ,e r´o˙zne fragmenty logiki drugiego rz ,edu, kt´ora w ca lo´sci dla wielu zastosowa´n jest zbyt silna. W tym rozdziale b ,edziemy zajmowali si ,e monadyczn ,a logik ,a drugiego rz ,edu, kt´ora jest fragmentem logiki drugiego rz ,edu, powsta lym przez ograniczenie kwantyﬁkacji drugiego rz ,edu tylko do relacji jednoargumentowych (czyli zbior´ow). Na oz- naczenie tej logiki powszechnie stosuje si ,e skr´ot MSO (od Monadic Second Order). MSO jest logik ,a bardzo cz ,esto pojawiaj ,ac ,a si ,e w zwi ,azku z informatyk ,a. Tutaj zaprezentujemy klasyczny wynik, l ,acz ,acy t ,e logik ,e z teori ,a automat´ow sko´nczonych. 89 Niech Σn b ,edzie sygnatur ,a z lo˙zon ,a z symboli ≤, X1, . . . , Xn, w kt´orej wszystkie symbole relacyjne Xi s ,a jednoargumentowe. Deﬁnicja 12.3 Model sygnatury Σn nazwiemy modelem-s lowem gdy jego no´snikiem jest sko´nczony odcinek pocz ,atkowy zbioru liczb naturalnych a interpretacj ,a symbolu ≤ jest natu- ralny liniowy porz ,adek liczb. Zbi´or modeli-s l´ow nad Σn b ,edziemy oznacza´c Wn. Skorzystamy te˙z tutaj z naturalnej wzajemnie jednoznacznej odpowiednio´sci pomi ,edzy mo- delami-s lowami a niepustymi s lowami nad alfabetem An = {0, 1}n: s lowu w ∈ A+ n odpowiada model A(w) ∈ Wn o mocy r´ownej d lugo´sci w, a jego element k nale˙zy do interpretacji relacji Xi wtedy i tylko wtedy, gdy k-ta litera s lowa w jest ci ,agiem zerojedynkowym, kt´ory ma jedynk ,e na pozycji i. Odt ,ad b ,edziemy momentami umy´slnie zacierali rozr´o˙znienie pomi ,edzy s lowami a odpowiada- j ,acymi im modelami-s lowami. Zbi´or {A ∈ Wn | A |= ϕ} mo˙zna wi ,ec naturalnie uwa˙za´c za j ,ezyk s l´ow nad An. Sformu lowane przez nas twierdzenie stosuje si ,e wprost tylko do alfabet´ow o mocy postaci 2n. Poniewa˙z jednak ka˙zdy j ,ezyk regularny mo˙zna traktowa´c (po odpowiednim zakodowaniu) jako j ,ezyk nad takim w la´snie alfabetem, z kt´orego nie wszystkie litery s ,a wykorzystywane, ograniczenie to nie narusza og´olno´sci naszych rozwa˙za´n. Twierdzenie 12.4 (B¨uchi, Elgot) Dla ka˙zdego zdania ϕ monadycznej logiki drugiego rz ,e- du zbi´or {w ∈ A+ n | A(w) |= ϕ} jest regularny, oraz dla ka˙zdego j ,ezyka regularnego L nad An istnieje takie zdanie ϕ logiki MSO, ˙ze {w ∈ A + n | A(w) |= ϕ} = L − {ϵ}. Czasami tre´s´c tego twierdzenia wyra˙za si ,e sloganem MSO = Reg. W my´sl tego twierdzenia, MSO mo˙zna traktowa´c jako jeszcze jeden formalizm s lu˙z ,acy deﬁnio- waniu (niepustych) j ,ezyk´ow regularnych, opr´ocz powszechnie znanych wyra˙ze´n regularnych, automat´ow sko´nczonych i gramatyk regularnych. Dow´od: Zaczniemy od prostszej drugiej cz ,e´sci twierdzenia. Niech M = ⟨Q, An, q0, ∆, F ⟩ b ,edzie automatem sko´nczonym rozpoznaj ,acym L, gdzie Q to zbi´or stan´ow, q0 ∈ Q to stan pocz ,atkowy, F ⊆ Q to zbi´or stan´ow akceptuj ,acych a ∆ ⊆ Q × An × Q to relacja przej´scia. Niech Q = {q1, . . . , qℓ}. Chcemy wyrazi´c za pomoc ,a zdania MSO, ˙ze istnieje akceptuj ,ace obliczenie M na danym s lowie. Stanom M b ,ed ,a odpowiada ly dodatkowe symbole relacji jednoargumentowych Xn+1, . . . , Xn+ℓ. Pocz ,atkowo b ,edziemy wi ,ec mieli do czynienia z modelami-s lowami nad wi ,eksz ,a sygnatur ,a Σn+ℓ. Modele te maj ,a odpowiada´c obliczeniom M na w la´sciwym s lowie wej´sciowym. Formu la ϕ1 postaci ∀x( ⋀n<i̸=j≤n+ℓ ¬(Xi(x) ∧ Xj(x)) ∧ ⋁n+ℓ i=n+1 Xi(x)) m´owi o danym s lowie, ˙ze w ka˙zdym kroku obliczenia automat by l w jednym i tylko jednym stanie. Formu la ϕ2 postaci ∃x∀y(x ≤ y ∧ Xn+1(x)) m´owi, ˙ze w momencie rozpocz ,ecia obliczenia automat by l w stanie pocz ,atkowym. 90 Formu la ϕ3 postaci ∃x∀y(y ≤ x∧⋁qi∈F Xn+i(x)) m´owi, ˙ze w momencie zako´nczenia obliczenia automat by l w jednym ze stan´ow akceptuj ,acych. Formu la ϕ4 jest postaci ∀x∀y(¬∃z(x < z ∧ z < y) → ⋁⟨qi,⃗a,qk⟩∈∆ Xn+i(x) ∧ ψ⃗a(x) ∧ Xn+k(y)), gdzie ⃗a = a1 . . . an jest liter ,a z An, za´s ψ⃗a(x) jest formu l ,a ⋀{i | ai=1} Xi(x)∧⋀{i | ai=0} ¬Xi(x). Formu la ta m´owi, ˙ze dla ka˙zdych dw´och bezpo´srednio po sobie nast ,epuj ,acych pozycji w s lowie, przej´scie pomi ,edy nimi odby lo si ,e zgodnie z jedn ,a z mo˙zliwo´sci dost ,epnych w relacji przej´scia automatu M. Teraz zdanie ∃Xn+1 . . . Xn+ℓ(ϕ1 ∧ ϕ2 ∧ ϕ3 ∧ ϕ4) orzeka, ˙ze istnieje akceptuj ,ace obliczenie automatu M na danym s lowie. Przechodzimy teraz do dowodu pierwszej cz ,e´sci. Tym razem dla danego zdania MSO musimy skonstruowa´c automat sko´nczony, kt´ory akceptuje dok ladnie te s lowa nad An, w kt´orych to zdanie jest prawdziwe. W pierwszym kroku zast ,apimy MSO przez troch ,e inn ,a logik ,e, kt´or ,a nazwiemy MSO0. Poka- ˙zemy, ˙ze jej formu ly deﬁniuj ,a wszystkie j ,ezyki modeli-s l´ow, kt´ore mo˙zna zdeﬁniowa´c w MSO. Specyﬁczn ,a cech ,a MSO0 jest to, ˙ze nie ma w niej zmiennych indywiduowych (czyli tych, kt´orych warto´sciami s ,a elementy) ani wi ,a˙z ,acych je kwantyﬁkator´ow, a tylko symbole relacji i kwantyﬁkatory drugiego rz ,edu. Natomiast jest znacznie wi ,ecej formu l atomowych. Oto deﬁnicja sk ladni i jednocze´snie semantyki MSO0 – oczywi´scie indukcyjna. Wobec braku zmiennych pierwszego rz ,edu w deﬁnicji semantyki nie wyst ,epuje warto´sciowanie. • Formu la atomowa Xi ⊆ Xj jest prawdziwa w modelu A ∈ Wn gdy relacja Xi jest zawarta w relacji Xj. • Formu la atomowa Singl(Xi) jest prawdziwa w modelu A ∈ Wn gdy relacja Xi jest singletonem (to w la´snie kwantyﬁkowaniem po relacjach, kt´ore s ,a singletonami zast ,apimy kwantyﬁkacj ,e po elementach obecn ,a w MSO). • Formu la atomowa LessEq(Xi, Xj) jest prawdziwa w modelu A ∈ Wn, gdy wszystkie elementy w relacji Xi s ,a mniejsze b ,ad´z r´owne od wszystkich element´ow w relacji Xj. • Je´sli ϕ, ψ s ,a formu lami MSO0 a Xi jest symbolem relacyjnym, to formu lami s ,a tak˙ze ϕ ∨ ψ, ¬ϕ i ∃Xiϕ, kt´orych semantyka jest standardowa. T lumaczenie danego zdania ϕ z MSO nad Σn na r´ownowa˙zne mu w Wn zdanie ̃ϕ w MSO0 deﬁniuje si ,e nast ,epuj ,aco. Po pierwsze, zamieniamy nazwy zwi ,azanych zmiennych pierwszego rz ,edu tak, ˙ze zmienna wi ,azana przez ka˙zdy kwantyﬁkator jest inna. Bez utraty og´olno´sci mo˙zemy za lo˙zy´c, ˙ze s ,a to zmienne x1, . . . , xℓ. Teraz wszystkim zmiennym wyst ,epuj ,acym w ϕ przypisujemy dodatkowe, nowe symbole relacji, powiedzmy, ˙ze zmiennej xi przypisu- jemy Xn+i. 91 • ̃Xi(xj) to Xn+j ⊆ Xi. • ̃(xi = xj) to Xn+i ⊆ Xn+j ∧ Xn+j ⊆ Xn+i. • ̃(xi ≤ xj) to LessEq(Xn+i, Xn+j). • ̃(ϕ ∨ ψ) ma posta´c ̃ϕ ∨ ̃ψ. • ̃(¬ϕ) ma posta´c ¬ ̃ϕ. • Formu l ,e ̃(∃xiϕ) deﬁniujemy jako ∃Xn+i(Singl(Xn+i) ∧ ̃ϕ). • Formu l ,e ̃(∃Xiϕ) dla i ≤ n deﬁniujemy jako ∃Xi ̃ϕ. Przez indukcj ,e ze wzgl ,edu na budow ,e ϕ udowodnimy teraz, ˙ze Dla ka˙zdego modelu-s lowa ⟨A, X1, . . . , Xn⟩ i ka˙zdych a1, . . . , aℓ z jego no´snika, nast ,epuj ,ace warunki s ,a r´ownowa˙zne: • (⟨A, X1, . . . , Xn⟩, x1 : a1, . . . , xℓ : aℓ) |= ϕ • ⟨A, X1, . . . , Xn, {a1}, . . . , {aℓ}⟩ |= ̃ϕ Wszystkie kroki indukcji sa ca lkowicie standardowe i pozostawiamy je Czytelnikowi. Zatem istotnie, ka˙zdy zbi´or s l´ow-modeli, kt´ory mo˙zna zdeﬁniowa´c zdaniem MSO mo˙zna te˙z zdeﬁniowa´c zdaniem MSO0. Teraz dla takiego zdania pozostaje skonstruowa´c automat sko´n- czony, kt´ory akceptuje dok ladnie te s lowa nad A, w kt´orych to zdanie jest prawdziwe. Sprawa jest teraz du˙zo latwiejsza ni˙z dla oryginalnego MSO, bo ka˙zda formu la MSO0 deﬁniuje jaki´s j ,ezyk nad An+k. Sprawdzenie, ˙ze formu ly atomowe deﬁniuj ,a j ,ezyki regularne, pozostawiamy Czytelnikowi jako ´cwiczenie. J ,ezyk deﬁniowany przez ϕ ∨ ψ jest sum ,a j ,ezyk´ow deﬁniowanych przez ϕ i ψ, czyli jako suma j ,ezyk´ow regularnych sam jest regularny. J ,ezyk deﬁniowany przez ¬ϕ jest dope lnieniem regularnego j ,ezyka deﬁniowanego przez ϕ, czyli sam te˙z jest regularny. W wypadku formu ly ∃Xiϕ, o kt´orej zak l ,adamy, ˙ze i jest najwy˙zszym indeksem symbolu relacyjnego wyst ,epuj ,acego w ϕ, bierzemy automat rozpoznaj ,acy j ,ezyk nad Ai deﬁniowany przez ϕ. Nast ,epnie modyﬁkujemy go tak, by dzia la l nad alfabetem Ai−1, przy ka˙zdym prze- j´sciu niedeterministycznie zgaduj ,ac, czy i-t ,a wsp´o lrz ,edn ,a litery z alfabetu Ai znajduj ,acej si ,e w tej kom´orce ta´smy jest 1 czy 0. Twierdzenie B¨uchi ma daleko id ,ace konsekwencje dla rozstrzygalno´sci wielu interesuj ,acych problem´ow. 92 Wniosek 12.5 Nast ,epuj ,ace problemy s ,a rozstrzygalne: • Czy istnieje model-s lowo, w kt´orym dane zdanie ϕ z MSO jest prawdziwe? • Czy dane zdanie ϕ z MSO jest prawdziwe w ka˙zdym modelu-s lowie? Dow´od: Procedura rozstrzygaj ,aca oba problemy polega na przetworzeniu formu ly ϕ w r´ow- nowa˙zny jej automat sko´nczony (np. w spos´ob opisany w dowodzie poprzedniego twierdzenia), a nast ,epnie przeprowadzeniu testu na automacie. 12.3 Informacja o tw. Fagina i Stockmeyera Naturalne jest pytanie, czy mo˙zna r´ownie elegancko, jak to zrobi l B¨uchi, scharakteryzowa´c zbiory modeli deﬁniowalnych w pe lnej logice drugiego rz ,edu. Odpowied´z na to pytanie po- jawi la si ,e w dw´och krokach. W pierwszej charakteryzacji wyst ,epuje egzystencjalna logika drugiego rz ,edu, czasami ozna- czana symbolem Σ1 1, czyli zbi´or tych formu l pe lnej logiki drugiego rz ,edu, w kt´orych wszystkie kwantyﬁkatory drugiego rz ,edu wystepuj ,a na pocz ,atku formu ly, a za nimi jest ju˙z tylko zwyk le zdanie pierwszego rz ,edu: ∃X1 . . . ∃Xn ϕ(X1 . . . Xn) | {z } zdanie pierwszego rz ,edu . Dla tej logiki sytuacja wygl ,ada nast ,epuj ,aco: Twierdzenie 12.6 (Fagin) Dla ka˙zdego zdania ϕ egzystencjalnej logiki drugiego rz ,edu zbi´or {w ∈ A+ n | A(w) |= ϕ} nale˙zy do NP, oraz dla ka˙zdego j ,ezyka L ∈ NP istnieje zdanie ϕ egzystencjalnej logiki drugiego rz ,edu takie, ˙ze {w ∈ A + n | A(w) |= ϕ} = L − {ϵ}. Podobnie jak twierdzenie B¨uchi i Elgota, ono te˙z bywa reprezentowane sloganem Σ1 1 = NP. Oczywi´scie NP to s lynna klasa z lo˙zono´sci probelm´ow rozstrzyganych przez niedeterministy- czne maszyny Turinga o wielomianowej z lo˙zono´sci czasowej. Pe lna logika drugiego rz ,edu, oznaczona tu przez SO, te˙z ma analogiczn ,a charakteryzacj ,e, kt´ora w postaci sloganu wyra˙za si ,e przez SO = PH i zosta la udowodniona przez Stockmeyera. Precyzyjna posta´c tego twierdzenia jest analogiczna do poprzednich, a PH to hierarchia wielo- mianowa, r´ownie˙z doskonale znana z teorii z lo˙zono´sci. Przed przej´sciem do nast ,epnego tematu wypada zauwa˙zy´c, ˙ze twierdzenia Fagina i Stock- meyera w istocie obowi ,azuj ,a w zakresie szerszym ni˙z tylko dla modeli-s l´ow. Dotycz ,a one tak˙ze dowolnych struktur sko´nczonych, o ile za lo˙zy si ,e odpowiednio rozs ,adny spos´ob opisy- wania ich we wzajemnie jednoznaczny spos´ob za pomoc ,a s l´ow. 93 Po poznaniu twierdze´n Fagina i Stockmeyera lepiej rozumiemy trudno´sci badania logiki dru- giego rz ,edu. Jest to zadanie co najmniej r´ownie nie latwe, jak najtrudniejsze pytania teorii z lo˙zono´sci, z kt´orymi uczeni borykaj ,a si ,e od kilkudziesi ,eciu lat, jak dotychczas bezskutecznie. Np. dow´od, ˙ze ka˙zdy zbi´or s l´ow, kt´ory jest deﬁniowalny formu l ,a logiki drugiego rz ,edu, jest te˙z deﬁniowalny formu l ,a Σ1 1, implikowa lby natychmiast, ˙ze NP = PH, a zatem tak˙ze NP = coNP. Zauwa˙zmy przy tym, ˙ze ka˙zdy zbi´or s l´ow, kt´ory jest deﬁniowalny w MSO, jest te˙z deﬁniowalny za pomoc ,a formu ly kt´ora nale˙zy jednocze´snie do MSO i Σ1 1. Wynika to z postaci formu ly deﬁniuj ,acej zbiory regularne, kt´ora pojawia si ,e w dowodzie twierdzenia B¨uchi. Zatem na poziomie kwantyﬁkacji wy l ,acznie po relacjach jednoargumentowych, po˙z ,adana r´owno´s´c za- chodzi. Jednak przej´scie do relacji o dowolnej liczbie argument´ow wydaje si ,e niezmiernie trudne. 12.4 Informacja o tw. Rabina Twierdzenie Rabina to inne, daleko id ,ace uog´olnienie twierdzenia B¨uchi. Niesko´nczone pe lne drzewo binarne to struktura T nad sygnatur ,a =, s0, s1, w kt´orej s0 i s1 to symbole jednoargumentowych funkcji. No´snik T to zbi´or {0, 1}∗ sko´nczonych s l´ow zeroje- dynkowych, a funkcje s ,a okre´slone przez r´owno´sci s0(w) = w0 oraz s1(w) = w1. Twierdzenie 12.7 (Rabin) Zbi´or zda´n logiki MSO, kt´ore s ,a prawdziwe w T jest rozstrzy- galny. Wszystkie znane dowody twierdzenia Rabina opieraj ,a si ,e na tym samym pomy´sle, kt´ory poz- nali´smy w dowodzie twierdzenia B¨uchi: formu ly logiki MSO s ,a t lumaczone na r´ownowa˙zne im automaty w taki spos´ob, ˙ze formu la jest prawdziwa w drzewie T (poetykietowanym do- datkowymi symbolami w wierzcho lkach) wtedy i tylko wtedy, gdy automat akceptuje to drzewo. Szczeg´o ly tych dowod´ow s ,a zawsze bardzo skomplikowane. Nagrod ,a jest za to wynik, kt´ory jest jednym z najsilniejszych znanych twierdze´n o rozstrzygalno´sci, nie tylko zreszt ,a w logice. Rozstrzygalno´s´c wielu innych problem´ow decyzyjnych wykazano po raz pierwszy przez ich odpowiednie przet lumaczenie (czyli zredukowanie) na pytanie o prawdziwo´s´c zda´n MSO w niesko´nczonym drzewie binarnym. ´Cwiczenia 1. Napisa´c zdanie logiki drugiego rz ,edu aksjomatyzuj ,ace poj ,ecie porz ,adku ci ,ag lego i wywnioskowa´c st ,ad, ˙ze dla tej logiki nie zachodzi tak˙ze dolne twierdzenie Skolema-L¨owenheima. 2. Pokaza´c, ˙ze odpowiednik twierdzenia o zwarto´sci nie zachodzi dla logiki drugiego rz ,edu. 3. Napisa´c zdanie MSO, kt´orego wszystkie sko´nczone modele to dok ladnie te grafy, kt´ore s ,a 3-kolorowalne. 4. Napisa´c zdanie Σ1 1, kt´orego wszystkimi modelami s ,a dok ladnie struktury sko´nczone. 5. Napisa´c zdanie MSO, kt´ore deﬁniuje j ,ezyk regularny sk ladaj ,acy si ,e z tych wszystkich s l´ow nad A1 = {0, 1}, w kt´orych liczba jedynek jest parzysta. 94 13 Logika w informatyce W tym rozdziale naszkicujemy skr´otowo kilka nie wspomnianych dotychczas zagadnie´n logiki, kt´ore wi ,a˙z ,a j ,a z informatyk ,a. Wyb´or jest do´s´c arbitralny, a opisy niezbyt wyczerpuj ,ace. Stanowi ,a one raczej zaproszenie do dalszych, w lasnych poszukiwa´n, ni˙z zamkni ,ety wyk lad prezentowanych zagadnie´n. 13.1 Zdaniowe logiki tr´ojwarto´sciowe Logika klasyczna, o kt´orej mowa w Wyk ladzie 1, jest logik ,a dwuwarto´sciow ,a. Pierwsze logiki tr´ojwarto´sciowe skonstruowali niezale˙znie od siebie polski logik Jan Lukasiewicz i ameryka´nski (ale urodzony w Augustowie) logik i matematyk Emil Post. Motywacje Posta by ly raczej kombinatoryczne, natomiast Lukasiewicz swoj ,a konstrukcj ,e popar l g l ,ebokim wywo- dem ﬁlozoﬁcznym. Argumentowa l mi ,edzy innymi, ˙ze zdania o przysz lo´sci, typu ” jutro p´ojd ,e do kina”, nie s ,a dzisiaj jeszcze ani prawdziwe, ani fa lszywe, bo przypisanie im kt´orej´s z tych warto´sci zaprzecza loby istnieniu wolnej woli. Aby logika mog la jako´s zda´c spraw ,e ze statusu zda´n o przysz lo´sci, musi im przypisa´c inn ,a, trzeci ,a warto´s´c logiczn ,a. Trzeba tu zaznaczy´c, ˙ze zupe lnie inn ,a propozycj ,a rozwi ,azania tego samego problemu jest stworzona przez Brouwera logika intuicjonistyczna, kt´or ,a poznali´smy w Wyk ladzie 11. Zanim przejdziemy do cz ,e´sci troch ,e bardziej formalnej, rozwa˙zmy jeszcze dwa przyk lady wzi ,ete z ˙zywej informatyki, gdzie tak˙ze naturalnie pojawia si ,e trzecia warto´s´c logiczna. Przyk lad 13.1 Rozwa˙zmy dwie deklaracje funkcji w Pascalu: function f(x,y:boolean):boolean; begin ... end; function g(x,y:boolean):boolean; begin ... end; a nast ,epnie ich u˙zycie if f(x,y) and g(x,y) then ... else ...; Wydaje si ,e na pierwszy rzut oka, ˙ze to sytuacja rodem z logiki klasycznej, ale nie: przecie˙z i f i g mog ,a da´c w wyniku obliczenia warto´sci true, false lub si ,e zap ,etli´c, kt´ore to zdarzenie jest form ,a trzeciej warto´sci logicznej. Spos´ob, w jaki si ,e z ni ,a obejdzie funkcja and zale˙zy od wyboru programisty: mo˙ze on zastosowa´c albo kr´otkie albo d lugie wyliczenie w swoim programie. 95 Przyk lad 13.2 Inna sytuacja to tabela stworzona za pomoc ,a nast ,epuj ,acej instrukcji SQL w relacyjnej bazie danych: CREATE TABLE A ( id INTEGER PRIMARY KEY auto_increment, ... valid BOOLEAN, ... ); Przy takiej deklaracji, tabela A b ,edzie mog la w kolumnie valid zawiera´c trzy warto´sci lo- giczne: TRUE, FALSE i NULL, a logika tr´ojwarto´sciowa objawi swoje dzia lanie przy wykonaniu np. zapytania SELECT * FROM A AS A1, A AS A2 WHERE A1.valid and A2.valid Deﬁnicja 13.3 Zbi´or formu l zdaniowej logiki tr´ojwarto´sciowej to zbi´or tych formu l zdaniowej logiki klasycznej (patrz Deﬁnicja 1.1), w kt´orych wyst ,epuj ,a tylko sp´ojniki ¬, ∨ i ∧. Wywo lane w ten spos´ob zaw ,e˙zenie sk ladni zrekompensujemy niezw locznie po stronie seman- tyki. Przez tr´ojwarto´sciowanie zdaniowe rozumiemy dowoln ,a funkcj ,e ϱ : ZZ → {0, 1 2 , 1}, kt´ora zmiennym zdaniowym przypisuje warto´sci logiczne 0, 1 2 i 1. Warto´s´c formu ly zdaniowej α przy tr´ojwarto´sciowaniu ϱ oznaczamy przez [[α]]ϱ i okre´slamy przez indukcj ,e: • [[p]]ϱ = ϱ(p), gdy p jest symbolem zdaniowym; • [[¬α]]ϱ = F¬([[α]]ϱ); • [[α ∨ β]]ϱ = F∧([[α]]ϱ, [[β]]ϱ); • [[α ∧ β]]ϱ = F∨([[α]]ϱ, [[β]]ϱ); • [[¬α]]ϱ = F¬([[α]]ϱ). R´o˙zne wybory funkcji F∨, F∧ : {0, 1 2 , 1} × {0, 1 2 , 1} → {0, 1 2 , 1} i F¬ : {0, 1 2 , 1} → {0, 1 2 , 1} prowadz ,a do r´o˙znych logik tr´ojwarto´sciowych. Zaczniemy od logiki najstarszej, zwanej dzi´s logik ,a Heytinga-Kleene- Lukasiewicza: 96 F∧(x, y) x⧹y 0 1 1 2 0 0 0 0 1 0 1 1 2 1 2 0 1 2 1 2 F∨(x, y) x⧹y 0 1 1 2 0 0 1 1 2 1 1 1 1 1 2 1 2 1 1 2 F¬ x 0 1 1 0 1 2 1 2 Jest to logika niew ,atpliwie nadaj ,aca si ,e do rozwi ,azania zadania, kt´ore sobie Lukasiewicz postawi l. Spos´ob traktowania warto´sci logicznej 1 2 jest taki, ˙ze nale˙zy j ,a rozumie´c jako ” jeszcze nie wiadomo”. Warto zauwa˙zy´c, ˙ze w przypadku tej logiki zachodz ,a r´owno´sci • [[¬α]]ϱ = 1 − [[α]]ϱ, • [[α ∨ β]]ϱ = max{[[α]]ϱ, [[β]]ϱ}, • [[α ∧ β]]ϱ = min{[[α]]ϱ, [[β]]ϱ}, znane z Deﬁnicji 1.2, tak wi ,ec mozna j ,a traktowa´c jako literalne uog´olnienie logiki klasycznej. Zachowanie sta lych i operacji logicznych w j ,ezyku SQL rz ,adzi si ,e w la´snie prawami logiki Heytinga-Kleene- Lukasiewicza. Zupe lnie inn ,a logik ,e zaproponowa l Bochvar: F∧(x, y) x⧹y 0 1 1 2 0 0 0 1 2 1 0 1 1 2 1 2 1 2 1 2 1 2 F∨(x, y) x⧹y 0 1 1 2 0 0 1 1 2 1 1 1 1 2 1 2 1 2 1 2 1 2 F¬ x 0 1 1 0 1 2 1 2 Czytelnik bez trudu rozpozna, ˙ze jest logika w la´sciwa dla Przyk ladu 13.1, gdy programista wybierze d lugie wyliczenie wyra˙ze´n logicznych. W sensie tej logiki sta la 1 2 oznacza awari ,e lub b l ,ad. Dalej mamy do´s´c egzotycznie wygl ,adaj ,ac ,a logik ,e Soboci´nskiego: F∧(x, y) x⧹y 0 1 1 2 0 0 0 0 1 0 1 1 1 2 0 1 1 2 F∨(x, y) x⧹y 0 1 1 2 0 0 1 0 1 1 1 1 1 2 0 1 1 2 F¬ x 0 1 1 0 1 2 1 2 Jednak i ona ma sw´oj powa˙zny sens. W niej sta la logiczna 1 2 oznacza ” nie dotyczy” lub ” nieistotne”. Wszyscy odruchowo wr ,ecz stosujemy t ,e logik ,e przy okazji wype lniania r´o˙znych formularzy i kwestionariuszy. Odpowiadaj ,ac na r´o˙zne pytania sformu lowane ” tak lub nie” 97 w niekt´orych polach na odpowiedzi umieszczamy ” nie dotyczy” a potem podpisujemy si ,e pod dokumentem mimo ostrze˙zenia ” ´Swiadomy/ma odpowiedzialno´sci karnej za sk ladanie fa lszywych zezna´n . . . o´swiadczam ˙ze wszystkie odpowiedzi w tym formularzu s ,a zgodne ze stanem faktycznym.” Po prostu stosujemy tu logik ,e Soboci´nskiego, w kt´orej koniunkcja kilku wyraz´ow o warto´sci 1 i kilku wyraz´ow o warto´sci 1 2 daje wynik 1. Na szcz ,e´scie, organy kontrolne chyba te˙z znaj ,a ten rachunek zda´n i stosuj ,a go do oceny naszych zezna´n. . . Przechodz ,ac do logik wygl ,adaj ,acych na pierwszy rzut oka jeszcze niezwyklej, natraﬁamy na logik ,e z nieprzemienn ,a koniunkcj ,a i alternatyw ,a, kt´ora opisuje sp´ojniki logiczne w Pascalu, wyliczane w spos´ob kr´otki: F∧(x, y) x⧹y 0 1 1 2 0 0 0 0 1 0 1 1 2 1 2 1 2 1 2 1 2 F∨(x, y) x⧹y 0 1 1 2 0 0 1 1 2 1 1 1 1 1 2 1 2 1 2 1 2 F¬ x 0 1 1 0 1 2 1 2 Dla ka˙zdego z powy˙zszych rachunk´ow logicznych zasadne i interesuj ,ace s ,a pytania o to czym jest tautologia, o aksjomatyzacje i systemy dowodzenia. Tak samo jest z innymi logikami wielowarto´sciowymi, bo Czytelnik juz zapewne zauwa˙zy l, ˙ze o ile jest jedna sensowna logika dwuwarto´sciowa i kilka, wzajemnie konkurencyjnych sensownych logik tr´ojwarto´sciowych, to przy wzro´scie liczby warto´sci logicznych, liczba sensownych logik te˙z musi rosn ,a´c. Tytu lem przyk ladu: mo˙zna sobie bez trudu wyobrazi´c logik ,e, w kt´orej chcieliby´smy mie´c jednocze´snie dwie r´o˙zne sta le odpowiadaj ,ace ” nie wiadomo” i ” nie dotyczy”. Taka logika mia laby wi ,ec co najmniej cztery warto´sci logiczne. Jak latwo si ,e domy´sli´c, ogromnym obszarem zastosowa´n logik wielowarto´sciowych jest sztuczna inteligencja i reprezentacja wiedzy. Logika intucjonistyczna te˙z mo˙ze by´c w pewnych sytuacjach traktowana jako logika wielo- warto´sciowa. W tym przypadku potrzeba tych warto´sci niesko´nczenie wiele. Odpowiednio staranne spojrzenie na Deﬁnicj ,e Twierdzenie 11.5 pozwala w nim dojrze´c w la´snie opis zbioru tautologii zdaniowej logiki intucjonistycznej jako zbioru tautologii logiki niesko´nczeniewielo- warto´sciowej, w kt´orej zbi´or warto´sci logicznych to rodzina podzbior´ow otwartych R. Trzeba jednak zaznaczy´c, ˙ze podej´scie to zatraca pewne istotne intuicje. 13.2 Tw. Codda Twierdzenie Codda l ,aczy ze sob ,a ´swiat logiki i ´swiat relacyjnych baz danych. Zostanie ono sformu lowane i dowiedzione w tym rozdziale. Orzeka ono, ˙ze logika pierwszego rz ,edu i algebra relacyjna, znana z wyk ladu baz danych, s ,a wzajemnie na siebie przek ladalne, przy za lo˙zeniu dla logiki pierwszego rz ,edu tzw. semantyki dziedziny aktywnej. Na potrzeby niniejszego rozwa˙zania zak ladamy i ustalamy sko´nczon ,a sygnatur ,e Σ, z lo˙zon ,a wy l ,acznie z symboli relacji i sta lych, jak to zwykle ma miejsce w bazach danych. Deﬁnicja 13.4 Tytu lem przypomnienia (Czytelnik powinien zna´c algebr ,e relacyjn ,a z wy- k ladu baz danych) i dla ustalenia notacji, deﬁniujemy sk ladni ,e algebry relacyjnej AR nad Σ. 98 • Ka˙zdy symbol relacji n-argumentowej z Σ z wyj ,atkiem r´owno´sci jest n-argumentowym wyra˙zeniem AR. • Je´sli E i F s ,a n-argumentowymi wyra˙zeniami AR, to E∪F, E−F te˙z s ,a n-argumentowymi wyra˙zeniami AR. • Je´sli E i F s ,a n-argumentowymi wyra˙zeniami AR, to E∪F, E−F te˙z s ,a n-argumentowymi wyra˙zeniami AR. • Je´sli E jest n-argumentowym wyra˙zeniem AR oraz i1, . . . , ik jest ci ,agiem r´o˙znych ale niekoniecznie wszystkich element´ow zbioru {1, . . . , n}, to πi1,...,ik E jest k-argumentowym wyra˙zeniem AR. W szczeg´olno´sci ci ,ag ten mo˙ze by´c pusty, za´s πE jest wyra˙zeniem 0-argumentowym. • Je´sli E jest n-argumentowym, za´s F jest m-argumentowym wyra˙zeniem AR, to E × F jest n + m-argumentowym wyra˙zeniem AR. • Je´sli E jest n-argumentowym wyra˙zeniem AR oraz θ jest zbiorem r´owno´sci postaci ‘i = j’ lub ‘i = c’, gdzie i, j ∈ {1, . . . , n} za´s c nale˙zy do zbioru symboli sta lych z sygnatury Σ, to σθE jest n-argumentowym wyra˙zeniem AR. Semantyka algebry relacyjnej jest nast ,epuj ,aca: dla danej struktury A nad Σ, ka˙zdemu n-ar- gumentowemu wyra˙zeniu E algebry relacyjnej przypisujemy n-argumentow ,a relacj ,e [[E]] w A. Deﬁnicja oczywi´scie przebiega indukcyjnie wzgl ,edem budowy E. • Je´sli R nale˙zy do Σ, to [[R]] = RA. • [[E ∪ F ]] = [[E]] ∪ [[F ]] oraz [[E − F ]] = [[E]] − [[F ]]. • [[πi1,...,ik E]] = {⟨ai1, . . . , aik ⟩ | ⟨a1, . . . , ak⟩ ∈ [[E]]}. • [[E × F ]] = [[E]] × [[F ]] = {⟨a1, . . . , an, b1 . . . , bm⟩ | ⟨a1, . . . , an⟩ ∈ [[E]] i ⟨b1 . . . , bm⟩ ∈ [[F ]]}. • [[σθE]] = {⟨a1, . . . , an⟩ ∈ [[E]] | ai = aj, gdy (i = j) ∈ θ oraz ai = cA, gdy (i = c) ∈ θ}. Warto zauwa˙zy´c, ˙ze [[πE]] = {⟨⟩}, czyli jest zbiorem z lo˙zonym z ci ,agu pustego, gdy [[E]] jest niepusty, oraz jest pusty w przeciwnym wypadku. Z kolei [[σ∅E]] = [[E]]. Jak wiadomo, AR jest teoretycznym modelem j ,ezyka zapyta´n do relacyjnych baz danych. Po- ka˙zemy teraz, ˙ze algebra relacyjna jest ´sci´sle powi ,azana z logik ,a pierwszego rz ,edu, a we wszyst- kich sytuacjach naturalnych z punktu widzenia teorii baz danych, jest jej nawet r´ownowa˙zna. Dla danej formu ly α logiki pierwszego rz ,edu takiej, ˙ze F V (α) = {xi1, . . . xin}, oraz struktury A = ⟨A, . . .⟩ okre´slimy interpretacj ,e tej formu ly w A, oznaczan ,a [[α]], jak nast ,epuje: [[α]] = {⟨a1, . . . , an⟩ ∈ A n | (A, xi1 : a1, . . . , xin : an) |= α}. Intuicyjnie, [[α]] to relacja deﬁniowana przez formu l ,e α w danej strukturze. 99 Deﬁnicja 13.5 Aktywn ,a dziedzin ,a struktury A nazwiemy podzbi´or ad(A) ⊆ A jej uniwer- sum, z lo˙zony z wszystkich element´ow kt´ore s ,a warto´sciami sta lych z sygnatury b ,ad´z wyst ,epuj ,a jako wsp´o lrz ,edna w co najmniej jednej krotce nale˙z ,acej do interpretacji jakiego´s symbolu rela- cyjnego z sygnatury. Jak latwo zauwa˙zy´c, interpretacje wszystkich wyra˙ze´n algebry relacyjnej obliczane w A s ,a w istocie relacjami w dziedzinie aktywnej. Inaczej jest w logice pierwszego rz ,edu: u˙zycie negacji prowadzi natychmiast do formu l, kt´orych interpretacje zawieraj ,a elementy spoza aktywnej dziedziny. Zatem w pe lnej og´olno´sci s ,a formu ly logiki pierwszego rz ,edu, dla kt´orych nie istnieje wyra˙zenie algebry relacyjnej o tej samej interpretacji w ka˙zdej strukturze. Jednak gdy za lo˙zymy, ˙ze A = ad(A), to sytuacja sie zmienia. Wyrazem tego jest poni˙zsze twierdzenie. Twierdzenie 13.6 (Codd) 1. Dla ka˙zdego wyra˙zenia E algebry relacyjnej istnieje taka formu la αE logiki pierwszego rz ,edu, ˙ze dla ka˙zdej struktury A spe lniaj ,acej A = ad(A), zachodzi [[α]] = [[E]]. 2. Dla ka˙zdej formu ly α logiki pierwszego rz ,edu istnieje wyra˙zenie Eα algebry relacyjnej takie, ˙ze dla ka˙zdej struktury A spe lniaj ,acej A = ad(A), zachodzi [[E]] = [[α]]. Dow´od: Obu cz ,e´sci twierdzenia b ,edziemy dowodzi´c przez indukcj ,e ze wzgl ,edu na budow ,e: w pierwszym punkcie wyra˙zenia E, a w drugim formu ly α. Przy konstrukcji αE b ,edziemy dba´c o to, ˙zeby F V (αE) = {x1, . . . , xn}, gdzie n to liczba argument´ow E. Gdy E jest n-argumentowym symbolem relacyjnym R, to αE ma posta´c R(x1, . . . , xn), a prawdziwo´s´c tezy jest oczywista. αE∪F deﬁniujemy jako αE ∨ αF , za´s αE−F jako αE ∧ ¬αF . I w tym przypadku teza jest oczywista. Aby skonstruowa´c απi1,...,ik E tworzymy formu l ,e ∃xj1 . . . ∃xjn−k α, gdzie j1, . . . , jn−k to wy- pisane w oboj ,etnej kolejno´sci elementy zbioru {1, . . . , n} − {i1, . . . , ik}. Nast ,epnie dokonu- jemy w niej zamiany nazw zmiennych zwi ,azanych tak, by ich numery by ly wi ,eksze ni˙z n, a zmienne wolne przemianowujemy z xij na yij . Niech β b ,edzie otrzyman ,a w ten spos´ob formu l ,a. W´owczas απi1,...,ik E deﬁniujemy jako β(x1/yi1, . . . , xk/yik ). Wida´c, ˙ze ta formu la spe lnia tez ,e. Przy konstrukcji αE×F post ,epujemy nast ,epuj ,aco: dokonujemy zamiany nazw zmiennych zwi ,azanych w formule αF w ten spos´ob, by mia ly one numery wi ,eksze ni˙z n + m, za´s za zmienne wolne x1, . . . , xm podstawiamy kolejno xn+1, . . . , xn+m. Niech powsta la formu la nazywa si ,e βF . Wtedy deﬁniujemy αE×F jako αE ∧ βF . Oczyi´scie ta formu la spe lnia tez ,e. 100 Na zako´nczenie tej cze´sci dowodu okre´slamy formu l ,e ασθE jako αE ∧ ⋀ ‘i = j’∈θ xi = xj ∧ ⋀ ‘i = c’∈θ xi = c. I tym razem sprawdzenie, ˙ze ta formu la spe lnia tez ,e indukcyjn ,a jest natychmiastowe. Przyst ,epujemy teraz do t lumaczenia formu l logiki pierwszego rz ,edu na algebr ,e relacyjn ,a. W tym celu wygodnie jest za lo˙zy´c, ˙ze podstawowymi sp´ojnikami logiki s ,a ∨, ¬ i ∃, a pozosta le s ,a zdeﬁniowane za ich pomoc ,a i maj ,a status skr´ot´ow notacyjnych. Zaczynamy od konstrukcji jednoargumentowego wyra˙zenia AD takiego, ˙ze dla ka˙zdej struk- tury A, mamy [[AD]] = ad(A). Jest ono ∪-sum ,a wyra˙ze´n πiR dla wszystkich symboli relacyjnych R w sygnaturze i wszyst- kich i takich, ˙ze R ma co najmniej i argument´ow. Mo˙zemy teraz przyst ,api´c do konstrukcji. Dla ka˙zdego zadanego n nie mniejszego ni˙z wszystkie numery zmiennych wolnych w α konstruujemy n-argumentowe wyra˙zenie Eα;n takie, ˙ze [[Eα;n]] = {⟨a1, . . . , an⟩ ∈ A n | (A, x1 : a1, . . . , xn : an) |= α}. Oznacza to, ˙ze Eα;n zawiera dodatkowe wsp´o lrz ,edne, kt´ore pozwalaj ,a zarejestrowa´c indeksy zmiennych wolnych wyst ,epuj ,acych w α. Aby otrzyma´c Eα wystarczy wzi ,a´c rzut πI Eα;n, gdzie I to posortowany rosn ,aco ci ,ag numer´ow zmiennych wolnych α, co eliminuje przy okazji zb ,edne wsp´o lrz ,edne. Exi=xj ;n to σi=j(AD × · · · × AD| {z } n ). ER(xi1 ,...,xik );n jest zdeﬁniowane jako πI (R × AD × · · · × AD| {z } n−k ), gdzie I jest tak ,a permutacj ,a {1, . . . , n}, kt´ora wsp´o lrz ,edne R mieszcza na pozycjach o kolejnych numerach i1, . . . , ik. Eα∨β;n jest zdeﬁniowane jako Eα;n ∪ Eβ;n, natomiast E¬α;n to (AD × · · · × AD| {z } n ) − Eα;n. Wreszcie w wypadku E∃xiα;n mo˙zemy bez utraty og´olno´sci za lo˙zy´c, ˙ze i = n + 1. Wtedy E∃xiα;n jest zdeﬁniowane jako π1,...,nEα;n+1. We wszystkich przypadkach kroki dowodu indukcyjnego s ,a oczywiste. Twierdzenie Codda jest ju˙z w pewnym stopniu cz ,e´sci ,a folkloru w teorii baz danych. Dzi´s wszyscy wiedz ,a, ˙ze algebra relacyjna to w la´sciwie to samo, co logika pierwszego rz ,edu. W zwi ,azku z tym, od wielu lat na konferencjach naukowych dotycz ,acych teorii baz danych, systematycznie prezentowane s ,a prace, kt´orych tematem jest logika pierwszego rz ,edu i nikt si ,e ju˙z temu nie dziwi ani niczego nie musi uzasadnia´c. W szczeg´olno´sci badania dotycz ,ace gier Ehrenfeuchta oraz charakteryzacji obliczeniowych logiki pierwszego rz ,edu (w duchu twierdze´n B¨uchi i Fagina) s ,a generalnie postrzegane jako wyniki nale˙z ,ace do teorii baz danych. 101 13.3 Rozstrzygalno´s´c i nierozstrzygalno´s´c teorii W tym rozdziale przedyskutujemy zagadnienie rozstrzygalno´sci teorii matematycznych (rozu- mianych jako zbiory zda´n). Przyk ladem teorii nierozstrzygalnej jest arytmetyka Peano (Twier- dzenie 9.3). Przyk lad teorii rozstrzygalnej prezentujemy poni˙zej. Twierdzenie 13.7 Teoria g ,estych porz ,adk´ow liniowych kt´ore nie maj ,a element´ow maksymal- nych ani minimalnych jest rozstrzygalna. Dow´od: Niech A b ,edzie klas ,a wszystkich g ,estych porz ,adk´ow liniowych kt´ore nie maj ,a element´ow maksymalnych ani minimalnych. Z Wniosku 4.15 wiemy, ˙ze Th(A) jest zupe lna. Ponadto zauwa˙zmy, ˙ze Th(A) = {α | ∆ |= α}, gdzie ∆ to nast ,epuj ,acy zbi´or zda´n: ∀x∀y (x ≤ y ∧ y ≤ x) → x = y ∀x∀y∀z (x ≤ y ∧ y ≤ z) → x ≤ z ∀x∀y x ≤ y ∨ y ≤ x ∀x∃y x < y ∀x∃y y < x ∀x∀y (x < y) → (∃z x < z ∧ z < y) gdzie x < y jest oczywistym skr´otem notacyjnym dla formu ly x ≤ y ∧ x ̸= y. Na mocy twierdzenia o pe lno´sci {α | ∆ |= α} = {α | ∆ ⊢H α}. Pozostaje wi ,ec wykaza´c rozstrzygalno´s´c {α | ∆ ⊢H α}. Procedura rozstrzygaj ,aca jest nast ,epuj ,aca: Dla danej formu ly α systematycznie generujemy wszystkie dowody w systemie Hilberta, poszukuj ,ac w´sr´od nich albo dowodu ∆ ⊢H α, albo dowodu ∆ ⊢H ¬α. Wobec zaobserwowanej przez nas zupe lno´sci, jeden z nich w ko´ncu si ,e znajdzie. Je´sli b ,edzie to ten pierwszy, to procedura udzieli w´owczas odpowiedzi: ” TAK”, a je´sli ten drugi, to ” NIE”. Przeprowadzony przez nas dow´od jest ca lkiem prosty, ale prowadzi do algorytmu rozstrzyga- j ,acego, o kt´orego z lo˙zono´sci nic rozs ,adnego powiedzie´c nie umiemy. Istniej ,a bardziej zaawansowane technicznie metody dowodzenia rozstrzygalno´sci, kt´ore po- zwalaj ,a oszacowa´c z lo˙zono´s´c tworzonych przez nie algorytm´ow. Jednak mo˙zna udowodni´c, ˙ze ˙zaden taki algorytm nie mo˙ze mie´c z lo˙zono´sci mniejszej ni˙z Pspace, o ile tylko dzia la poprawnie dla wszystkich formu l zawieraj ,acych symbole r´owno´sci. Twierdzenie 13.8 (Stockmeyer) Nast ,epuj ,acy problem jest Pspace-trudny: czy dane zda- nie logiki pierwszego rz ,edu nad sygnatur ,a zawieraj ,ac ,a wy l ,acznie symbol r´owno´sci jest tau- tologi ,a? 102 Wobec naszej wiedzy o klasach z lo˙zono´sci, w ,atpliwe jest zatem istnienie algorytm´ow o wielo- mianowej z lo˙zono´sci czasowej nawet dla teorii jeszcze prostszych ni˙z ta rozpatrywana w po- przednim twierdzeniu. Dow´od: Przeprowadzamy redukcj ,e w pami ,eci logarytmicznej z problemu QBF (kwanty- ﬁkowanych formu l Boolowskich) do naszego problemu. Instancjami problemu QBF s ,a zdania postaci Q1p1 . . . Qnpnα, gdzie Qi ∈ {∃, ∀}, a α jest formu l ,a zdaniow ,a. Poj ,ecie prawdziwo´sci takiego zdania jest deﬁniowane w naturalny spos´ob. Problem QBF jest znanym problemem Pspace-zupe lnym. Redukcja okre´slona jest jak nast ,epuje: w zdaniu powy˙zszym ka˙zde wyst ,apienie pi zast ,epujemy przez xi = yi. Teraz po kolei zast ,epujemy kwantyﬁkatory: • Ka˙zdy kwantyﬁkator ∀pi zamieniamy na ∀xi∀yi. • Ka˙zdy kwantyﬁkator ∃pi zamieniamy na ∃xi∃yi. Niech formu l ,a otrzymana po tych operacjach b ,edzie α′. Wtedy wynikiem naszej redukcji jest formu la α′′ ∀x∀y(x = y ∨ α′). Jest oczywiste, ˙ze α′′ daje si ,e obliczy´c z α w logarytmicznej pami ,eci. Wida´c, ˙ze formu ly atomowe xi = yi pe lni ,a rol ,e zmiennych zdaniowych pi, przy czym w ka˙zdej strukturze o co najmniej dw´och elementach mog ,a przyjmowa´c obie warto´sci logiczne. Kwan- tyﬁkatory ∀xi∀yi i ∃xi∃yi swoj ,a funkcj ,a wiernie odpowiadaj ,a kwantyﬁkatorom ∀pi oraz ∃pi. Z kolei klauzula ∀x∀y(x = y) czyni α′′ prawdziwym w strukturach jednoelementowych, nieza- le˙znie od postaci α. Z tego wynika, ˙ze α jest prawdziwe wtedy i tylko wtedy, gdy α′′ jest tautologi ,a. Szczeg´olnie interesuj ,ace jest nast ,epuj ,ace twierdzenie: Twierdzenie 13.9 (Tarski) Teoria uporz ,adkowanego cia la liczb rzeczywistych, tj. teoria struktury ⟨R, +, ∗, 0, 1, ≤⟩ jest rozstrzygalna. Jej znaczenie dla informatyki zasadza si ,e na fakcie, ˙ze ta teoria to w istocie znana wszyst- kim ze szko ly geometria analityczna. Powa˙zn ,a cz ,e´s´c algorytmicznych bada´n w zakresie geometrii obliczeniowej mo˙zna stre´sci´c jako ulepszanie algorytmu rozstrzygaj ,acego teori ,e ⟨R, +, ∗, 0, 1, ≤⟩ dla r´o˙znych szczeg´olnych klas formu l, pojawiaj ,acych si ,e w praktyce. ´Cwiczenia 1. Udowodni´c, ˙ze logiki tr´ojwarto´sciowe Heytinga-Kleene- Lukasiewicza, Bochvara i Soboci´nskiego spe lniaj ,a prawa de Morgana. 103 2. Poda´c przyk lad zdania logiki pierwszego rz ,edu, kt´ore nie jest tautologi ,a, ale jest prawdziwe we wszystkich strukturach A takich, ˙ze A = ad(A). 3. Udowodni´c, ˙ze zbi´or tautologii logiki pierwszego rz ,edu nad sygnatur ,a sk ladaj ,ac ,a si ,e tylko z r´ow- no´sci jest rozstrzygalny. Wskaz´owka: Niech α b ,edzie formu l ,a o randze kwantyﬁkatorowej q. Udowodni´c, ˙ze ka˙zde dwie struktury o mocy co najmniej q nad powy˙zsz ,a sygnatur ,a s ,a q-elementarnie r´ownowa˙zne. Wy- wnioskowa´c st ,ad, ˙ze aby sprawdzi´c, czy α jest tautologi ,a wystarczy´c sprawdzi´c to w strukturach o mocy co najwy˙zej q. 4. Zbada´c z lo˙zono´s´c obliczeniow ,a algorytmu zaproponowanego powy˙zej i udowodni´c, ˙ze zbi´or tau- tologii logiki pierwszego rz ,edu nad sygnatur ,a sk ladaj ,ac ,a si ,e tylko z r´owno´sci jest Pspace- zupe lny. 5. Udowodni´c, ˙ze zbi´or tautologii logiki pierwszego rz ,edu nad sygnatur ,a sk ladaj ,ac ,a si ,e tylko z r´ow- no´sci i sko´nczenie wielu symboli sta lych jest rozstrzygalny. Wskaz´owka: Rozwi ,aza´c najpierw zadanie 3, a sta le zasymulowa´c jako relacje unarne b ,ed ,ace singletonami. 104 Spis tre´sci 1 Rachunek zda´n 1 1.1 Znaczenie formu l . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 1.2 Tautologie rachunku zda´n . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 1.3 Posta´c normalna formu l . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 2 J ,ezyk logiki pierwszego rz ,edu. 8 2.1 Sk ladnia . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 2.2 Semantyka formu l . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10 2.3 Prawdziwo´s´c i spe lnialno´s´c formu l . . . . . . . . . . . . . . . . . . . . . . . . . 11 2.4 Podstawianie term´ow . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 13 3 Logika pierwszego rz ,edu. Spos´ob u˙zycia. 17 3.1 Logika formalna i j ,ezyk polski . . . . . . . . . . . . . . . . . . . . . . . . . . . . 18 3.2 Si la wyrazu logiki pierwszego rz ,edu . . . . . . . . . . . . . . . . . . . . . . . . . 20 3.3 Nierozstrzygalno´s´c . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21 4 Ograniczenia logiki pierwszego rz ,edu 27 4.1 Charakteryzacja Fra¨ıss´e . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27 4.2 Gra Ehrenfeuchta . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31 5 Paradygmaty dowodzenia 35 5.1 System hilbertowski . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35 5.2 System naturalnej dedukcji . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38 5.3 Rachunek sekwent´ow . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41 6 Pe lno´s´c rachunku zda´n 45 6.1 Elementy teorii modeli . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47 7 Pe lno´s´c rachunku predykat´ow 50 7.1 Hilbertowski system dowodzenia . . . . . . . . . . . . . . . . . . . . . . . . . . 50 7.2 Konstrukcja modelu ze sta lych . . . . . . . . . . . . . . . . . . . . . . . . . . . 54 8 Teoria modeli 58 9 Arytmetyka pierwszego rz ,edu 62 9.1 Twierdzenie G¨odla o niezupe lno´sci . . . . . . . . . . . . . . . . . . . . . . . . . 63 10 Zdaniowa logika dynamiczna 68 10.1 Sk ladnia i semantyka PDL . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68 10.2 Przyk lady tautologii PDL . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71 10.3 W lasno´s´c ma lego modelu . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73 10.4 Aksjomatyzacja PDL . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 76 11 Logika intuicjonistyczna 80 11.1 Intuicjonistyczny rachunek zda´n . . . . . . . . . . . . . . . . . . . . . . . . . . . 81 11.2 Lambda-termy z typami . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84 11.3 Izomorﬁzm Curry’ego-Howarda (formu ly-typy) . . . . . . . . . . . . . . . . . . 86 105 12 Logika drugiego rz ,edu 88 12.1 Nieaksjomatyzowalno´s´c logiki drugiego rz ,edu . . . . . . . . . . . . . . . . . . . 88 12.2 R´ownowa˙zno´s´c logiki MSO i automat´ow sko´nczonych . . . . . . . . . . . . . . . 89 12.3 Informacja o tw. Fagina i Stockmeyera . . . . . . . . . . . . . . . . . . . . . . . 93 12.4 Informacja o tw. Rabina . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94 13 Logika w informatyce 95 13.1 Zdaniowe logiki tr´ojwarto´sciowe . . . . . . . . . . . . . . . . . . . . . . . . . . . 95 13.2 Tw. Codda . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 98 13.3 Rozstrzygalno´s´c i nierozstrzygalno´s´c teorii . . . . . . . . . . . . . . . . . . . . . 102 106","libVersion":"0.2.3","langs":""}